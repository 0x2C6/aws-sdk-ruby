{
  "type": "query",
  "api_version": "2013-02-12",
  "metadata": {
    "endpoint_prefix": "rds",
    "result_wrapped": true,
    "service_abbreviation": "Amazon RDS",
    "service_full_name": "Amazon Relational Database Service",
    "signature_version": "v4"
  },
  "documentation": "<fullname>Amazon Relational Database Service</fullname> <p> Amazon Relational Database Service (Amazon RDS) is a web service that makes it easier to set up, operate, and scale a relational database in the cloud. It provides cost-efficient, resizable capacity for an industry-standard relational database and manages common database administration tasks, freeing up developers to focus on what makes their applications and businesses unique. </p> <p> Amazon RDS gives you access to the capabilities of a familiar MySQL or Oracle database server. This means the code, applications, and tools you already use today with your existing MySQL or Oracle databases work with Amazon RDS without modification. Amazon RDS automatically backs up your database and maintains the database software that powers your DB Instance. Amazon RDS is flexible: you can scale your database instance's compute resources and storage capacity to meet your application's demand. As with all Amazon Web Services, there are no up-front investments, and you pay only for the resources you use. </p> <p> This is the <i>Amazon RDS API Reference</i>. It contains a comprehensive description of all Amazon RDS Query APIs and data types. Note that this API is asynchronous and some actions may require polling to determine when an action has been applied. See the parameter description to determine if a change is applied immediately or on the next instance reboot or during the maintenance window. For more information on Amazon RDS concepts and usage scenarios, see the Amazon RDS User Guide. </p>",
  "operations": {
    "add_source_identifier_to_subscription": {
      "name": "AddSourceIdentifierToSubscription",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Adds a source identifier to an existing RDS event notification subscription.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p></p>",
        "members": {
          "subscription_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The name of the RDS event notification subscription you want to add a source identifier to.</p>",
            "serialized_name": "SubscriptionName"
          },
          "source_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The identifier of the event source to be added. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens. </p> <p>Constraints:</p> <ul> <li>If the source type is a DB instance, then a DBInstanceIdentifier must be supplied.</li> <li>If the source type is a DB security group, a DBSecurityGroupName must be supplied.</li> <li>If the source type is a DB parameter group, a DBParameterGroupName must be supplied.</li> <li>If the source type is a DB Snapshot, a DBSnapshotIdentifier must be supplied.</li> </ul>",
            "serialized_name": "SourceIdentifier"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "event_subscription": {
            "type": "structure",
            "documentation": "<p>Contains the results of a successful invocation of the DescribeEventSubscriptions action.</p>",
            "serialized_name": "EventSubscription",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "customer_aws_id": {
                "type": "string",
                "documentation": "<p>The AWS customer account associated with the RDS event notification subscription.</p>",
                "serialized_name": "CustomerAwsId"
              },
              "cust_subscription_id": {
                "type": "string",
                "documentation": "<p>The RDS event notification subscription Id.</p>",
                "serialized_name": "CustSubscriptionId"
              },
              "sns_topic_arn": {
                "type": "string",
                "documentation": "<p>The topic ARN of the RDS event notification subscription.</p>",
                "serialized_name": "SnsTopicArn"
              },
              "status": {
                "type": "string",
                "documentation": "<p>The status of the RDS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that RDS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                "serialized_name": "Status"
              },
              "subscription_creation_time": {
                "type": "string",
                "documentation": "<p>The time the RDS event notification subscription was created.</p>",
                "serialized_name": "SubscriptionCreationTime"
              },
              "source_type": {
                "type": "string",
                "documentation": "<p>The source type for the RDS event notification subscription.</p>",
                "serialized_name": "SourceType"
              },
              "source_ids_list": {
                "type": "list",
                "documentation": "<p>A list of source Ids for the RDS event notification subscription.</p>",
                "serialized_name": "SourceIdsList",
                "members": {
                  "type": "string",
                  "serialized_name": "SourceId"
                }
              },
              "event_categories_list": {
                "type": "list",
                "documentation": "<p>A list of event categories for the RDS event notification subscription.</p>",
                "serialized_name": "EventCategoriesList",
                "members": {
                  "type": "string",
                  "serialized_name": "EventCategory"
                }
              },
              "enabled": {
                "type": "boolean",
                "documentation": "<p>A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.</p>",
                "serialized_name": "Enabled"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>The subscription name does not exist.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>The requested source could not be found.</p>",
          "members": {
          }
        }
      ]
    },
    "add_tags_to_resource": {
      "name": "AddTagsToResource",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Adds metadata tags to a DB Instance. These tags can also be used with cost allocation reporting to track cost associated with a DB Instance.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p></p>",
        "members": {
          "resource_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The DB Instance the tags will be added to. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html#USER_Tagging.ARN\"> Constructing an RDS Amazon Resource Name (ARN)</a>.</p>",
            "serialized_name": "ResourceName"
          },
          "tags": {
            "type": "list",
            "required": true,
            "documentation": "<p>The tags to be assigned to the DB Instance.</p>",
            "serialized_name": "Tags",
            "members": {
              "type": "structure",
              "documentation": "<p>Metadata assigned to a DB Instance consisting of a key-value pair.</p>",
              "serialized_name": "Tag",
              "members": {
                "key": {
                  "type": "string",
                  "documentation": "<p>A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\". The string may only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p`{L}\\\\p{Z}\\\\p{N}`_.:/=+\\\\-]*)$\").</p>",
                  "serialized_name": "Key"
                },
                "value": {
                  "type": "string",
                  "documentation": "<p>A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\". The string may only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p`{L}\\\\p{Z}\\\\p{N}`_.:/=+\\\\-]*)$\").</p>",
                  "serialized_name": "Value"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBInstanceIdentifier</i> does not refer to an existing DB Instance. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSnapshotIdentifier</i> does not refer to an existing DB Snapshot. </p>",
          "members": {
          }
        }
      ]
    },
    "authorize_db_security_group_ingress": {
      "name": "AuthorizeDBSecurityGroupIngress",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Enables ingress to a DBSecurityGroup using one of two forms of authorization. First, EC2 or VPC Security Groups can be added to the DBSecurityGroup if the application using the database is running on EC2 or VPC instances. Second, IP ranges are available if the application accessing your database is running on the Internet. Required parameters for this API are one of CIDR range, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId for non-VPC). </p> You cannot authorize ingress from an EC2 security group in one Region to an Amazon RDS DB Instance in another. You cannot authorize ingress from a VPC security group in one VPC to an Amazon RDS DB Instance in another. <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_security_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the DB Security Group to add authorization to. </p>",
            "serialized_name": "DBSecurityGroupName"
          },
          "cidrip": {
            "type": "string",
            "documentation": "<p> The IP range to authorize. </p>",
            "serialized_name": "CIDRIP"
          },
          "ec2_security_group_name": {
            "type": "string",
            "documentation": "<p> Name of the EC2 Security Group to authorize. For VPC DB Security Groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. </p>",
            "serialized_name": "EC2SecurityGroupName"
          },
          "ec2_security_group_id": {
            "type": "string",
            "documentation": "<p> Id of the EC2 Security Group to authorize. For VPC DB Security Groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. </p>",
            "serialized_name": "EC2SecurityGroupId"
          },
          "ec2_security_group_owner_id": {
            "type": "string",
            "documentation": "<p> AWS Account Number of the owner of the EC2 Security Group specified in the EC2SecurityGroupName parameter. The AWS Access Key ID is not an acceptable value. For VPC DB Security Groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. </p>",
            "serialized_name": "EC2SecurityGroupOwnerId"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_security_group": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>DescribeDBSecurityGroups</li> <li>AuthorizeDBSecurityGroupIngress</li> <li>CreateDBSecurityGroup</li> <li>RevokeDBSecurityGroupIngress</li> </ul> <p>This data type is used as a response element in the DescribeDBSecurityGroups action.</p>",
            "serialized_name": "DBSecurityGroup",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "owner_id": {
                "type": "string",
                "documentation": "<p> Provides the AWS ID of the owner of a specific DB Security Group. </p>",
                "serialized_name": "OwnerId"
              },
              "db_security_group_name": {
                "type": "string",
                "documentation": "<p> Specifies the name of the DB Security Group. </p>",
                "serialized_name": "DBSecurityGroupName"
              },
              "db_security_group_description": {
                "type": "string",
                "documentation": "<p> Provides the description of the DB Security Group. </p>",
                "serialized_name": "DBSecurityGroupDescription"
              },
              "vpc_id": {
                "type": "string",
                "documentation": "<p> Provides the VpcId of the DB Security Group. </p>",
                "serialized_name": "VpcId"
              },
              "ec2_security_groups": {
                "type": "list",
                "documentation": "<p> Contains a list of EC2SecurityGroup elements. </p>",
                "serialized_name": "EC2SecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>AuthorizeDBSecurityGroupIngress</li> <li>DescribeDBSecurityGroups</li> <li>RevokeDBSecurityGroupIngress</li> </ul>",
                  "serialized_name": "EC2SecurityGroup",
                  "members": {
                    "status": {
                      "type": "string",
                      "documentation": "<p> Provides the status of the EC2 security group. Status can be \"authorizing\", \"authorized\", \"revoking\", and \"revoked\". </p>",
                      "serialized_name": "Status"
                    },
                    "ec2_security_group_name": {
                      "type": "string",
                      "documentation": "<p> Specifies the name of the EC2 Security Group. </p>",
                      "serialized_name": "EC2SecurityGroupName"
                    },
                    "ec2_security_group_id": {
                      "type": "string",
                      "documentation": "<p> Specifies the id of the EC2 Security Group. </p>",
                      "serialized_name": "EC2SecurityGroupId"
                    },
                    "ec2_security_group_owner_id": {
                      "type": "string",
                      "documentation": "<p> Specifies the AWS ID of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> field. </p>",
                      "serialized_name": "EC2SecurityGroupOwnerId"
                    }
                  }
                }
              },
              "ip_ranges": {
                "type": "list",
                "documentation": "<p> Contains a list of IPRange elements. </p>",
                "serialized_name": "IPRanges",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the DescribeDBSecurityGroups action. </p>",
                  "serialized_name": "IPRange",
                  "members": {
                    "status": {
                      "type": "string",
                      "documentation": "<p> Specifies the status of the IP range. Status can be \"authorizing\", \"authorized\", \"revoking\", and \"revoked\". </p>",
                      "serialized_name": "Status"
                    },
                    "cidrip": {
                      "type": "string",
                      "documentation": "<p> Specifies the IP range. </p>",
                      "serialized_name": "CIDRIP"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBSecurityGroupName</i> does not refer to an existing DB Security Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The state of the DB Security Group does not allow deletion. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The specified CIDRIP or EC2 security group is already authorized for the specified DB security group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Database security group authorization quota has been reached. </p>",
          "members": {
          }
        }
      ]
    },
    "copy_db_snapshot": {
      "name": "CopyDBSnapshot",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Copies the specified DBSnapshot. The source DBSnapshot must be in the \"available\" state. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "source_db_snapshot_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The identifier for the source DB snapshot. </p> <p>Constraints:</p> <ul> <li>Must be the identifier for a valid system snapshot in the \"available\" state.</li> </ul> <p>Example: <code>rds:mydb-2012-04-02-00-01</code></p>",
            "serialized_name": "SourceDBSnapshotIdentifier"
          },
          "target_db_snapshot_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The identifier for the copied snapshot. </p> <p>Constraints:</p> <ul> <li>Cannot be null, empty, or blank</li> <li>Must contain from 1 to 255 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul> <p>Example: <code>my-db-snapshot</code></p>",
            "serialized_name": "TargetDBSnapshotIdentifier"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_snapshot": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBSnapshot</li> <li>DeleteDBSnapshot</li> </ul> <p>This data type is used as a response element in the DescribeDBSnapshots action.</p>",
            "serialized_name": "DBSnapshot",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_snapshot_identifier": {
                "type": "string",
                "documentation": "<p> Specifies the identifier for the DB Snapshot. </p>",
                "serialized_name": "DBSnapshotIdentifier"
              },
              "db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Specifies the the DBInstanceIdentifier of the DB Instance this DB Snapshot was created from. </p>",
                "serialized_name": "DBInstanceIdentifier"
              },
              "snapshot_create_time": {
                "type": "timestamp",
                "documentation": "<p> Provides the time (UTC) when the snapshot was taken. </p>",
                "serialized_name": "SnapshotCreateTime"
              },
              "engine": {
                "type": "string",
                "documentation": "<p> Specifies the name of the database engine. </p>",
                "serialized_name": "Engine"
              },
              "allocated_storage": {
                "type": "integer",
                "documentation": "<p> Specifies the allocated storage size in gigabytes (GB). </p>",
                "serialized_name": "AllocatedStorage"
              },
              "status": {
                "type": "string",
                "documentation": "<p> Specifies the status of this DB Snapshot. </p>",
                "serialized_name": "Status"
              },
              "port": {
                "type": "integer",
                "documentation": "<p> Specifies the port that the database engine was listening on at the time of the snapshot. </p>",
                "serialized_name": "Port"
              },
              "availability_zone": {
                "type": "string",
                "documentation": "<p> Specifies the name of the Availability Zone the DB Instance was located in at the time of the DB Snapshot. </p>",
                "serialized_name": "AvailabilityZone"
              },
              "vpc_id": {
                "type": "string",
                "documentation": "<p> Provides the Vpc Id associated with the DB Snapshot. </p>",
                "serialized_name": "VpcId"
              },
              "instance_create_time": {
                "type": "timestamp",
                "documentation": "<p> Specifies the time (UTC) when the snapshot was taken. </p>",
                "serialized_name": "InstanceCreateTime"
              },
              "master_username": {
                "type": "string",
                "documentation": "<p> Provides the master username for the DB Snapshot. </p>",
                "serialized_name": "MasterUsername"
              },
              "engine_version": {
                "type": "string",
                "documentation": "<p> Specifies the version of the database engine. </p>",
                "serialized_name": "EngineVersion"
              },
              "license_model": {
                "type": "string",
                "documentation": "<p> License model information for the restored DB Instance. </p>",
                "serialized_name": "LicenseModel"
              },
              "snapshot_type": {
                "type": "string",
                "documentation": "<p> Provides the type of the DB Snapshot. </p>",
                "serialized_name": "SnapshotType"
              },
              "iops": {
                "type": "integer",
                "documentation": "<p> Specifies the Provisioned IOPS (I/O operations per second) value of the DB Instance at the time of the snapshot. </p>",
                "serialized_name": "Iops"
              },
              "option_group_name": {
                "type": "string",
                "documentation": "<p> Provides the option group name for the DB Snapshot. </p>",
                "serialized_name": "OptionGroupName"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBSnapshotIdentifier</i> is already used by an existing snapshot. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSnapshotIdentifier</i> does not refer to an existing DB Snapshot. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The state of the DB Security Snapshot does not allow deletion. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed number of DB Snapshots. </p>",
          "members": {
          }
        }
      ]
    },
    "create_db_instance": {
      "name": "CreateDBInstance",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Creates a new DB instance. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_name": {
            "type": "string",
            "documentation": "<p>The meaning of this parameter differs according to the database engine you use.</p> <p><b>MySQL</b></p> <p>The name of the database to create when the DB Instance is created. If this parameter is not specified, no database is created in the DB Instance. </p> <p>Constraints:</p> <ul> <li>Must contain 1 to 64 alphanumeric characters</li> <li>Cannot be a word reserved by the specified database engine</li> </ul> <p>Type: String</p> <p><b>Oracle</b></p> <p> The Oracle System ID (SID) of the created DB Instance. </p> <p>Default: <code>ORCL</code></p> <p>Constraints:</p> <ul> <li>Cannot be longer than 8 characters</li> </ul> <p><b>SQL Server</b></p> <p>Not applicable. Must be null.</p>",
            "serialized_name": "DBName"
          },
          "db_instance_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The DB Instance identifier. This parameter is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li>Must contain from 1 to 63 alphanumeric characters or hyphens (1 to 15 for SQL Server).</li> <li>First character must be a letter.</li> <li>Cannot end with a hyphen or contain two consecutive hyphens.</li> </ul> <p>Example: <code>mydbinstance</code></p>",
            "serialized_name": "DBInstanceIdentifier"
          },
          "allocated_storage": {
            "type": "integer",
            "required": true,
            "documentation": "<p> The amount of storage (in gigabytes) to be initially allocated for the database instance. </p> <p><b>MySQL</b></p> <p> Constraints: Must be an integer from 5 to 1024.</p> <p> Type: Integer</p> <p><b>Oracle</b></p> <p> Constraints: Must be an integer from 10 to 1024.</p> <p><b>SQL Server</b></p> <p> Constraints: Must be an integer from 200 to 1024 (Standard Edition and Enterprise Edition) or from 30 to 1024 (Express Edition and Web Edition)</p>",
            "serialized_name": "AllocatedStorage"
          },
          "db_instance_class": {
            "type": "string",
            "required": true,
            "documentation": "<p> The compute and memory capacity of the DB Instance. </p> <p> Valid Values: <code>db.t1.micro | db.m1.small | db.m1.medium | db.m1.large | db.m1.xlarge | db.m2.xlarge |db.m2.2xlarge | db.m2.4xlarge</code> </p>",
            "serialized_name": "DBInstanceClass"
          },
          "engine": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the database engine to be used for this instance. </p> <p> Valid Values: <code>MySQL</code> | <code>oracle-se1</code> | <code>oracle-se</code> | <code>oracle-ee</code> | <code>sqlserver-ee</code> | <code>sqlserver-se</code> | <code>sqlserver-ex</code> | <code>sqlserver-web</code> </p>",
            "serialized_name": "Engine"
          },
          "master_username": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of master user for the client DB Instance. </p> <p><b>MySQL</b></p> <p>Constraints:</p> <ul> <li>Must be 1 to 16 alphanumeric characters.</li> <li>First character must be a letter.</li> <li>Cannot be a reserved word for the chosen database engine.</li> </ul> <p>Type: String</p> <p><b>Oracle</b></p> <p>Constraints:</p> <ul> <li>Must be 1 to 30 alphanumeric characters.</li> <li>First character must be a letter.</li> <li>Cannot be a reserved word for the chosen database engine.</li> </ul> <p><b>SQL Server</b></p> <p>Constraints:</p> <ul> <li>Must be 1 to 128 alphanumeric characters.</li> <li>First character must be a letter.</li> <li>Cannot be a reserved word for the chosen database engine.</li> </ul>",
            "serialized_name": "MasterUsername"
          },
          "master_user_password": {
            "type": "string",
            "required": true,
            "documentation": "<p> The password for the master database user. Can be any printable ASCII character except \"/\", \"\\\", or \"@\". </p> <p>Type: String</p> <p><b>MySQL</b></p> <p> Constraints: Must contain from 8 to 41 alphanumeric characters. </p> <p><b>Oracle</b></p> <p> Constraints: Must contain from 8 to 30 alphanumeric characters. </p> <p><b>SQL Server</b></p> <p> Constraints: Must contain from 8 to 128 alphanumeric characters. </p>",
            "serialized_name": "MasterUserPassword"
          },
          "db_security_groups": {
            "type": "list",
            "documentation": "<p> A list of DB Security Groups to associate with this DB Instance. </p> <p> Default: The default DB Security Group for the database engine. </p>",
            "serialized_name": "DBSecurityGroups",
            "members": {
              "type": "string",
              "serialized_name": "DBSecurityGroupName"
            }
          },
          "vpc_security_group_ids": {
            "type": "list",
            "documentation": "<p> A list of EC2 VPC Security Groups to associate with this DB Instance. </p> <p> Default: The default EC2 VPC Security Group for the DB Subnet group's VPC. </p>",
            "serialized_name": "VpcSecurityGroupIds",
            "members": {
              "type": "string",
              "serialized_name": "VpcSecurityGroupId"
            }
          },
          "availability_zone": {
            "type": "string",
            "documentation": "<p> The EC2 Availability Zone that the database instance will be created in. </p> <p> Default: A random, system-chosen Availability Zone in the endpoint's region. </p> <p> Example: <code>us-east-1d</code> </p> <p> Constraint: The AvailabilityZone parameter cannot be specified if the MultiAZ parameter is set to <code>true</code>. The specified Availability Zone must be in the same region as the current endpoint. </p>",
            "serialized_name": "AvailabilityZone"
          },
          "db_subnet_group_name": {
            "type": "string",
            "documentation": "<p> A DB Subnet Group to associate with this DB Instance. </p> <p> If there is no DB Subnet Group, then it is a non-VPC DB instance. </p>",
            "serialized_name": "DBSubnetGroupName"
          },
          "preferred_maintenance_window": {
            "type": "string",
            "documentation": "<p> The weekly time range (in UTC) during which system maintenance can occur. </p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> Default: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"> Adjusting the Preferred Maintenance Window</a> in the Amazon RDS User Guide. </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>",
            "serialized_name": "PreferredMaintenanceWindow"
          },
          "db_parameter_group_name": {
            "type": "string",
            "documentation": "<p> The name of the DB Parameter Group to associate with this DB instance. If this argument is omitted, the default DBParameterGroup for the specified engine will be used. </p> <p> Constraints: </p> <ul> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBParameterGroupName"
          },
          "backup_retention_period": {
            "type": "integer",
            "documentation": "<p> The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups. </p> <p> Default: 1 </p> <p>Constraints:</p> <ul> <li>Must be a value from 0 to 8</li> <li>Cannot be set to 0 if the DB Instance is a master instance with read replicas</li> </ul>",
            "serialized_name": "BackupRetentionPeriod"
          },
          "preferred_backup_window": {
            "type": "string",
            "documentation": "<p> The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter. </p> <p> Default: A 30-minute window selected at random from an 8-hour block of time per region. The following list shows the time blocks for each region from which the default backup windows are assigned. </p> <ul> <li> <b>US-East (Northern Virginia) Region:</b> 03:00-11:00 UTC</li> <li> <b>US-West (Northern California) Region:</b> 06:00-14:00 UTC</li> <li> <b>EU (Ireland) Region:</b> 22:00-06:00 UTC</li> <li> <b>Asia Pacific (Singapore) Region:</b> 14:00-22:00 UTC</li> <li> <b>Asia Pacific (Tokyo) Region: </b> 17:00-03:00 UTC</li> </ul> <p> Constraints: Must be in the format <code>hh24:mi-hh24:mi</code>. Times should be Universal Time Coordinated (UTC). Must not conflict with the preferred maintenance window. Must be at least 30 minutes. </p>",
            "serialized_name": "PreferredBackupWindow"
          },
          "port": {
            "type": "integer",
            "documentation": "<p> The port number on which the database accepts connections. </p> <p><b>MySQL</b></p> <p> Default: <code>3306</code> </p> <p> Valid Values: <code>1150-65535</code> </p> <p>Type: Integer </p> <p><b>Oracle</b></p> <p> Default: <code>1521</code> </p> <p> Valid Values: <code>1150-65535</code> </p> <p><b>SQL Server</b></p> <p> Default: <code>1433</code> </p> <p> Valid Values: <code>1150-65535</code> except for <code>1434</code> and <code>3389</code>. </p>",
            "serialized_name": "Port"
          },
          "multi_az": {
            "type": "boolean",
            "documentation": "<p> Specifies if the DB Instance is a Multi-AZ deployment. You cannot set the AvailabilityZone parameter if the MultiAZ parameter is set to true. </p>",
            "serialized_name": "MultiAZ"
          },
          "engine_version": {
            "type": "string",
            "documentation": "<p> The version number of the database engine to use. </p> <p><b>MySQL</b></p> <p>Example: <code>5.1.42</code></p> <p>Type: String</p> <p><b>Oracle</b></p> <p>Example: <code>11.2.0.2.v2</code></p> <p>Type: String</p> <p><b>SQL Server</b></p> <p>Example: <code>10.50.2789.0.v1</code></p>",
            "serialized_name": "EngineVersion"
          },
          "auto_minor_version_upgrade": {
            "type": "boolean",
            "documentation": "<p> Indicates that minor engine upgrades will be applied automatically to the DB Instance during the maintenance window. </p> <p>Default: <code>true</code></p>",
            "serialized_name": "AutoMinorVersionUpgrade"
          },
          "license_model": {
            "type": "string",
            "documentation": "<p> License model information for this DB Instance. </p> <p> Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
            "serialized_name": "LicenseModel"
          },
          "iops": {
            "type": "integer",
            "documentation": "<p> The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB Instance. </p> <p> Constraints: Must be an integer greater than 1000.</p>",
            "serialized_name": "Iops"
          },
          "option_group_name": {
            "type": "string",
            "documentation": "<p> Indicates that the DB Instance should be associated with the specified option group. </p> <p> Permanent options, such as the TDE option for Oracle Advanced Security TDE, cannot be removed from an option group, and that option group cannot be removed from a DB instance once it is associated with a DB instance </p>",
            "serialized_name": "OptionGroupName"
          },
          "character_set_name": {
            "type": "string",
            "documentation": "<p> For supported engines, indicates that the DB Instance should be associated with the specified CharacterSet. </p>",
            "serialized_name": "CharacterSetName"
          },
          "publicly_accessible": {
            "type": "boolean",
            "documentation": "<p> Specifies the accessibility options for the DB Instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p> <p> Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case. </p> <ul> <li> <b>Default VPC:</b>true</li> <li> <b>VPC:</b>false</li> </ul> <p> If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private. </p>",
            "serialized_name": "PubliclyAccessible"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_instance": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBInstance</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> </ul> <p>This data type is used as a response element in the DescribeDBInstances action.</p>",
            "serialized_name": "DBInstance",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains a user-supplied database identifier. This is the unique key that identifies a DB Instance. </p>",
                "serialized_name": "DBInstanceIdentifier"
              },
              "db_instance_class": {
                "type": "string",
                "documentation": "<p> Contains the name of the compute and memory capacity class of the DB Instance. </p>",
                "serialized_name": "DBInstanceClass"
              },
              "engine": {
                "type": "string",
                "documentation": "<p> Provides the name of the database engine to be used for this DB Instance. </p>",
                "serialized_name": "Engine"
              },
              "db_instance_status": {
                "type": "string",
                "documentation": "<p> Specifies the current state of this database. </p>",
                "serialized_name": "DBInstanceStatus"
              },
              "master_username": {
                "type": "string",
                "documentation": "<p> Contains the master username for the DB Instance. </p>",
                "serialized_name": "MasterUsername"
              },
              "db_name": {
                "type": "string",
                "documentation": "<p>The meaning of this parameter differs according to the database engine you use.</p> <p><b>MySQL</b></p> <p> Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB Instance was created. This same name is returned for the life of the DB Instance. </p> <p>Type: String</p> <p><b>Oracle</b></p> <p> Contains the Oracle System ID (SID) of the created DB Instance. </p>",
                "serialized_name": "DBName"
              },
              "endpoint": {
                "type": "structure",
                "documentation": "<p> Specifies the connection endpoint. </p>",
                "serialized_name": "Endpoint",
                "members": {
                  "address": {
                    "type": "string",
                    "documentation": "<p> Specifies the DNS address of the DB Instance. </p>",
                    "serialized_name": "Address"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the port that the database engine is listening on. </p>",
                    "serialized_name": "Port"
                  }
                }
              },
              "allocated_storage": {
                "type": "integer",
                "documentation": "<p> Specifies the allocated storage size specified in gigabytes. </p>",
                "serialized_name": "AllocatedStorage"
              },
              "instance_create_time": {
                "type": "timestamp",
                "documentation": "<p> Provides the date and time the DB Instance was created. </p>",
                "serialized_name": "InstanceCreateTime"
              },
              "preferred_backup_window": {
                "type": "string",
                "documentation": "<p> Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. </p>",
                "serialized_name": "PreferredBackupWindow"
              },
              "backup_retention_period": {
                "type": "integer",
                "documentation": "<p> Specifies the number of days for which automatic DB Snapshots are retained. </p>",
                "serialized_name": "BackupRetentionPeriod"
              },
              "db_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of DB Security Group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. </p>",
                "serialized_name": "DBSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> <li>RestoreDBInstanceToPointInTime</li> </ul>",
                  "serialized_name": "DBSecurityGroup",
                  "members": {
                    "db_security_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DB Security Group. </p>",
                      "serialized_name": "DBSecurityGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "vpc_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of VPC security group elements that the DB Instance belongs to. </p>",
                "serialized_name": "VpcSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p>This data type is used as a response element for queries on VPC security group membership.</p>",
                  "serialized_name": "VpcSecurityGroupMembership",
                  "members": {
                    "vpc_security_group_id": {
                      "type": "string",
                      "documentation": "<p>The name of the VPC security group.</p>",
                      "serialized_name": "VpcSecurityGroupId"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the VPC Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "db_parameter_groups": {
                "type": "list",
                "documentation": "<p> Provides the list of DB Parameter Groups applied to this DB Instance. </p>",
                "serialized_name": "DBParameterGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> The status of the DB Parameter Group. </p> <p>This data type is used as a response element in the following actions:</p> <ul> <li>CreateDBInstance</li> <li>CreateDBInstanceReadReplica</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> </ul>",
                  "serialized_name": "DBParameterGroup",
                  "members": {
                    "db_parameter_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DP Parameter Group. </p>",
                      "serialized_name": "DBParameterGroupName"
                    },
                    "parameter_apply_status": {
                      "type": "string",
                      "documentation": "<p> The status of parameter updates. </p>",
                      "serialized_name": "ParameterApplyStatus"
                    }
                  }
                }
              },
              "availability_zone": {
                "type": "string",
                "documentation": "<p> Specifies the name of the Availability Zone the DB Instance is located in. </p>",
                "serialized_name": "AvailabilityZone"
              },
              "db_subnet_group": {
                "type": "structure",
                "documentation": "<p> Provides the inforamtion of the subnet group associated with the DB instance, including the name, descrption and subnets in the subnet group. </p>",
                "serialized_name": "DBSubnetGroup",
                "metadata": {
                  "wrapper": true
                },
                "members": {
                  "db_subnet_group_name": {
                    "type": "string",
                    "documentation": "<p> Specifies the name of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupName"
                  },
                  "db_subnet_group_description": {
                    "type": "string",
                    "documentation": "<p> Provides the description of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupDescription"
                  },
                  "vpc_id": {
                    "type": "string",
                    "documentation": "<p> Provides the VpcId of the DB Subnet Group. </p>",
                    "serialized_name": "VpcId"
                  },
                  "subnet_group_status": {
                    "type": "string",
                    "documentation": "<p> Provides the status of the DB Subnet Group. </p>",
                    "serialized_name": "SubnetGroupStatus"
                  },
                  "subnets": {
                    "type": "list",
                    "documentation": "<p> Contains a list of Subnet elements. </p>",
                    "serialized_name": "Subnets",
                    "members": {
                      "type": "structure",
                      "documentation": "<p> This data type is used as a response element in the DescribeDBSubnetGroups action. </p>",
                      "serialized_name": "Subnet",
                      "members": {
                        "subnet_identifier": {
                          "type": "string",
                          "documentation": "<p> Specifies the identifier of the subnet. </p>",
                          "serialized_name": "SubnetIdentifier"
                        },
                        "subnet_availability_zone": {
                          "type": "structure",
                          "documentation": "<p> Contains Availability Zone information. </p> <p> This data type is used as an element in the following data type: <ul> <li>OrderableDBInstanceOption</li> </ul> </p>",
                          "serialized_name": "SubnetAvailabilityZone",
                          "metadata": {
                            "wrapper": true
                          },
                          "members": {
                            "name": {
                              "type": "string",
                              "documentation": "<p> The name of the availability zone. </p>",
                              "serialized_name": "Name"
                            },
                            "provisioned_iops_capable": {
                              "type": "boolean",
                              "documentation": "<p> True indicates the availability zone is capable of provisioned IOPs. </p>",
                              "serialized_name": "ProvisionedIopsCapable"
                            }
                          }
                        },
                        "subnet_status": {
                          "type": "string",
                          "documentation": "<p> Specifies the status of the subnet. </p>",
                          "serialized_name": "SubnetStatus"
                        }
                      }
                    }
                  }
                }
              },
              "preferred_maintenance_window": {
                "type": "string",
                "documentation": "<p> Specifies the weekly time range (in UTC) during which system maintenance can occur. </p>",
                "serialized_name": "PreferredMaintenanceWindow"
              },
              "pending_modified_values": {
                "type": "structure",
                "documentation": "<p> Specifies that changes to the DB Instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements. </p>",
                "serialized_name": "PendingModifiedValues",
                "members": {
                  "db_instance_class": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceClass</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceClass"
                  },
                  "allocated_storage": {
                    "type": "integer",
                    "documentation": "<p> Contains the new <code>AllocatedStorage</code> size for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "AllocatedStorage"
                  },
                  "master_user_password": {
                    "type": "string",
                    "documentation": "<p> Contains the pending or in-progress change of the master credentials for the DB Instance. </p>",
                    "serialized_name": "MasterUserPassword"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending port for the DB Instance. </p>",
                    "serialized_name": "Port"
                  },
                  "backup_retention_period": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending number of days for which automated backups are retained. </p>",
                    "serialized_name": "BackupRetentionPeriod"
                  },
                  "multi_az": {
                    "type": "boolean",
                    "documentation": "<p> Indicates that the Single-AZ DB Instance is to change to a Multi-AZ deployment. </p>",
                    "serialized_name": "MultiAZ"
                  },
                  "engine_version": {
                    "type": "string",
                    "documentation": "<p> Indicates the database engine version. </p>",
                    "serialized_name": "EngineVersion"
                  },
                  "iops": {
                    "type": "integer",
                    "documentation": "<p> Specifies the new Provisioned IOPS value for the DB Instance that will be applied or is being applied. </p>",
                    "serialized_name": "Iops"
                  },
                  "db_instance_identifier": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceIdentifier</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceIdentifier"
                  }
                }
              },
              "latest_restorable_time": {
                "type": "timestamp",
                "documentation": "<p> Specifies the latest time to which a database can be restored with point-in-time restore. </p>",
                "serialized_name": "LatestRestorableTime"
              },
              "multi_az": {
                "type": "boolean",
                "documentation": "<p> Specifies if the DB Instance is a Multi-AZ deployment. </p>",
                "serialized_name": "MultiAZ"
              },
              "engine_version": {
                "type": "string",
                "documentation": "<p> Indicates the database engine version. </p>",
                "serialized_name": "EngineVersion"
              },
              "auto_minor_version_upgrade": {
                "type": "boolean",
                "documentation": "<p> Indicates that minor version patches are applied automatically. </p>",
                "serialized_name": "AutoMinorVersionUpgrade"
              },
              "read_replica_source_db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains the identifier of the source DB Instance if this DB Instance is a Read Replica. </p>",
                "serialized_name": "ReadReplicaSourceDBInstanceIdentifier"
              },
              "read_replica_db_instance_identifiers": {
                "type": "list",
                "documentation": "<p> Contains one or more identifiers of the Read Replicas associated with this DB Instance. </p>",
                "serialized_name": "ReadReplicaDBInstanceIdentifiers",
                "members": {
                  "type": "string",
                  "serialized_name": "ReadReplicaDBInstanceIdentifier"
                }
              },
              "license_model": {
                "type": "string",
                "documentation": "<p> License model information for this DB Instance. </p>",
                "serialized_name": "LicenseModel"
              },
              "iops": {
                "type": "integer",
                "documentation": "<p> Specifies the Provisioned IOPS (I/O operations per second) value. </p>",
                "serialized_name": "Iops"
              },
              "option_group_memberships": {
                "type": "list",
                "documentation": "<p> Provides the list of option group memberships for this DB Instance. </p>",
                "serialized_name": "OptionGroupMemberships",
                "members": {
                  "type": "structure",
                  "documentation": "<p> Provides information on the option groups the DB instance is a member of. </p>",
                  "serialized_name": "OptionGroupMembership",
                  "members": {
                    "option_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the option group that the instance belongs to. </p>",
                      "serialized_name": "OptionGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Instance's option group membership (e.g. in-sync, pending, pending-maintenance, applying). </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "character_set_name": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the character set that this instance is associated with. </p>",
                "serialized_name": "CharacterSetName"
              },
              "secondary_availability_zone": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support. </p>",
                "serialized_name": "SecondaryAvailabilityZone"
              },
              "publicly_accessible": {
                "type": "boolean",
                "documentation": "<p> Specifies the accessibility options for the DB Instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p> <p> Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case. </p> <ul> <li> <b>Default VPC:</b>true</li> <li> <b>VPC:</b>false</li> </ul> <p> If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private. </p>",
                "serialized_name": "PubliclyAccessible"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> User already has a DB Instance with the given identifier. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Specified DB Instance class is not available in the specified Availability Zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBParameterGroupName</i> does not refer to an existing DB Parameter Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSecurityGroupName</i> does not refer to an existing DB Security Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed number of DB Instances. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed amount of storage available across all DB Instances. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSubnetGroupName</i> does not refer to an existing DB Subnet Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Subnets in the DB subnet group should cover at least 2 availability zones unless there's'only 1 available zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request subnet is valid, or all subnets are not in common Vpc. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> DB Subnet Group does not cover all availability zones after it is created because users' change. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Provisioned IOPS not available in the specified Availability Zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The specified option group could not be found. </p>",
          "members": {
          }
        }
      ]
    },
    "create_db_instance_read_replica": {
      "name": "CreateDBInstanceReadReplica",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Creates a DB Instance that acts as a Read Replica of a source DB Instance. </p> <p> All Read Replica DB Instances are created as Single-AZ deployments with backups disabled. All other DB Instance attributes (including DB Security Groups and DB Parameter Groups) are inherited from the source DB Instance, except as specified below. </p> <important> <p> The source DB Instance must have backup retention enabled. </p> </important>",
      "input": {
        "type": "structure",
        "members": {
          "db_instance_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The DB Instance identifier of the Read Replica. This is the unique key that identifies a DB Instance. This parameter is stored as a lowercase string. </p>",
            "serialized_name": "DBInstanceIdentifier"
          },
          "source_db_instance_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The identifier of the DB Instance that will act as the source for the Read Replica. Each DB Instance can have up to five Read Replicas. </p> <p>Constraints: Must be the identifier of an existing DB Instance that is not already a Read Replica DB Instance. </p>",
            "serialized_name": "SourceDBInstanceIdentifier"
          },
          "db_instance_class": {
            "type": "string",
            "documentation": "<p> The compute and memory capacity of the Read Replica. </p> <p> Valid Values: <code>db.m1.small | db.m1.medium | db.m1.large | db.m1.xlarge | db.m2.xlarge |db.m2.2xlarge | db.m2.4xlarge</code> </p> <p>Default: Inherits from the source DB Instance.</p>",
            "serialized_name": "DBInstanceClass"
          },
          "availability_zone": {
            "type": "string",
            "documentation": "<p> The Amazon EC2 Availability Zone that the Read Replica will be created in. </p> <p> Default: A random, system-chosen Availability Zone in the endpoint's region. </p> <p> Example: <code>us-east-1d</code> </p>",
            "serialized_name": "AvailabilityZone"
          },
          "port": {
            "type": "integer",
            "documentation": "<p> The port number that the DB Instance uses for connections. </p> <p>Default: Inherits from the source DB Instance</p> <p>Valid Values: <code>1150-65535</code></p>",
            "serialized_name": "Port"
          },
          "auto_minor_version_upgrade": {
            "type": "boolean",
            "documentation": "<p> Indicates that minor engine upgrades will be applied automatically to the Read Replica during the maintenance window. </p> <p>Default: Inherits from the source DB Instance</p>",
            "serialized_name": "AutoMinorVersionUpgrade"
          },
          "iops": {
            "type": "integer",
            "documentation": "<p> The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB Instance. </p>",
            "serialized_name": "Iops"
          },
          "option_group_name": {
            "type": "string",
            "documentation": "<p> The option group the DB instance will be associated with. If omitted, the default Option Group for the engine specified will be used. </p>",
            "serialized_name": "OptionGroupName"
          },
          "publicly_accessible": {
            "type": "boolean",
            "documentation": "<p> Specifies the accessibility options for the DB Instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p> <p> Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case. </p> <ul> <li> <b>Default VPC:</b>true</li> <li> <b>VPC:</b>false</li> </ul> <p> If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private. </p>",
            "serialized_name": "PubliclyAccessible"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_instance": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBInstance</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> </ul> <p>This data type is used as a response element in the DescribeDBInstances action.</p>",
            "serialized_name": "DBInstance",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains a user-supplied database identifier. This is the unique key that identifies a DB Instance. </p>",
                "serialized_name": "DBInstanceIdentifier"
              },
              "db_instance_class": {
                "type": "string",
                "documentation": "<p> Contains the name of the compute and memory capacity class of the DB Instance. </p>",
                "serialized_name": "DBInstanceClass"
              },
              "engine": {
                "type": "string",
                "documentation": "<p> Provides the name of the database engine to be used for this DB Instance. </p>",
                "serialized_name": "Engine"
              },
              "db_instance_status": {
                "type": "string",
                "documentation": "<p> Specifies the current state of this database. </p>",
                "serialized_name": "DBInstanceStatus"
              },
              "master_username": {
                "type": "string",
                "documentation": "<p> Contains the master username for the DB Instance. </p>",
                "serialized_name": "MasterUsername"
              },
              "db_name": {
                "type": "string",
                "documentation": "<p>The meaning of this parameter differs according to the database engine you use.</p> <p><b>MySQL</b></p> <p> Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB Instance was created. This same name is returned for the life of the DB Instance. </p> <p>Type: String</p> <p><b>Oracle</b></p> <p> Contains the Oracle System ID (SID) of the created DB Instance. </p>",
                "serialized_name": "DBName"
              },
              "endpoint": {
                "type": "structure",
                "documentation": "<p> Specifies the connection endpoint. </p>",
                "serialized_name": "Endpoint",
                "members": {
                  "address": {
                    "type": "string",
                    "documentation": "<p> Specifies the DNS address of the DB Instance. </p>",
                    "serialized_name": "Address"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the port that the database engine is listening on. </p>",
                    "serialized_name": "Port"
                  }
                }
              },
              "allocated_storage": {
                "type": "integer",
                "documentation": "<p> Specifies the allocated storage size specified in gigabytes. </p>",
                "serialized_name": "AllocatedStorage"
              },
              "instance_create_time": {
                "type": "timestamp",
                "documentation": "<p> Provides the date and time the DB Instance was created. </p>",
                "serialized_name": "InstanceCreateTime"
              },
              "preferred_backup_window": {
                "type": "string",
                "documentation": "<p> Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. </p>",
                "serialized_name": "PreferredBackupWindow"
              },
              "backup_retention_period": {
                "type": "integer",
                "documentation": "<p> Specifies the number of days for which automatic DB Snapshots are retained. </p>",
                "serialized_name": "BackupRetentionPeriod"
              },
              "db_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of DB Security Group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. </p>",
                "serialized_name": "DBSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> <li>RestoreDBInstanceToPointInTime</li> </ul>",
                  "serialized_name": "DBSecurityGroup",
                  "members": {
                    "db_security_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DB Security Group. </p>",
                      "serialized_name": "DBSecurityGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "vpc_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of VPC security group elements that the DB Instance belongs to. </p>",
                "serialized_name": "VpcSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p>This data type is used as a response element for queries on VPC security group membership.</p>",
                  "serialized_name": "VpcSecurityGroupMembership",
                  "members": {
                    "vpc_security_group_id": {
                      "type": "string",
                      "documentation": "<p>The name of the VPC security group.</p>",
                      "serialized_name": "VpcSecurityGroupId"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the VPC Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "db_parameter_groups": {
                "type": "list",
                "documentation": "<p> Provides the list of DB Parameter Groups applied to this DB Instance. </p>",
                "serialized_name": "DBParameterGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> The status of the DB Parameter Group. </p> <p>This data type is used as a response element in the following actions:</p> <ul> <li>CreateDBInstance</li> <li>CreateDBInstanceReadReplica</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> </ul>",
                  "serialized_name": "DBParameterGroup",
                  "members": {
                    "db_parameter_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DP Parameter Group. </p>",
                      "serialized_name": "DBParameterGroupName"
                    },
                    "parameter_apply_status": {
                      "type": "string",
                      "documentation": "<p> The status of parameter updates. </p>",
                      "serialized_name": "ParameterApplyStatus"
                    }
                  }
                }
              },
              "availability_zone": {
                "type": "string",
                "documentation": "<p> Specifies the name of the Availability Zone the DB Instance is located in. </p>",
                "serialized_name": "AvailabilityZone"
              },
              "db_subnet_group": {
                "type": "structure",
                "documentation": "<p> Provides the inforamtion of the subnet group associated with the DB instance, including the name, descrption and subnets in the subnet group. </p>",
                "serialized_name": "DBSubnetGroup",
                "metadata": {
                  "wrapper": true
                },
                "members": {
                  "db_subnet_group_name": {
                    "type": "string",
                    "documentation": "<p> Specifies the name of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupName"
                  },
                  "db_subnet_group_description": {
                    "type": "string",
                    "documentation": "<p> Provides the description of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupDescription"
                  },
                  "vpc_id": {
                    "type": "string",
                    "documentation": "<p> Provides the VpcId of the DB Subnet Group. </p>",
                    "serialized_name": "VpcId"
                  },
                  "subnet_group_status": {
                    "type": "string",
                    "documentation": "<p> Provides the status of the DB Subnet Group. </p>",
                    "serialized_name": "SubnetGroupStatus"
                  },
                  "subnets": {
                    "type": "list",
                    "documentation": "<p> Contains a list of Subnet elements. </p>",
                    "serialized_name": "Subnets",
                    "members": {
                      "type": "structure",
                      "documentation": "<p> This data type is used as a response element in the DescribeDBSubnetGroups action. </p>",
                      "serialized_name": "Subnet",
                      "members": {
                        "subnet_identifier": {
                          "type": "string",
                          "documentation": "<p> Specifies the identifier of the subnet. </p>",
                          "serialized_name": "SubnetIdentifier"
                        },
                        "subnet_availability_zone": {
                          "type": "structure",
                          "documentation": "<p> Contains Availability Zone information. </p> <p> This data type is used as an element in the following data type: <ul> <li>OrderableDBInstanceOption</li> </ul> </p>",
                          "serialized_name": "SubnetAvailabilityZone",
                          "metadata": {
                            "wrapper": true
                          },
                          "members": {
                            "name": {
                              "type": "string",
                              "documentation": "<p> The name of the availability zone. </p>",
                              "serialized_name": "Name"
                            },
                            "provisioned_iops_capable": {
                              "type": "boolean",
                              "documentation": "<p> True indicates the availability zone is capable of provisioned IOPs. </p>",
                              "serialized_name": "ProvisionedIopsCapable"
                            }
                          }
                        },
                        "subnet_status": {
                          "type": "string",
                          "documentation": "<p> Specifies the status of the subnet. </p>",
                          "serialized_name": "SubnetStatus"
                        }
                      }
                    }
                  }
                }
              },
              "preferred_maintenance_window": {
                "type": "string",
                "documentation": "<p> Specifies the weekly time range (in UTC) during which system maintenance can occur. </p>",
                "serialized_name": "PreferredMaintenanceWindow"
              },
              "pending_modified_values": {
                "type": "structure",
                "documentation": "<p> Specifies that changes to the DB Instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements. </p>",
                "serialized_name": "PendingModifiedValues",
                "members": {
                  "db_instance_class": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceClass</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceClass"
                  },
                  "allocated_storage": {
                    "type": "integer",
                    "documentation": "<p> Contains the new <code>AllocatedStorage</code> size for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "AllocatedStorage"
                  },
                  "master_user_password": {
                    "type": "string",
                    "documentation": "<p> Contains the pending or in-progress change of the master credentials for the DB Instance. </p>",
                    "serialized_name": "MasterUserPassword"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending port for the DB Instance. </p>",
                    "serialized_name": "Port"
                  },
                  "backup_retention_period": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending number of days for which automated backups are retained. </p>",
                    "serialized_name": "BackupRetentionPeriod"
                  },
                  "multi_az": {
                    "type": "boolean",
                    "documentation": "<p> Indicates that the Single-AZ DB Instance is to change to a Multi-AZ deployment. </p>",
                    "serialized_name": "MultiAZ"
                  },
                  "engine_version": {
                    "type": "string",
                    "documentation": "<p> Indicates the database engine version. </p>",
                    "serialized_name": "EngineVersion"
                  },
                  "iops": {
                    "type": "integer",
                    "documentation": "<p> Specifies the new Provisioned IOPS value for the DB Instance that will be applied or is being applied. </p>",
                    "serialized_name": "Iops"
                  },
                  "db_instance_identifier": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceIdentifier</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceIdentifier"
                  }
                }
              },
              "latest_restorable_time": {
                "type": "timestamp",
                "documentation": "<p> Specifies the latest time to which a database can be restored with point-in-time restore. </p>",
                "serialized_name": "LatestRestorableTime"
              },
              "multi_az": {
                "type": "boolean",
                "documentation": "<p> Specifies if the DB Instance is a Multi-AZ deployment. </p>",
                "serialized_name": "MultiAZ"
              },
              "engine_version": {
                "type": "string",
                "documentation": "<p> Indicates the database engine version. </p>",
                "serialized_name": "EngineVersion"
              },
              "auto_minor_version_upgrade": {
                "type": "boolean",
                "documentation": "<p> Indicates that minor version patches are applied automatically. </p>",
                "serialized_name": "AutoMinorVersionUpgrade"
              },
              "read_replica_source_db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains the identifier of the source DB Instance if this DB Instance is a Read Replica. </p>",
                "serialized_name": "ReadReplicaSourceDBInstanceIdentifier"
              },
              "read_replica_db_instance_identifiers": {
                "type": "list",
                "documentation": "<p> Contains one or more identifiers of the Read Replicas associated with this DB Instance. </p>",
                "serialized_name": "ReadReplicaDBInstanceIdentifiers",
                "members": {
                  "type": "string",
                  "serialized_name": "ReadReplicaDBInstanceIdentifier"
                }
              },
              "license_model": {
                "type": "string",
                "documentation": "<p> License model information for this DB Instance. </p>",
                "serialized_name": "LicenseModel"
              },
              "iops": {
                "type": "integer",
                "documentation": "<p> Specifies the Provisioned IOPS (I/O operations per second) value. </p>",
                "serialized_name": "Iops"
              },
              "option_group_memberships": {
                "type": "list",
                "documentation": "<p> Provides the list of option group memberships for this DB Instance. </p>",
                "serialized_name": "OptionGroupMemberships",
                "members": {
                  "type": "structure",
                  "documentation": "<p> Provides information on the option groups the DB instance is a member of. </p>",
                  "serialized_name": "OptionGroupMembership",
                  "members": {
                    "option_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the option group that the instance belongs to. </p>",
                      "serialized_name": "OptionGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Instance's option group membership (e.g. in-sync, pending, pending-maintenance, applying). </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "character_set_name": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the character set that this instance is associated with. </p>",
                "serialized_name": "CharacterSetName"
              },
              "secondary_availability_zone": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support. </p>",
                "serialized_name": "SecondaryAvailabilityZone"
              },
              "publicly_accessible": {
                "type": "boolean",
                "documentation": "<p> Specifies the accessibility options for the DB Instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p> <p> Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case. </p> <ul> <li> <b>Default VPC:</b>true</li> <li> <b>VPC:</b>false</li> </ul> <p> If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private. </p>",
                "serialized_name": "PubliclyAccessible"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> User already has a DB Instance with the given identifier. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Specified DB Instance class is not available in the specified Availability Zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBParameterGroupName</i> does not refer to an existing DB Parameter Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSecurityGroupName</i> does not refer to an existing DB Security Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed number of DB Instances. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed amount of storage available across all DB Instances. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBInstanceIdentifier</i> does not refer to an existing DB Instance. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The specified DB Instance is not in the <i>available</i> state. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSubnetGroupName</i> does not refer to an existing DB Subnet Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Subnets in the DB subnet group should cover at least 2 availability zones unless there's'only 1 available zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request subnet is valid, or all subnets are not in common Vpc. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> DB Subnet Group does not cover all availability zones after it is created because users' change. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Provisioned IOPS not available in the specified Availability Zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The specified option group could not be found. </p>",
          "members": {
          }
        }
      ]
    },
    "create_db_parameter_group": {
      "name": "CreateDBParameterGroup",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Creates a new DB Parameter Group. </p> <p> A DB Parameter Group is initially created with the default parameters for the database engine used by the DB Instance. To provide custom values for any of the parameters, you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once you've created a DB Parameter Group, you need to associate it with your DB Instance using <i>ModifyDBInstance</i>. When you associate a new DB Parameter Group with a running DB Instance, you need to reboot the DB Instance for the new DB Parameter Group and associated settings to take effect. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_parameter_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the DB Parameter Group. </p> <p> Constraints: </p> <ul> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul> This value is stored as a lower-case string.",
            "serialized_name": "DBParameterGroupName"
          },
          "db_parameter_group_family": {
            "type": "string",
            "required": true,
            "documentation": "<p> The DB Parameter Group Family name. A DB Parameter Group can be associated with one and only one DB Parameter Group Family, and can be applied only to a DB Instance running a database engine and engine version compatible with that DB Parameter Group Family. </p>",
            "serialized_name": "DBParameterGroupFamily"
          },
          "description": {
            "type": "string",
            "required": true,
            "documentation": "<p> The description for the DB Parameter Group. </p>",
            "serialized_name": "Description"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_parameter_group": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the CreateDBParameterGroup action. </p> <p> This data type is used as a request parameter in the DeleteDBParameterGroup action, and as a response element in the DescribeDBParameterGroups action. </p>",
            "serialized_name": "DBParameterGroup",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_parameter_group_name": {
                "type": "string",
                "documentation": "<p> Provides the name of the DB Parameter Group. </p>",
                "serialized_name": "DBParameterGroupName"
              },
              "db_parameter_group_family": {
                "type": "string",
                "documentation": "<p> Provides the name of the DB Parameter Group Family that this DB Parameter Group is compatible with. </p>",
                "serialized_name": "DBParameterGroupFamily"
              },
              "description": {
                "type": "string",
                "documentation": "<p> Provides the customer-specified description for this DB Parameter Group. </p>",
                "serialized_name": "Description"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed number of DB Parameter Groups. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> A DB Parameter Group with the same name exists. </p>",
          "members": {
          }
        }
      ]
    },
    "create_db_security_group": {
      "name": "CreateDBSecurityGroup",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Creates a new DB Security Group. DB Security Groups control access to a DB Instance. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_security_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name for the DB Security Group. This value is stored as a lowercase string. </p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens. Must not be \"Default\".</p> <p>Example: <code>mysecuritygroup</code></p>",
            "serialized_name": "DBSecurityGroupName"
          },
          "db_security_group_description": {
            "type": "string",
            "required": true,
            "documentation": "<p> The description for the DB Security Group. </p>",
            "serialized_name": "DBSecurityGroupDescription"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_security_group": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>DescribeDBSecurityGroups</li> <li>AuthorizeDBSecurityGroupIngress</li> <li>CreateDBSecurityGroup</li> <li>RevokeDBSecurityGroupIngress</li> </ul> <p>This data type is used as a response element in the DescribeDBSecurityGroups action.</p>",
            "serialized_name": "DBSecurityGroup",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "owner_id": {
                "type": "string",
                "documentation": "<p> Provides the AWS ID of the owner of a specific DB Security Group. </p>",
                "serialized_name": "OwnerId"
              },
              "db_security_group_name": {
                "type": "string",
                "documentation": "<p> Specifies the name of the DB Security Group. </p>",
                "serialized_name": "DBSecurityGroupName"
              },
              "db_security_group_description": {
                "type": "string",
                "documentation": "<p> Provides the description of the DB Security Group. </p>",
                "serialized_name": "DBSecurityGroupDescription"
              },
              "vpc_id": {
                "type": "string",
                "documentation": "<p> Provides the VpcId of the DB Security Group. </p>",
                "serialized_name": "VpcId"
              },
              "ec2_security_groups": {
                "type": "list",
                "documentation": "<p> Contains a list of EC2SecurityGroup elements. </p>",
                "serialized_name": "EC2SecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>AuthorizeDBSecurityGroupIngress</li> <li>DescribeDBSecurityGroups</li> <li>RevokeDBSecurityGroupIngress</li> </ul>",
                  "serialized_name": "EC2SecurityGroup",
                  "members": {
                    "status": {
                      "type": "string",
                      "documentation": "<p> Provides the status of the EC2 security group. Status can be \"authorizing\", \"authorized\", \"revoking\", and \"revoked\". </p>",
                      "serialized_name": "Status"
                    },
                    "ec2_security_group_name": {
                      "type": "string",
                      "documentation": "<p> Specifies the name of the EC2 Security Group. </p>",
                      "serialized_name": "EC2SecurityGroupName"
                    },
                    "ec2_security_group_id": {
                      "type": "string",
                      "documentation": "<p> Specifies the id of the EC2 Security Group. </p>",
                      "serialized_name": "EC2SecurityGroupId"
                    },
                    "ec2_security_group_owner_id": {
                      "type": "string",
                      "documentation": "<p> Specifies the AWS ID of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> field. </p>",
                      "serialized_name": "EC2SecurityGroupOwnerId"
                    }
                  }
                }
              },
              "ip_ranges": {
                "type": "list",
                "documentation": "<p> Contains a list of IPRange elements. </p>",
                "serialized_name": "IPRanges",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the DescribeDBSecurityGroups action. </p>",
                  "serialized_name": "IPRange",
                  "members": {
                    "status": {
                      "type": "string",
                      "documentation": "<p> Specifies the status of the IP range. Status can be \"authorizing\", \"authorized\", \"revoking\", and \"revoked\". </p>",
                      "serialized_name": "Status"
                    },
                    "cidrip": {
                      "type": "string",
                      "documentation": "<p> Specifies the IP range. </p>",
                      "serialized_name": "CIDRIP"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> A database security group with the name specified in <i>DBSecurityGroupName</i> already exists. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed number of DB Security Groups. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> A DB security group is not allowed for this action. </p>",
          "members": {
          }
        }
      ]
    },
    "create_db_snapshot": {
      "name": "CreateDBSnapshot",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Creates a DBSnapshot. The source DBInstance must be in \"available\" state. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_snapshot_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The identifier for the DB Snapshot. </p> <p>Constraints:</p> <ul> <li>Cannot be null, empty, or blank</li> <li>Must contain from 1 to 255 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul> <p>Example: <code>my-snapshot-id</code></p>",
            "serialized_name": "DBSnapshotIdentifier"
          },
          "db_instance_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The DB Instance identifier. This is the unique key that identifies a DB Instance. This parameter isn't case sensitive. </p> <p>Constraints:</p> <ul> <li>Must contain from 1 to 63 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBInstanceIdentifier"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_snapshot": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBSnapshot</li> <li>DeleteDBSnapshot</li> </ul> <p>This data type is used as a response element in the DescribeDBSnapshots action.</p>",
            "serialized_name": "DBSnapshot",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_snapshot_identifier": {
                "type": "string",
                "documentation": "<p> Specifies the identifier for the DB Snapshot. </p>",
                "serialized_name": "DBSnapshotIdentifier"
              },
              "db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Specifies the the DBInstanceIdentifier of the DB Instance this DB Snapshot was created from. </p>",
                "serialized_name": "DBInstanceIdentifier"
              },
              "snapshot_create_time": {
                "type": "timestamp",
                "documentation": "<p> Provides the time (UTC) when the snapshot was taken. </p>",
                "serialized_name": "SnapshotCreateTime"
              },
              "engine": {
                "type": "string",
                "documentation": "<p> Specifies the name of the database engine. </p>",
                "serialized_name": "Engine"
              },
              "allocated_storage": {
                "type": "integer",
                "documentation": "<p> Specifies the allocated storage size in gigabytes (GB). </p>",
                "serialized_name": "AllocatedStorage"
              },
              "status": {
                "type": "string",
                "documentation": "<p> Specifies the status of this DB Snapshot. </p>",
                "serialized_name": "Status"
              },
              "port": {
                "type": "integer",
                "documentation": "<p> Specifies the port that the database engine was listening on at the time of the snapshot. </p>",
                "serialized_name": "Port"
              },
              "availability_zone": {
                "type": "string",
                "documentation": "<p> Specifies the name of the Availability Zone the DB Instance was located in at the time of the DB Snapshot. </p>",
                "serialized_name": "AvailabilityZone"
              },
              "vpc_id": {
                "type": "string",
                "documentation": "<p> Provides the Vpc Id associated with the DB Snapshot. </p>",
                "serialized_name": "VpcId"
              },
              "instance_create_time": {
                "type": "timestamp",
                "documentation": "<p> Specifies the time (UTC) when the snapshot was taken. </p>",
                "serialized_name": "InstanceCreateTime"
              },
              "master_username": {
                "type": "string",
                "documentation": "<p> Provides the master username for the DB Snapshot. </p>",
                "serialized_name": "MasterUsername"
              },
              "engine_version": {
                "type": "string",
                "documentation": "<p> Specifies the version of the database engine. </p>",
                "serialized_name": "EngineVersion"
              },
              "license_model": {
                "type": "string",
                "documentation": "<p> License model information for the restored DB Instance. </p>",
                "serialized_name": "LicenseModel"
              },
              "snapshot_type": {
                "type": "string",
                "documentation": "<p> Provides the type of the DB Snapshot. </p>",
                "serialized_name": "SnapshotType"
              },
              "iops": {
                "type": "integer",
                "documentation": "<p> Specifies the Provisioned IOPS (I/O operations per second) value of the DB Instance at the time of the snapshot. </p>",
                "serialized_name": "Iops"
              },
              "option_group_name": {
                "type": "string",
                "documentation": "<p> Provides the option group name for the DB Snapshot. </p>",
                "serialized_name": "OptionGroupName"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBSnapshotIdentifier</i> is already used by an existing snapshot. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The specified DB Instance is not in the <i>available</i> state. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBInstanceIdentifier</i> does not refer to an existing DB Instance. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed number of DB Snapshots. </p>",
          "members": {
          }
        }
      ]
    },
    "create_db_subnet_group": {
      "name": "CreateDBSubnetGroup",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the region. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_subnet_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name for the DB Subnet Group. This value is stored as a lowercase string. </p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens. Must not be \"Default\".</p> <p>Example: <code>mySubnetgroup</code></p>",
            "serialized_name": "DBSubnetGroupName"
          },
          "db_subnet_group_description": {
            "type": "string",
            "required": true,
            "documentation": "<p> The description for the DB Subnet Group. </p>",
            "serialized_name": "DBSubnetGroupDescription"
          },
          "subnet_ids": {
            "type": "list",
            "required": true,
            "documentation": "<p> The EC2 Subnet IDs for the DB Subnet Group. </p>",
            "serialized_name": "SubnetIds",
            "members": {
              "type": "string",
              "serialized_name": "SubnetIdentifier"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_subnet_group": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBSubnetGroup</li> <li>ModifyDBSubnetGroup</li> <li>DescribeDBSubnetGroups</li> <li>DeleteDBSubnetGroup</li> </ul> <p>This data type is used as a response element in the DescribeDBSubnetGroups action.</p>",
            "serialized_name": "DBSubnetGroup",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_subnet_group_name": {
                "type": "string",
                "documentation": "<p> Specifies the name of the DB Subnet Group. </p>",
                "serialized_name": "DBSubnetGroupName"
              },
              "db_subnet_group_description": {
                "type": "string",
                "documentation": "<p> Provides the description of the DB Subnet Group. </p>",
                "serialized_name": "DBSubnetGroupDescription"
              },
              "vpc_id": {
                "type": "string",
                "documentation": "<p> Provides the VpcId of the DB Subnet Group. </p>",
                "serialized_name": "VpcId"
              },
              "subnet_group_status": {
                "type": "string",
                "documentation": "<p> Provides the status of the DB Subnet Group. </p>",
                "serialized_name": "SubnetGroupStatus"
              },
              "subnets": {
                "type": "list",
                "documentation": "<p> Contains a list of Subnet elements. </p>",
                "serialized_name": "Subnets",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the DescribeDBSubnetGroups action. </p>",
                  "serialized_name": "Subnet",
                  "members": {
                    "subnet_identifier": {
                      "type": "string",
                      "documentation": "<p> Specifies the identifier of the subnet. </p>",
                      "serialized_name": "SubnetIdentifier"
                    },
                    "subnet_availability_zone": {
                      "type": "structure",
                      "documentation": "<p> Contains Availability Zone information. </p> <p> This data type is used as an element in the following data type: <ul> <li>OrderableDBInstanceOption</li> </ul> </p>",
                      "serialized_name": "SubnetAvailabilityZone",
                      "metadata": {
                        "wrapper": true
                      },
                      "members": {
                        "name": {
                          "type": "string",
                          "documentation": "<p> The name of the availability zone. </p>",
                          "serialized_name": "Name"
                        },
                        "provisioned_iops_capable": {
                          "type": "boolean",
                          "documentation": "<p> True indicates the availability zone is capable of provisioned IOPs. </p>",
                          "serialized_name": "ProvisionedIopsCapable"
                        }
                      }
                    },
                    "subnet_status": {
                      "type": "string",
                      "documentation": "<p> Specifies the status of the subnet. </p>",
                      "serialized_name": "SubnetStatus"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBSubnetGroupName</i> is already used by an existing DBSubnetGroup. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed number of DB Subnet Groups. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed number of subnets in a DB subnet Groups. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Subnets in the DB subnet group should cover at least 2 availability zones unless there's'only 1 available zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request subnet is valid, or all subnets are not in common Vpc. </p>",
          "members": {
          }
        }
      ]
    },
    "create_event_subscription": {
      "name": "CreateEventSubscription",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Creates an RDS event notification subscription. This action requires a topic ARN (Amazon Resource Name) created by either the RDS console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the type of source (SourceType) you want to be notified of, provide a list of RDS sources (SourceIds) that triggers the events, and provide a list of event categories (EventCategories) for events you want to be notified of. For example, you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2 and EventCategories = Availability, Backup.</p> <p>If you specify both the SourceType and SourceIds, such as SourceType = db-instance and SourceIdentifier = myDBInstance1, you will be notified of all the db-instance events for the specified source. If you specify a SourceType but do not specify a SourceIdentifier, you will receive notice of the events for that source type for all your RDS sources. If you do not specify either the SourceType nor the SourceIdentifier, you will be notified of events generated from all RDS sources belonging to your customer account.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p></p>",
        "members": {
          "subscription_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The name of the subscription. </p> <p>Constraints: The name must be less than 255 characters. </p>",
            "serialized_name": "SubscriptionName"
          },
          "sns_topic_arn": {
            "type": "string",
            "required": true,
            "documentation": "<p> The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it. </p>",
            "serialized_name": "SnsTopicArn"
          },
          "source_type": {
            "type": "string",
            "documentation": "<p> The type of source that will be generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. if this value is not specified, all events are returned. </p> <p>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</p>",
            "serialized_name": "SourceType"
          },
          "event_categories": {
            "type": "list",
            "documentation": "<p> A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType in the <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\">Events</a> topic in the Amazon RDS User Guide or by using the <b>DescribeEventCategories</b> action. </p>",
            "serialized_name": "EventCategories",
            "members": {
              "type": "string",
              "serialized_name": "EventCategory"
            }
          },
          "source_ids": {
            "type": "list",
            "documentation": "<p> The list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens. </p> <p>Constraints:</p> <ul> <li>If SourceIds are supplied, SourceType must also be provided.</li> <li>If the source type is a DB instance, then a DBInstanceIdentifier must be supplied.</li> <li>If the source type is a DB security group, a DBSecurityGroupName must be supplied.</li> <li>If the source type is a DB parameter group, a DBParameterGroupName must be supplied.</li> <li>If the source type is a DB Snapshot, a DBSnapshotIdentifier must be supplied.</li> </ul>",
            "serialized_name": "SourceIds",
            "members": {
              "type": "string",
              "serialized_name": "SourceId"
            }
          },
          "enabled": {
            "type": "boolean",
            "documentation": "<p> A Boolean value; set to <b>true</b> to activate the subscription, set to <b>false</b> to create the subscription but not active it. </p>",
            "serialized_name": "Enabled"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "event_subscription": {
            "type": "structure",
            "documentation": "<p>Contains the results of a successful invocation of the DescribeEventSubscriptions action.</p>",
            "serialized_name": "EventSubscription",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "customer_aws_id": {
                "type": "string",
                "documentation": "<p>The AWS customer account associated with the RDS event notification subscription.</p>",
                "serialized_name": "CustomerAwsId"
              },
              "cust_subscription_id": {
                "type": "string",
                "documentation": "<p>The RDS event notification subscription Id.</p>",
                "serialized_name": "CustSubscriptionId"
              },
              "sns_topic_arn": {
                "type": "string",
                "documentation": "<p>The topic ARN of the RDS event notification subscription.</p>",
                "serialized_name": "SnsTopicArn"
              },
              "status": {
                "type": "string",
                "documentation": "<p>The status of the RDS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that RDS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                "serialized_name": "Status"
              },
              "subscription_creation_time": {
                "type": "string",
                "documentation": "<p>The time the RDS event notification subscription was created.</p>",
                "serialized_name": "SubscriptionCreationTime"
              },
              "source_type": {
                "type": "string",
                "documentation": "<p>The source type for the RDS event notification subscription.</p>",
                "serialized_name": "SourceType"
              },
              "source_ids_list": {
                "type": "list",
                "documentation": "<p>A list of source Ids for the RDS event notification subscription.</p>",
                "serialized_name": "SourceIdsList",
                "members": {
                  "type": "string",
                  "serialized_name": "SourceId"
                }
              },
              "event_categories_list": {
                "type": "list",
                "documentation": "<p>A list of event categories for the RDS event notification subscription.</p>",
                "serialized_name": "EventCategoriesList",
                "members": {
                  "type": "string",
                  "serialized_name": "EventCategory"
                }
              },
              "enabled": {
                "type": "boolean",
                "documentation": "<p>A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.</p>",
                "serialized_name": "Enabled"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>You have reached the maximum number of event subscriptions.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>The supplied subscription name already exists.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>SNS has responded that there is a problem with the SND topic specified.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>You do not have permission to publish to the SNS topic ARN.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>The SNS topic ARN does not exist.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>The supplied category does not exist.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>The requested source could not be found.</p>",
          "members": {
          }
        }
      ]
    },
    "create_option_group": {
      "name": "CreateOptionGroup",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Creates a new Option Group. You can create up to 20 option groups. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p></p>",
        "members": {
          "option_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> Specifies the name of the option group to be created. </p> <p> Constraints: </p> <ul> <li>Must be 1 to 255 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul> <p>Example: <code>myOptiongroup</code></p>",
            "serialized_name": "OptionGroupName"
          },
          "engine_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> Specifies the name of the engine that this option group should be associated with. </p>",
            "serialized_name": "EngineName"
          },
          "major_engine_version": {
            "type": "string",
            "required": true,
            "documentation": "<p> Specifies the major version of the engine that this option group should be associated with. </p>",
            "serialized_name": "MajorEngineVersion"
          },
          "option_group_description": {
            "type": "string",
            "required": true,
            "documentation": "<p> The description of the option group. </p>",
            "serialized_name": "OptionGroupDescription"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "option_group": {
            "type": "structure",
            "documentation": "<p> </p>",
            "serialized_name": "OptionGroup",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "option_group_name": {
                "type": "string",
                "documentation": "<p> Specifies the name of the option group. </p>",
                "serialized_name": "OptionGroupName"
              },
              "option_group_description": {
                "type": "string",
                "documentation": "<p> Provides the description of the option group. </p>",
                "serialized_name": "OptionGroupDescription"
              },
              "engine_name": {
                "type": "string",
                "documentation": "<p> Engine name that this option group can be applied to. </p>",
                "serialized_name": "EngineName"
              },
              "major_engine_version": {
                "type": "string",
                "documentation": "<p> Indicates the major engine version associated with this option group. </p>",
                "serialized_name": "MajorEngineVersion"
              },
              "options": {
                "type": "list",
                "documentation": "<p> Indicates what options are available in the option group. </p>",
                "serialized_name": "Options",
                "members": {
                  "type": "structure",
                  "documentation": "<p> Option details. </p>",
                  "serialized_name": "Option",
                  "members": {
                    "option_name": {
                      "type": "string",
                      "documentation": "<p> The name of the option. </p>",
                      "serialized_name": "OptionName"
                    },
                    "option_description": {
                      "type": "string",
                      "documentation": "<p> The description of the option. </p>",
                      "serialized_name": "OptionDescription"
                    },
                    "persistent": {
                      "type": "boolean",
                      "documentation": "<p> Indicate if this option is persistent. </p>",
                      "serialized_name": "Persistent"
                    },
                    "port": {
                      "type": "integer",
                      "documentation": "<p> If required, the port configured for this option to use. </p>",
                      "serialized_name": "Port"
                    },
                    "option_settings": {
                      "type": "list",
                      "documentation": "<p> The option settings for this option. </p>",
                      "serialized_name": "OptionSettings",
                      "members": {
                        "type": "structure",
                        "documentation": "<p> Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values. </p>",
                        "serialized_name": "OptionSetting",
                        "members": {
                          "name": {
                            "type": "string",
                            "documentation": "<p> The name of the option that has settings that you can set. </p>",
                            "serialized_name": "Name"
                          },
                          "value": {
                            "type": "string",
                            "documentation": "<p> The current value of the option setting. </p>",
                            "serialized_name": "Value"
                          },
                          "default_value": {
                            "type": "string",
                            "documentation": "<p> The default value of the option setting. </p>",
                            "serialized_name": "DefaultValue"
                          },
                          "description": {
                            "type": "string",
                            "documentation": "<p> The description of the option setting. </p>",
                            "serialized_name": "Description"
                          },
                          "apply_type": {
                            "type": "string",
                            "documentation": "<p> The DB engine specific parameter type. </p>",
                            "serialized_name": "ApplyType"
                          },
                          "data_type": {
                            "type": "string",
                            "documentation": "<p> The data type of the option setting. </p>",
                            "serialized_name": "DataType"
                          },
                          "allowed_values": {
                            "type": "string",
                            "documentation": "<p> The allowed values of the option setting. </p>",
                            "serialized_name": "AllowedValues"
                          },
                          "is_modifiable": {
                            "type": "boolean",
                            "documentation": "<p> A Boolean value that, when true, indicates the option setting can be modified from the default. </p>",
                            "serialized_name": "IsModifiable"
                          },
                          "is_collection": {
                            "type": "boolean",
                            "documentation": "<p> Indicates if the option setting is part of a collection. </p>",
                            "serialized_name": "IsCollection"
                          }
                        }
                      }
                    },
                    "db_security_group_memberships": {
                      "type": "list",
                      "documentation": "<p> If the option requires access to a port, then this DB Security Group allows access to the port. </p>",
                      "serialized_name": "DBSecurityGroupMemberships",
                      "members": {
                        "type": "structure",
                        "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> <li>RestoreDBInstanceToPointInTime</li> </ul>",
                        "serialized_name": "DBSecurityGroup",
                        "members": {
                          "db_security_group_name": {
                            "type": "string",
                            "documentation": "<p> The name of the DB Security Group. </p>",
                            "serialized_name": "DBSecurityGroupName"
                          },
                          "status": {
                            "type": "string",
                            "documentation": "<p> The status of the DB Security Group. </p>",
                            "serialized_name": "Status"
                          }
                        }
                      }
                    },
                    "vpc_security_group_memberships": {
                      "type": "list",
                      "documentation": "<p> If the option requires access to a port, then this VPC Security Group allows access to the port. </p>",
                      "serialized_name": "VpcSecurityGroupMemberships",
                      "members": {
                        "type": "structure",
                        "documentation": "<p>This data type is used as a response element for queries on VPC security group membership.</p>",
                        "serialized_name": "VpcSecurityGroupMembership",
                        "members": {
                          "vpc_security_group_id": {
                            "type": "string",
                            "documentation": "<p>The name of the VPC security group.</p>",
                            "serialized_name": "VpcSecurityGroupId"
                          },
                          "status": {
                            "type": "string",
                            "documentation": "<p> The status of the VPC Security Group. </p>",
                            "serialized_name": "Status"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "allows_vpc_and_non_vpc_instance_memberships": {
                "type": "boolean",
                "documentation": "<p> Indicates whether this option group can be applied to both VPC and non-VPC instances. The value 'true' indicates the option group can be applied to both VPC and non-VPC instances. </p>",
                "serialized_name": "AllowsVpcAndNonVpcInstanceMemberships"
              },
              "vpc_id": {
                "type": "string",
                "documentation": "<p> If AllowsVpcAndNonVpcInstanceMemberships is 'false', this field is blank. If AllowsVpcAndNonVpcInstanceMemberships is 'true' and this field is blank, then this option group can be applied to both VPC and non-VPC instances. If this field contains a value, then this option group can only be applied to instances that are in the VPC indicated by this field. </p>",
                "serialized_name": "VpcId"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> The option group you are trying to create already exists. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The quota of 20 option groups was exceeded for this AWS account. </p>",
          "members": {
          }
        }
      ]
    },
    "delete_db_instance": {
      "name": "DeleteDBInstance",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> The DeleteDBInstance action deletes a previously provisioned DB instance. A successful response from the web service indicates the request was received correctly. When you delete a DB instance, all automated backups for that instance are deleted and cannot be recovered. Manual DB Snapshots of the DB instance to be deleted are not deleted. </p> <p> If a final DBSnapshot is requested the status of the RDS instance will be \"deleting\" until the DBSnapshot is created. DescribeDBInstance is used to monitor the status of this operation. This cannot be canceled or reverted once submitted. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_instance_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The DB Instance identifier for the DB Instance to be deleted. This parameter isn't case sensitive. </p> <p>Constraints:</p> <ul> <li>Must contain from 1 to 63 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBInstanceIdentifier"
          },
          "skip_final_snapshot": {
            "type": "boolean",
            "documentation": "<p> Determines whether a final DB Snapshot is created before the DB Instance is deleted. If <code>true</code> is specified, no DBSnapshot is created. If false is specified, a DB Snapshot is created before the DB Instance is deleted. </p> The FinalDBSnapshotIdentifier parameter must be specified if SkipFinalSnapshot is <code>false</code>. <p>Default: <code>false</code></p>",
            "serialized_name": "SkipFinalSnapshot"
          },
          "final_db_snapshot_identifier": {
            "type": "string",
            "documentation": "<p> The DBSnapshotIdentifier of the new DBSnapshot created when SkipFinalSnapshot is set to <code>false</code>. </p> Specifying this parameter and also setting the SkipFinalShapshot parameter to true results in an error. <p>Constraints:</p> <ul> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "FinalDBSnapshotIdentifier"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_instance": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBInstance</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> </ul> <p>This data type is used as a response element in the DescribeDBInstances action.</p>",
            "serialized_name": "DBInstance",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains a user-supplied database identifier. This is the unique key that identifies a DB Instance. </p>",
                "serialized_name": "DBInstanceIdentifier"
              },
              "db_instance_class": {
                "type": "string",
                "documentation": "<p> Contains the name of the compute and memory capacity class of the DB Instance. </p>",
                "serialized_name": "DBInstanceClass"
              },
              "engine": {
                "type": "string",
                "documentation": "<p> Provides the name of the database engine to be used for this DB Instance. </p>",
                "serialized_name": "Engine"
              },
              "db_instance_status": {
                "type": "string",
                "documentation": "<p> Specifies the current state of this database. </p>",
                "serialized_name": "DBInstanceStatus"
              },
              "master_username": {
                "type": "string",
                "documentation": "<p> Contains the master username for the DB Instance. </p>",
                "serialized_name": "MasterUsername"
              },
              "db_name": {
                "type": "string",
                "documentation": "<p>The meaning of this parameter differs according to the database engine you use.</p> <p><b>MySQL</b></p> <p> Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB Instance was created. This same name is returned for the life of the DB Instance. </p> <p>Type: String</p> <p><b>Oracle</b></p> <p> Contains the Oracle System ID (SID) of the created DB Instance. </p>",
                "serialized_name": "DBName"
              },
              "endpoint": {
                "type": "structure",
                "documentation": "<p> Specifies the connection endpoint. </p>",
                "serialized_name": "Endpoint",
                "members": {
                  "address": {
                    "type": "string",
                    "documentation": "<p> Specifies the DNS address of the DB Instance. </p>",
                    "serialized_name": "Address"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the port that the database engine is listening on. </p>",
                    "serialized_name": "Port"
                  }
                }
              },
              "allocated_storage": {
                "type": "integer",
                "documentation": "<p> Specifies the allocated storage size specified in gigabytes. </p>",
                "serialized_name": "AllocatedStorage"
              },
              "instance_create_time": {
                "type": "timestamp",
                "documentation": "<p> Provides the date and time the DB Instance was created. </p>",
                "serialized_name": "InstanceCreateTime"
              },
              "preferred_backup_window": {
                "type": "string",
                "documentation": "<p> Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. </p>",
                "serialized_name": "PreferredBackupWindow"
              },
              "backup_retention_period": {
                "type": "integer",
                "documentation": "<p> Specifies the number of days for which automatic DB Snapshots are retained. </p>",
                "serialized_name": "BackupRetentionPeriod"
              },
              "db_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of DB Security Group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. </p>",
                "serialized_name": "DBSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> <li>RestoreDBInstanceToPointInTime</li> </ul>",
                  "serialized_name": "DBSecurityGroup",
                  "members": {
                    "db_security_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DB Security Group. </p>",
                      "serialized_name": "DBSecurityGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "vpc_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of VPC security group elements that the DB Instance belongs to. </p>",
                "serialized_name": "VpcSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p>This data type is used as a response element for queries on VPC security group membership.</p>",
                  "serialized_name": "VpcSecurityGroupMembership",
                  "members": {
                    "vpc_security_group_id": {
                      "type": "string",
                      "documentation": "<p>The name of the VPC security group.</p>",
                      "serialized_name": "VpcSecurityGroupId"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the VPC Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "db_parameter_groups": {
                "type": "list",
                "documentation": "<p> Provides the list of DB Parameter Groups applied to this DB Instance. </p>",
                "serialized_name": "DBParameterGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> The status of the DB Parameter Group. </p> <p>This data type is used as a response element in the following actions:</p> <ul> <li>CreateDBInstance</li> <li>CreateDBInstanceReadReplica</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> </ul>",
                  "serialized_name": "DBParameterGroup",
                  "members": {
                    "db_parameter_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DP Parameter Group. </p>",
                      "serialized_name": "DBParameterGroupName"
                    },
                    "parameter_apply_status": {
                      "type": "string",
                      "documentation": "<p> The status of parameter updates. </p>",
                      "serialized_name": "ParameterApplyStatus"
                    }
                  }
                }
              },
              "availability_zone": {
                "type": "string",
                "documentation": "<p> Specifies the name of the Availability Zone the DB Instance is located in. </p>",
                "serialized_name": "AvailabilityZone"
              },
              "db_subnet_group": {
                "type": "structure",
                "documentation": "<p> Provides the inforamtion of the subnet group associated with the DB instance, including the name, descrption and subnets in the subnet group. </p>",
                "serialized_name": "DBSubnetGroup",
                "metadata": {
                  "wrapper": true
                },
                "members": {
                  "db_subnet_group_name": {
                    "type": "string",
                    "documentation": "<p> Specifies the name of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupName"
                  },
                  "db_subnet_group_description": {
                    "type": "string",
                    "documentation": "<p> Provides the description of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupDescription"
                  },
                  "vpc_id": {
                    "type": "string",
                    "documentation": "<p> Provides the VpcId of the DB Subnet Group. </p>",
                    "serialized_name": "VpcId"
                  },
                  "subnet_group_status": {
                    "type": "string",
                    "documentation": "<p> Provides the status of the DB Subnet Group. </p>",
                    "serialized_name": "SubnetGroupStatus"
                  },
                  "subnets": {
                    "type": "list",
                    "documentation": "<p> Contains a list of Subnet elements. </p>",
                    "serialized_name": "Subnets",
                    "members": {
                      "type": "structure",
                      "documentation": "<p> This data type is used as a response element in the DescribeDBSubnetGroups action. </p>",
                      "serialized_name": "Subnet",
                      "members": {
                        "subnet_identifier": {
                          "type": "string",
                          "documentation": "<p> Specifies the identifier of the subnet. </p>",
                          "serialized_name": "SubnetIdentifier"
                        },
                        "subnet_availability_zone": {
                          "type": "structure",
                          "documentation": "<p> Contains Availability Zone information. </p> <p> This data type is used as an element in the following data type: <ul> <li>OrderableDBInstanceOption</li> </ul> </p>",
                          "serialized_name": "SubnetAvailabilityZone",
                          "metadata": {
                            "wrapper": true
                          },
                          "members": {
                            "name": {
                              "type": "string",
                              "documentation": "<p> The name of the availability zone. </p>",
                              "serialized_name": "Name"
                            },
                            "provisioned_iops_capable": {
                              "type": "boolean",
                              "documentation": "<p> True indicates the availability zone is capable of provisioned IOPs. </p>",
                              "serialized_name": "ProvisionedIopsCapable"
                            }
                          }
                        },
                        "subnet_status": {
                          "type": "string",
                          "documentation": "<p> Specifies the status of the subnet. </p>",
                          "serialized_name": "SubnetStatus"
                        }
                      }
                    }
                  }
                }
              },
              "preferred_maintenance_window": {
                "type": "string",
                "documentation": "<p> Specifies the weekly time range (in UTC) during which system maintenance can occur. </p>",
                "serialized_name": "PreferredMaintenanceWindow"
              },
              "pending_modified_values": {
                "type": "structure",
                "documentation": "<p> Specifies that changes to the DB Instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements. </p>",
                "serialized_name": "PendingModifiedValues",
                "members": {
                  "db_instance_class": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceClass</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceClass"
                  },
                  "allocated_storage": {
                    "type": "integer",
                    "documentation": "<p> Contains the new <code>AllocatedStorage</code> size for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "AllocatedStorage"
                  },
                  "master_user_password": {
                    "type": "string",
                    "documentation": "<p> Contains the pending or in-progress change of the master credentials for the DB Instance. </p>",
                    "serialized_name": "MasterUserPassword"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending port for the DB Instance. </p>",
                    "serialized_name": "Port"
                  },
                  "backup_retention_period": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending number of days for which automated backups are retained. </p>",
                    "serialized_name": "BackupRetentionPeriod"
                  },
                  "multi_az": {
                    "type": "boolean",
                    "documentation": "<p> Indicates that the Single-AZ DB Instance is to change to a Multi-AZ deployment. </p>",
                    "serialized_name": "MultiAZ"
                  },
                  "engine_version": {
                    "type": "string",
                    "documentation": "<p> Indicates the database engine version. </p>",
                    "serialized_name": "EngineVersion"
                  },
                  "iops": {
                    "type": "integer",
                    "documentation": "<p> Specifies the new Provisioned IOPS value for the DB Instance that will be applied or is being applied. </p>",
                    "serialized_name": "Iops"
                  },
                  "db_instance_identifier": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceIdentifier</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceIdentifier"
                  }
                }
              },
              "latest_restorable_time": {
                "type": "timestamp",
                "documentation": "<p> Specifies the latest time to which a database can be restored with point-in-time restore. </p>",
                "serialized_name": "LatestRestorableTime"
              },
              "multi_az": {
                "type": "boolean",
                "documentation": "<p> Specifies if the DB Instance is a Multi-AZ deployment. </p>",
                "serialized_name": "MultiAZ"
              },
              "engine_version": {
                "type": "string",
                "documentation": "<p> Indicates the database engine version. </p>",
                "serialized_name": "EngineVersion"
              },
              "auto_minor_version_upgrade": {
                "type": "boolean",
                "documentation": "<p> Indicates that minor version patches are applied automatically. </p>",
                "serialized_name": "AutoMinorVersionUpgrade"
              },
              "read_replica_source_db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains the identifier of the source DB Instance if this DB Instance is a Read Replica. </p>",
                "serialized_name": "ReadReplicaSourceDBInstanceIdentifier"
              },
              "read_replica_db_instance_identifiers": {
                "type": "list",
                "documentation": "<p> Contains one or more identifiers of the Read Replicas associated with this DB Instance. </p>",
                "serialized_name": "ReadReplicaDBInstanceIdentifiers",
                "members": {
                  "type": "string",
                  "serialized_name": "ReadReplicaDBInstanceIdentifier"
                }
              },
              "license_model": {
                "type": "string",
                "documentation": "<p> License model information for this DB Instance. </p>",
                "serialized_name": "LicenseModel"
              },
              "iops": {
                "type": "integer",
                "documentation": "<p> Specifies the Provisioned IOPS (I/O operations per second) value. </p>",
                "serialized_name": "Iops"
              },
              "option_group_memberships": {
                "type": "list",
                "documentation": "<p> Provides the list of option group memberships for this DB Instance. </p>",
                "serialized_name": "OptionGroupMemberships",
                "members": {
                  "type": "structure",
                  "documentation": "<p> Provides information on the option groups the DB instance is a member of. </p>",
                  "serialized_name": "OptionGroupMembership",
                  "members": {
                    "option_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the option group that the instance belongs to. </p>",
                      "serialized_name": "OptionGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Instance's option group membership (e.g. in-sync, pending, pending-maintenance, applying). </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "character_set_name": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the character set that this instance is associated with. </p>",
                "serialized_name": "CharacterSetName"
              },
              "secondary_availability_zone": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support. </p>",
                "serialized_name": "SecondaryAvailabilityZone"
              },
              "publicly_accessible": {
                "type": "boolean",
                "documentation": "<p> Specifies the accessibility options for the DB Instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p> <p> Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case. </p> <ul> <li> <b>Default VPC:</b>true</li> <li> <b>VPC:</b>false</li> </ul> <p> If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private. </p>",
                "serialized_name": "PubliclyAccessible"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBInstanceIdentifier</i> does not refer to an existing DB Instance. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The specified DB Instance is not in the <i>available</i> state. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSnapshotIdentifier</i> is already used by an existing snapshot. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed number of DB Snapshots. </p>",
          "members": {
          }
        }
      ]
    },
    "delete_db_parameter_group": {
      "name": "DeleteDBParameterGroup",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Deletes a specified DBParameterGroup. The DBParameterGroup cannot be associated with any RDS instances to be deleted. </p> The specified DB Parameter Group cannot be associated with any DB Instances.",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_parameter_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the DB Parameter Group. </p> <p>Constraints:</p> <ul> <li>Must be the name of an existing DB Parameter Group</li> <li>You cannot delete a default DB Parameter Group</li> <li>Cannot be associated with any DB Instances</li> </ul>",
            "serialized_name": "DBParameterGroupName"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> The DB Parameter Group cannot be deleted because it is in use. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBParameterGroupName</i> does not refer to an existing DB Parameter Group. </p>",
          "members": {
          }
        }
      ]
    },
    "delete_db_security_group": {
      "name": "DeleteDBSecurityGroup",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Deletes a DB Security Group. </p> The specified DB Security Group must not be associated with any DB Instances.",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_security_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the DB Security Group to delete. </p> You cannot delete the default DB Security Group. <p> Constraints: </p> <ul> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBSecurityGroupName"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> The state of the DB Security Group does not allow deletion. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSecurityGroupName</i> does not refer to an existing DB Security Group. </p>",
          "members": {
          }
        }
      ]
    },
    "delete_db_snapshot": {
      "name": "DeleteDBSnapshot",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Deletes a DBSnapshot. </p> The DBSnapshot must be in the <code>available</code> state to be deleted.",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_snapshot_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The DBSnapshot identifier. </p> <p>Constraints: Must be the name of an existing DB Snapshot in the <code>available</code> state.</p>",
            "serialized_name": "DBSnapshotIdentifier"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_snapshot": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBSnapshot</li> <li>DeleteDBSnapshot</li> </ul> <p>This data type is used as a response element in the DescribeDBSnapshots action.</p>",
            "serialized_name": "DBSnapshot",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_snapshot_identifier": {
                "type": "string",
                "documentation": "<p> Specifies the identifier for the DB Snapshot. </p>",
                "serialized_name": "DBSnapshotIdentifier"
              },
              "db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Specifies the the DBInstanceIdentifier of the DB Instance this DB Snapshot was created from. </p>",
                "serialized_name": "DBInstanceIdentifier"
              },
              "snapshot_create_time": {
                "type": "timestamp",
                "documentation": "<p> Provides the time (UTC) when the snapshot was taken. </p>",
                "serialized_name": "SnapshotCreateTime"
              },
              "engine": {
                "type": "string",
                "documentation": "<p> Specifies the name of the database engine. </p>",
                "serialized_name": "Engine"
              },
              "allocated_storage": {
                "type": "integer",
                "documentation": "<p> Specifies the allocated storage size in gigabytes (GB). </p>",
                "serialized_name": "AllocatedStorage"
              },
              "status": {
                "type": "string",
                "documentation": "<p> Specifies the status of this DB Snapshot. </p>",
                "serialized_name": "Status"
              },
              "port": {
                "type": "integer",
                "documentation": "<p> Specifies the port that the database engine was listening on at the time of the snapshot. </p>",
                "serialized_name": "Port"
              },
              "availability_zone": {
                "type": "string",
                "documentation": "<p> Specifies the name of the Availability Zone the DB Instance was located in at the time of the DB Snapshot. </p>",
                "serialized_name": "AvailabilityZone"
              },
              "vpc_id": {
                "type": "string",
                "documentation": "<p> Provides the Vpc Id associated with the DB Snapshot. </p>",
                "serialized_name": "VpcId"
              },
              "instance_create_time": {
                "type": "timestamp",
                "documentation": "<p> Specifies the time (UTC) when the snapshot was taken. </p>",
                "serialized_name": "InstanceCreateTime"
              },
              "master_username": {
                "type": "string",
                "documentation": "<p> Provides the master username for the DB Snapshot. </p>",
                "serialized_name": "MasterUsername"
              },
              "engine_version": {
                "type": "string",
                "documentation": "<p> Specifies the version of the database engine. </p>",
                "serialized_name": "EngineVersion"
              },
              "license_model": {
                "type": "string",
                "documentation": "<p> License model information for the restored DB Instance. </p>",
                "serialized_name": "LicenseModel"
              },
              "snapshot_type": {
                "type": "string",
                "documentation": "<p> Provides the type of the DB Snapshot. </p>",
                "serialized_name": "SnapshotType"
              },
              "iops": {
                "type": "integer",
                "documentation": "<p> Specifies the Provisioned IOPS (I/O operations per second) value of the DB Instance at the time of the snapshot. </p>",
                "serialized_name": "Iops"
              },
              "option_group_name": {
                "type": "string",
                "documentation": "<p> Provides the option group name for the DB Snapshot. </p>",
                "serialized_name": "OptionGroupName"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> The state of the DB Security Snapshot does not allow deletion. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSnapshotIdentifier</i> does not refer to an existing DB Snapshot. </p>",
          "members": {
          }
        }
      ]
    },
    "delete_db_subnet_group": {
      "name": "DeleteDBSubnetGroup",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Deletes a DB subnet group. </p> The specified database subnet group must not be associated with any DB instances.",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_subnet_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the database subnet group to delete. </p> You cannot delete the default subnet group. <p> Constraints: </p> <ul> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBSubnetGroupName"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> The DB Subnet Group cannot be deleted because it is in use. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The DB subnet is not in the <i>available</i> state. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSubnetGroupName</i> does not refer to an existing DB Subnet Group. </p>",
          "members": {
          }
        }
      ]
    },
    "delete_event_subscription": {
      "name": "DeleteEventSubscription",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Deletes an RDS event notification subscription.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p></p>",
        "members": {
          "subscription_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The name of the RDS event notification subscription you want to delete.</p>",
            "serialized_name": "SubscriptionName"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "event_subscription": {
            "type": "structure",
            "documentation": "<p>Contains the results of a successful invocation of the DescribeEventSubscriptions action.</p>",
            "serialized_name": "EventSubscription",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "customer_aws_id": {
                "type": "string",
                "documentation": "<p>The AWS customer account associated with the RDS event notification subscription.</p>",
                "serialized_name": "CustomerAwsId"
              },
              "cust_subscription_id": {
                "type": "string",
                "documentation": "<p>The RDS event notification subscription Id.</p>",
                "serialized_name": "CustSubscriptionId"
              },
              "sns_topic_arn": {
                "type": "string",
                "documentation": "<p>The topic ARN of the RDS event notification subscription.</p>",
                "serialized_name": "SnsTopicArn"
              },
              "status": {
                "type": "string",
                "documentation": "<p>The status of the RDS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that RDS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                "serialized_name": "Status"
              },
              "subscription_creation_time": {
                "type": "string",
                "documentation": "<p>The time the RDS event notification subscription was created.</p>",
                "serialized_name": "SubscriptionCreationTime"
              },
              "source_type": {
                "type": "string",
                "documentation": "<p>The source type for the RDS event notification subscription.</p>",
                "serialized_name": "SourceType"
              },
              "source_ids_list": {
                "type": "list",
                "documentation": "<p>A list of source Ids for the RDS event notification subscription.</p>",
                "serialized_name": "SourceIdsList",
                "members": {
                  "type": "string",
                  "serialized_name": "SourceId"
                }
              },
              "event_categories_list": {
                "type": "list",
                "documentation": "<p>A list of event categories for the RDS event notification subscription.</p>",
                "serialized_name": "EventCategoriesList",
                "members": {
                  "type": "string",
                  "serialized_name": "EventCategory"
                }
              },
              "enabled": {
                "type": "boolean",
                "documentation": "<p>A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.</p>",
                "serialized_name": "Enabled"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>The subscription name does not exist.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>This error can occur if someone else is modifying a subscription. You should retry the action.</p>",
          "members": {
          }
        }
      ]
    },
    "delete_option_group": {
      "name": "DeleteOptionGroup",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Deletes an existing Option Group. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "option_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the option group to be deleted. </p> You cannot delete default Option Groups.",
            "serialized_name": "OptionGroupName"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> The specified option group could not be found. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The Option Group is not in the <i>available</i> state. </p>",
          "members": {
          }
        }
      ]
    },
    "describe_db_engine_versions": {
      "name": "DescribeDBEngineVersions",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Returns a list of the available DB engines. </p>",
      "input": {
        "type": "structure",
        "members": {
          "engine": {
            "type": "string",
            "documentation": "<p> The database engine to return. </p>",
            "serialized_name": "Engine"
          },
          "engine_version": {
            "type": "string",
            "documentation": "<p> The database engine version to return. </p> <p>Example: <code>5.1.49</code></p>",
            "serialized_name": "EngineVersion"
          },
          "db_parameter_group_family": {
            "type": "string",
            "documentation": "<p> The name of a specific DB Parameter Group family to return details for. </p> <p>Constraints:</p> <ul> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBParameterGroupFamily"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so that the following results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          },
          "default_only": {
            "type": "boolean",
            "documentation": "<p> Indicates that only the default version of the specified engine or engine and major version combination is returned. </p>",
            "serialized_name": "DefaultOnly"
          },
          "list_supported_character_sets": {
            "type": "boolean",
            "documentation": "<p> If this parameter is specified, and if the requested engine supports the CharacterSetName parameter for CreateDBInstance, the response includes a list of supported character sets for each engine version. </p>",
            "serialized_name": "ListSupportedCharacterSets"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> Contains the result of a successful invocation of the DescribeDBEngineVersions action. </p>",
        "members": {
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          },
          "db_engine_versions": {
            "type": "list",
            "documentation": "<p> A list of <code>DBEngineVersion</code> elements. </p>",
            "serialized_name": "DBEngineVersions",
            "members": {
              "type": "structure",
              "documentation": "<p> This data type is used as a response element in the action DescribeDBEngineVersions. </p>",
              "serialized_name": "DBEngineVersion",
              "members": {
                "engine": {
                  "type": "string",
                  "documentation": "<p> The name of the database engine. </p>",
                  "serialized_name": "Engine"
                },
                "engine_version": {
                  "type": "string",
                  "documentation": "<p> The version number of the database engine. </p>",
                  "serialized_name": "EngineVersion"
                },
                "db_parameter_group_family": {
                  "type": "string",
                  "documentation": "<p> The name of the DBParameterGroupFamily for the database engine. </p>",
                  "serialized_name": "DBParameterGroupFamily"
                },
                "db_engine_description": {
                  "type": "string",
                  "documentation": "<p> The description of the database engine. </p>",
                  "serialized_name": "DBEngineDescription"
                },
                "db_engine_version_description": {
                  "type": "string",
                  "documentation": "<p> The description of the database engine version. </p>",
                  "serialized_name": "DBEngineVersionDescription"
                },
                "default_character_set": {
                  "type": "structure",
                  "documentation": "<p> The default character set for new instances of this engine version, if the <code>CharacterSetName</code> parameter of the CreateDBInstance API is not specified. </p>",
                  "serialized_name": "DefaultCharacterSet",
                  "members": {
                    "character_set_name": {
                      "type": "string",
                      "documentation": "<p> The name of the character set. </p>",
                      "serialized_name": "CharacterSetName"
                    },
                    "character_set_description": {
                      "type": "string",
                      "documentation": "<p> The description of the character set. </p>",
                      "serialized_name": "CharacterSetDescription"
                    }
                  }
                },
                "supported_character_sets": {
                  "type": "list",
                  "documentation": "<p> A list of the character sets supported by this engine for the <code>CharacterSetName</code> parameter of the CreateDBInstance API. </p>",
                  "serialized_name": "SupportedCharacterSets",
                  "members": {
                    "type": "structure",
                    "documentation": "<p> This data type is used as a response element in the action DescribeDBEngineVersions. </p>",
                    "serialized_name": "CharacterSet",
                    "members": {
                      "character_set_name": {
                        "type": "string",
                        "documentation": "<p> The name of the character set. </p>",
                        "serialized_name": "CharacterSetName"
                      },
                      "character_set_description": {
                        "type": "string",
                        "documentation": "<p> The description of the character set. </p>",
                        "serialized_name": "CharacterSetDescription"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "describe_db_instances": {
      "name": "DescribeDBInstances",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Returns information about provisioned RDS instances. This API supports pagination. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_instance_identifier": {
            "type": "string",
            "documentation": "<p> The user-supplied instance identifier. If this parameter is specified, information from only the specific DB Instance is returned. This parameter isn't case sensitive. </p> <p>Constraints:</p> <ul> <li>Must contain from 1 to 63 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBInstanceIdentifier"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results may be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous DescribeDBInstances request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> Contains the result of a successful invocation of the DescribeDBInstances action. </p>",
        "members": {
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . </p>",
            "serialized_name": "Marker"
          },
          "db_instances": {
            "type": "list",
            "documentation": "<p> A list of DBInstance instances. </p>",
            "serialized_name": "DBInstances",
            "members": {
              "type": "structure",
              "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBInstance</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> </ul> <p>This data type is used as a response element in the DescribeDBInstances action.</p>",
              "serialized_name": "DBInstance",
              "metadata": {
                "wrapper": true
              },
              "members": {
                "db_instance_identifier": {
                  "type": "string",
                  "documentation": "<p> Contains a user-supplied database identifier. This is the unique key that identifies a DB Instance. </p>",
                  "serialized_name": "DBInstanceIdentifier"
                },
                "db_instance_class": {
                  "type": "string",
                  "documentation": "<p> Contains the name of the compute and memory capacity class of the DB Instance. </p>",
                  "serialized_name": "DBInstanceClass"
                },
                "engine": {
                  "type": "string",
                  "documentation": "<p> Provides the name of the database engine to be used for this DB Instance. </p>",
                  "serialized_name": "Engine"
                },
                "db_instance_status": {
                  "type": "string",
                  "documentation": "<p> Specifies the current state of this database. </p>",
                  "serialized_name": "DBInstanceStatus"
                },
                "master_username": {
                  "type": "string",
                  "documentation": "<p> Contains the master username for the DB Instance. </p>",
                  "serialized_name": "MasterUsername"
                },
                "db_name": {
                  "type": "string",
                  "documentation": "<p>The meaning of this parameter differs according to the database engine you use.</p> <p><b>MySQL</b></p> <p> Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB Instance was created. This same name is returned for the life of the DB Instance. </p> <p>Type: String</p> <p><b>Oracle</b></p> <p> Contains the Oracle System ID (SID) of the created DB Instance. </p>",
                  "serialized_name": "DBName"
                },
                "endpoint": {
                  "type": "structure",
                  "documentation": "<p> Specifies the connection endpoint. </p>",
                  "serialized_name": "Endpoint",
                  "members": {
                    "address": {
                      "type": "string",
                      "documentation": "<p> Specifies the DNS address of the DB Instance. </p>",
                      "serialized_name": "Address"
                    },
                    "port": {
                      "type": "integer",
                      "documentation": "<p> Specifies the port that the database engine is listening on. </p>",
                      "serialized_name": "Port"
                    }
                  }
                },
                "allocated_storage": {
                  "type": "integer",
                  "documentation": "<p> Specifies the allocated storage size specified in gigabytes. </p>",
                  "serialized_name": "AllocatedStorage"
                },
                "instance_create_time": {
                  "type": "timestamp",
                  "documentation": "<p> Provides the date and time the DB Instance was created. </p>",
                  "serialized_name": "InstanceCreateTime"
                },
                "preferred_backup_window": {
                  "type": "string",
                  "documentation": "<p> Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. </p>",
                  "serialized_name": "PreferredBackupWindow"
                },
                "backup_retention_period": {
                  "type": "integer",
                  "documentation": "<p> Specifies the number of days for which automatic DB Snapshots are retained. </p>",
                  "serialized_name": "BackupRetentionPeriod"
                },
                "db_security_groups": {
                  "type": "list",
                  "documentation": "<p> Provides List of DB Security Group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. </p>",
                  "serialized_name": "DBSecurityGroups",
                  "members": {
                    "type": "structure",
                    "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> <li>RestoreDBInstanceToPointInTime</li> </ul>",
                    "serialized_name": "DBSecurityGroup",
                    "members": {
                      "db_security_group_name": {
                        "type": "string",
                        "documentation": "<p> The name of the DB Security Group. </p>",
                        "serialized_name": "DBSecurityGroupName"
                      },
                      "status": {
                        "type": "string",
                        "documentation": "<p> The status of the DB Security Group. </p>",
                        "serialized_name": "Status"
                      }
                    }
                  }
                },
                "vpc_security_groups": {
                  "type": "list",
                  "documentation": "<p> Provides List of VPC security group elements that the DB Instance belongs to. </p>",
                  "serialized_name": "VpcSecurityGroups",
                  "members": {
                    "type": "structure",
                    "documentation": "<p>This data type is used as a response element for queries on VPC security group membership.</p>",
                    "serialized_name": "VpcSecurityGroupMembership",
                    "members": {
                      "vpc_security_group_id": {
                        "type": "string",
                        "documentation": "<p>The name of the VPC security group.</p>",
                        "serialized_name": "VpcSecurityGroupId"
                      },
                      "status": {
                        "type": "string",
                        "documentation": "<p> The status of the VPC Security Group. </p>",
                        "serialized_name": "Status"
                      }
                    }
                  }
                },
                "db_parameter_groups": {
                  "type": "list",
                  "documentation": "<p> Provides the list of DB Parameter Groups applied to this DB Instance. </p>",
                  "serialized_name": "DBParameterGroups",
                  "members": {
                    "type": "structure",
                    "documentation": "<p> The status of the DB Parameter Group. </p> <p>This data type is used as a response element in the following actions:</p> <ul> <li>CreateDBInstance</li> <li>CreateDBInstanceReadReplica</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> </ul>",
                    "serialized_name": "DBParameterGroup",
                    "members": {
                      "db_parameter_group_name": {
                        "type": "string",
                        "documentation": "<p> The name of the DP Parameter Group. </p>",
                        "serialized_name": "DBParameterGroupName"
                      },
                      "parameter_apply_status": {
                        "type": "string",
                        "documentation": "<p> The status of parameter updates. </p>",
                        "serialized_name": "ParameterApplyStatus"
                      }
                    }
                  }
                },
                "availability_zone": {
                  "type": "string",
                  "documentation": "<p> Specifies the name of the Availability Zone the DB Instance is located in. </p>",
                  "serialized_name": "AvailabilityZone"
                },
                "db_subnet_group": {
                  "type": "structure",
                  "documentation": "<p> Provides the inforamtion of the subnet group associated with the DB instance, including the name, descrption and subnets in the subnet group. </p>",
                  "serialized_name": "DBSubnetGroup",
                  "metadata": {
                    "wrapper": true
                  },
                  "members": {
                    "db_subnet_group_name": {
                      "type": "string",
                      "documentation": "<p> Specifies the name of the DB Subnet Group. </p>",
                      "serialized_name": "DBSubnetGroupName"
                    },
                    "db_subnet_group_description": {
                      "type": "string",
                      "documentation": "<p> Provides the description of the DB Subnet Group. </p>",
                      "serialized_name": "DBSubnetGroupDescription"
                    },
                    "vpc_id": {
                      "type": "string",
                      "documentation": "<p> Provides the VpcId of the DB Subnet Group. </p>",
                      "serialized_name": "VpcId"
                    },
                    "subnet_group_status": {
                      "type": "string",
                      "documentation": "<p> Provides the status of the DB Subnet Group. </p>",
                      "serialized_name": "SubnetGroupStatus"
                    },
                    "subnets": {
                      "type": "list",
                      "documentation": "<p> Contains a list of Subnet elements. </p>",
                      "serialized_name": "Subnets",
                      "members": {
                        "type": "structure",
                        "documentation": "<p> This data type is used as a response element in the DescribeDBSubnetGroups action. </p>",
                        "serialized_name": "Subnet",
                        "members": {
                          "subnet_identifier": {
                            "type": "string",
                            "documentation": "<p> Specifies the identifier of the subnet. </p>",
                            "serialized_name": "SubnetIdentifier"
                          },
                          "subnet_availability_zone": {
                            "type": "structure",
                            "documentation": "<p> Contains Availability Zone information. </p> <p> This data type is used as an element in the following data type: <ul> <li>OrderableDBInstanceOption</li> </ul> </p>",
                            "serialized_name": "SubnetAvailabilityZone",
                            "metadata": {
                              "wrapper": true
                            },
                            "members": {
                              "name": {
                                "type": "string",
                                "documentation": "<p> The name of the availability zone. </p>",
                                "serialized_name": "Name"
                              },
                              "provisioned_iops_capable": {
                                "type": "boolean",
                                "documentation": "<p> True indicates the availability zone is capable of provisioned IOPs. </p>",
                                "serialized_name": "ProvisionedIopsCapable"
                              }
                            }
                          },
                          "subnet_status": {
                            "type": "string",
                            "documentation": "<p> Specifies the status of the subnet. </p>",
                            "serialized_name": "SubnetStatus"
                          }
                        }
                      }
                    }
                  }
                },
                "preferred_maintenance_window": {
                  "type": "string",
                  "documentation": "<p> Specifies the weekly time range (in UTC) during which system maintenance can occur. </p>",
                  "serialized_name": "PreferredMaintenanceWindow"
                },
                "pending_modified_values": {
                  "type": "structure",
                  "documentation": "<p> Specifies that changes to the DB Instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements. </p>",
                  "serialized_name": "PendingModifiedValues",
                  "members": {
                    "db_instance_class": {
                      "type": "string",
                      "documentation": "<p> Contains the new <code>DBInstanceClass</code> for the DB Instance that will be applied or is in progress. </p>",
                      "serialized_name": "DBInstanceClass"
                    },
                    "allocated_storage": {
                      "type": "integer",
                      "documentation": "<p> Contains the new <code>AllocatedStorage</code> size for the DB Instance that will be applied or is in progress. </p>",
                      "serialized_name": "AllocatedStorage"
                    },
                    "master_user_password": {
                      "type": "string",
                      "documentation": "<p> Contains the pending or in-progress change of the master credentials for the DB Instance. </p>",
                      "serialized_name": "MasterUserPassword"
                    },
                    "port": {
                      "type": "integer",
                      "documentation": "<p> Specifies the pending port for the DB Instance. </p>",
                      "serialized_name": "Port"
                    },
                    "backup_retention_period": {
                      "type": "integer",
                      "documentation": "<p> Specifies the pending number of days for which automated backups are retained. </p>",
                      "serialized_name": "BackupRetentionPeriod"
                    },
                    "multi_az": {
                      "type": "boolean",
                      "documentation": "<p> Indicates that the Single-AZ DB Instance is to change to a Multi-AZ deployment. </p>",
                      "serialized_name": "MultiAZ"
                    },
                    "engine_version": {
                      "type": "string",
                      "documentation": "<p> Indicates the database engine version. </p>",
                      "serialized_name": "EngineVersion"
                    },
                    "iops": {
                      "type": "integer",
                      "documentation": "<p> Specifies the new Provisioned IOPS value for the DB Instance that will be applied or is being applied. </p>",
                      "serialized_name": "Iops"
                    },
                    "db_instance_identifier": {
                      "type": "string",
                      "documentation": "<p> Contains the new <code>DBInstanceIdentifier</code> for the DB Instance that will be applied or is in progress. </p>",
                      "serialized_name": "DBInstanceIdentifier"
                    }
                  }
                },
                "latest_restorable_time": {
                  "type": "timestamp",
                  "documentation": "<p> Specifies the latest time to which a database can be restored with point-in-time restore. </p>",
                  "serialized_name": "LatestRestorableTime"
                },
                "multi_az": {
                  "type": "boolean",
                  "documentation": "<p> Specifies if the DB Instance is a Multi-AZ deployment. </p>",
                  "serialized_name": "MultiAZ"
                },
                "engine_version": {
                  "type": "string",
                  "documentation": "<p> Indicates the database engine version. </p>",
                  "serialized_name": "EngineVersion"
                },
                "auto_minor_version_upgrade": {
                  "type": "boolean",
                  "documentation": "<p> Indicates that minor version patches are applied automatically. </p>",
                  "serialized_name": "AutoMinorVersionUpgrade"
                },
                "read_replica_source_db_instance_identifier": {
                  "type": "string",
                  "documentation": "<p> Contains the identifier of the source DB Instance if this DB Instance is a Read Replica. </p>",
                  "serialized_name": "ReadReplicaSourceDBInstanceIdentifier"
                },
                "read_replica_db_instance_identifiers": {
                  "type": "list",
                  "documentation": "<p> Contains one or more identifiers of the Read Replicas associated with this DB Instance. </p>",
                  "serialized_name": "ReadReplicaDBInstanceIdentifiers",
                  "members": {
                    "type": "string",
                    "serialized_name": "ReadReplicaDBInstanceIdentifier"
                  }
                },
                "license_model": {
                  "type": "string",
                  "documentation": "<p> License model information for this DB Instance. </p>",
                  "serialized_name": "LicenseModel"
                },
                "iops": {
                  "type": "integer",
                  "documentation": "<p> Specifies the Provisioned IOPS (I/O operations per second) value. </p>",
                  "serialized_name": "Iops"
                },
                "option_group_memberships": {
                  "type": "list",
                  "documentation": "<p> Provides the list of option group memberships for this DB Instance. </p>",
                  "serialized_name": "OptionGroupMemberships",
                  "members": {
                    "type": "structure",
                    "documentation": "<p> Provides information on the option groups the DB instance is a member of. </p>",
                    "serialized_name": "OptionGroupMembership",
                    "members": {
                      "option_group_name": {
                        "type": "string",
                        "documentation": "<p> The name of the option group that the instance belongs to. </p>",
                        "serialized_name": "OptionGroupName"
                      },
                      "status": {
                        "type": "string",
                        "documentation": "<p> The status of the DB Instance's option group membership (e.g. in-sync, pending, pending-maintenance, applying). </p>",
                        "serialized_name": "Status"
                      }
                    }
                  }
                },
                "character_set_name": {
                  "type": "string",
                  "documentation": "<p> If present, specifies the name of the character set that this instance is associated with. </p>",
                  "serialized_name": "CharacterSetName"
                },
                "secondary_availability_zone": {
                  "type": "string",
                  "documentation": "<p> If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support. </p>",
                  "serialized_name": "SecondaryAvailabilityZone"
                },
                "publicly_accessible": {
                  "type": "boolean",
                  "documentation": "<p> Specifies the accessibility options for the DB Instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p> <p> Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case. </p> <ul> <li> <b>Default VPC:</b>true</li> <li> <b>VPC:</b>false</li> </ul> <p> If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private. </p>",
                  "serialized_name": "PubliclyAccessible"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBInstanceIdentifier</i> does not refer to an existing DB Instance. </p>",
          "members": {
          }
        }
      ]
    },
    "describe_db_log_files": {
      "name": "DescribeDBLogFiles",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Returns a list of DB log files for the DB instance. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_instance_identifier": {
            "type": "string",
            "documentation": "<p> The customer-assigned name of the DB Instance that contains the log files you want to list. </p> <p>Constraints:</p> <ul> <li>Must contain from 1 to 63 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBInstanceIdentifier"
          },
          "filename_contains": {
            "type": "string",
            "documentation": "<p> Filters the available log files for log file names that contain the specified string. </p>",
            "serialized_name": "FilenameContains"
          },
          "file_last_written": {
            "type": "integer",
            "documentation": "<p> Filters the available log files for files written since the specified date. </p>",
            "serialized_name": "FileLastWritten"
          },
          "file_size": {
            "type": "integer",
            "documentation": "<p> Filters the available log files for files larger than the specified size. </p>",
            "serialized_name": "FileSize"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to MaxRecords. </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> The response from a call to DescribeDBLogFiles. </p>",
        "members": {
          "describe_db_log_files": {
            "type": "list",
            "documentation": "<p> The DB log files returned. </p>",
            "serialized_name": "DescribeDBLogFiles",
            "members": {
              "type": "structure",
              "documentation": "<p>This data type is used as a response element to DescribeDBLogFiles.</p>",
              "serialized_name": "DescribeDBLogFilesDetails",
              "members": {
                "log_file_name": {
                  "type": "string",
                  "documentation": "<p> The name of the log file for the specified DB instance. </p>",
                  "serialized_name": "LogFileName"
                },
                "last_written": {
                  "type": "integer",
                  "documentation": "<p> The date and time that the last log entry was written. </p>",
                  "serialized_name": "LastWritten"
                },
                "size": {
                  "type": "integer",
                  "documentation": "<p> The size, in bytes, of the log file for the specified DB instance. </p>",
                  "serialized_name": "Size"
                }
              }
            }
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional paging token. </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBInstanceIdentifier</i> does not refer to an existing DB Instance. </p>",
          "members": {
          }
        }
      ]
    },
    "describe_db_parameter_groups": {
      "name": "DescribeDBParameterGroups",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Returns a list of DBParameterGroup descriptions. If a DBParameterGroupName is specified, the list will contain only the description of the specified DBParameterGroup. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_parameter_group_name": {
            "type": "string",
            "documentation": "<p> The name of a specific DB Parameter Group to return details for. </p> <p>Constraints:</p> <ul> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBParameterGroupName"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results may be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous DescribeDBParameterGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> Contains the result of a successful invocation of the DescribeDBParameterGroups action. </p>",
        "members": {
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          },
          "db_parameter_groups": {
            "type": "list",
            "documentation": "<p> A list of DBParameterGroup instances. </p>",
            "serialized_name": "DBParameterGroups",
            "members": {
              "type": "structure",
              "documentation": "<p> Contains the result of a successful invocation of the CreateDBParameterGroup action. </p> <p> This data type is used as a request parameter in the DeleteDBParameterGroup action, and as a response element in the DescribeDBParameterGroups action. </p>",
              "serialized_name": "DBParameterGroup",
              "metadata": {
                "wrapper": true
              },
              "members": {
                "db_parameter_group_name": {
                  "type": "string",
                  "documentation": "<p> Provides the name of the DB Parameter Group. </p>",
                  "serialized_name": "DBParameterGroupName"
                },
                "db_parameter_group_family": {
                  "type": "string",
                  "documentation": "<p> Provides the name of the DB Parameter Group Family that this DB Parameter Group is compatible with. </p>",
                  "serialized_name": "DBParameterGroupFamily"
                },
                "description": {
                  "type": "string",
                  "documentation": "<p> Provides the customer-specified description for this DB Parameter Group. </p>",
                  "serialized_name": "Description"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBParameterGroupName</i> does not refer to an existing DB Parameter Group. </p>",
          "members": {
          }
        }
      ]
    },
    "describe_db_parameters": {
      "name": "DescribeDBParameters",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Returns the detailed parameter list for a particular DBParameterGroup. </p>",
      "input": {
        "type": "structure",
        "members": {
          "db_parameter_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of a specific DB Parameter Group to return details for. </p> <p>Constraints:</p> <ul> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBParameterGroupName"
          },
          "source": {
            "type": "string",
            "documentation": "<p> The parameter types to return. </p> <p>Default: All parameter types returned</p> <p>Valid Values: <code>user | system | engine-default</code></p>",
            "serialized_name": "Source"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results may be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous DescribeDBParameters request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> Contains the result of a successful invocation of the DescribeDBParameters action. </p>",
        "members": {
          "parameters": {
            "type": "list",
            "documentation": "<p> A list of Parameter instances. </p>",
            "serialized_name": "Parameters",
            "members": {
              "type": "structure",
              "documentation": "<p> This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions. </p> <p>This data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions.</p>",
              "serialized_name": "Parameter",
              "members": {
                "parameter_name": {
                  "type": "string",
                  "documentation": "<p> Specifies the name of the parameter. </p>",
                  "serialized_name": "ParameterName"
                },
                "parameter_value": {
                  "type": "string",
                  "documentation": "<p> Specifies the value of the parameter. </p>",
                  "serialized_name": "ParameterValue"
                },
                "description": {
                  "type": "string",
                  "documentation": "<p> Provides a description of the parameter. </p>",
                  "serialized_name": "Description"
                },
                "source": {
                  "type": "string",
                  "documentation": "<p> Indicates the source of the parameter value. </p>",
                  "serialized_name": "Source"
                },
                "apply_type": {
                  "type": "string",
                  "documentation": "<p> Specifies the engine specific parameters type. </p>",
                  "serialized_name": "ApplyType"
                },
                "data_type": {
                  "type": "string",
                  "documentation": "<p> Specifies the valid data type for the parameter. </p>",
                  "serialized_name": "DataType"
                },
                "allowed_values": {
                  "type": "string",
                  "documentation": "<p> Specifies the valid range of values for the parameter. </p>",
                  "serialized_name": "AllowedValues"
                },
                "is_modifiable": {
                  "type": "boolean",
                  "documentation": "<p> Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. </p>",
                  "serialized_name": "IsModifiable"
                },
                "minimum_engine_version": {
                  "type": "string",
                  "documentation": "<p> The earliest engine version to which the parameter can apply. </p>",
                  "serialized_name": "MinimumEngineVersion"
                },
                "apply_method": {
                  "type": "string",
                  "documentation": "<p> Indicates when to apply parameter updates. </p>",
                  "serialized_name": "ApplyMethod",
                  "enum": [
                    "immediate",
                    "pending-reboot"
                  ]
                }
              }
            }
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBParameterGroupName</i> does not refer to an existing DB Parameter Group. </p>",
          "members": {
          }
        }
      ]
    },
    "describe_db_security_groups": {
      "name": "DescribeDBSecurityGroups",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Returns a list of DBSecurityGroup descriptions. If a DBSecurityGroupName is specified, the list will contain only the descriptions of the specified DBSecurityGroup. </p> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_security_group_name": {
            "type": "string",
            "documentation": "<p> The name of the DB Security Group to return details for. </p>",
            "serialized_name": "DBSecurityGroupName"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results may be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous DescribeDBSecurityGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> Contains the result of a successful invocation of the DescribeDBSecurityGroups action. </p>",
        "members": {
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          },
          "db_security_groups": {
            "type": "list",
            "documentation": "<p> A list of DBSecurityGroup instances. </p>",
            "serialized_name": "DBSecurityGroups",
            "members": {
              "type": "structure",
              "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>DescribeDBSecurityGroups</li> <li>AuthorizeDBSecurityGroupIngress</li> <li>CreateDBSecurityGroup</li> <li>RevokeDBSecurityGroupIngress</li> </ul> <p>This data type is used as a response element in the DescribeDBSecurityGroups action.</p>",
              "serialized_name": "DBSecurityGroup",
              "metadata": {
                "wrapper": true
              },
              "members": {
                "owner_id": {
                  "type": "string",
                  "documentation": "<p> Provides the AWS ID of the owner of a specific DB Security Group. </p>",
                  "serialized_name": "OwnerId"
                },
                "db_security_group_name": {
                  "type": "string",
                  "documentation": "<p> Specifies the name of the DB Security Group. </p>",
                  "serialized_name": "DBSecurityGroupName"
                },
                "db_security_group_description": {
                  "type": "string",
                  "documentation": "<p> Provides the description of the DB Security Group. </p>",
                  "serialized_name": "DBSecurityGroupDescription"
                },
                "vpc_id": {
                  "type": "string",
                  "documentation": "<p> Provides the VpcId of the DB Security Group. </p>",
                  "serialized_name": "VpcId"
                },
                "ec2_security_groups": {
                  "type": "list",
                  "documentation": "<p> Contains a list of EC2SecurityGroup elements. </p>",
                  "serialized_name": "EC2SecurityGroups",
                  "members": {
                    "type": "structure",
                    "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>AuthorizeDBSecurityGroupIngress</li> <li>DescribeDBSecurityGroups</li> <li>RevokeDBSecurityGroupIngress</li> </ul>",
                    "serialized_name": "EC2SecurityGroup",
                    "members": {
                      "status": {
                        "type": "string",
                        "documentation": "<p> Provides the status of the EC2 security group. Status can be \"authorizing\", \"authorized\", \"revoking\", and \"revoked\". </p>",
                        "serialized_name": "Status"
                      },
                      "ec2_security_group_name": {
                        "type": "string",
                        "documentation": "<p> Specifies the name of the EC2 Security Group. </p>",
                        "serialized_name": "EC2SecurityGroupName"
                      },
                      "ec2_security_group_id": {
                        "type": "string",
                        "documentation": "<p> Specifies the id of the EC2 Security Group. </p>",
                        "serialized_name": "EC2SecurityGroupId"
                      },
                      "ec2_security_group_owner_id": {
                        "type": "string",
                        "documentation": "<p> Specifies the AWS ID of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> field. </p>",
                        "serialized_name": "EC2SecurityGroupOwnerId"
                      }
                    }
                  }
                },
                "ip_ranges": {
                  "type": "list",
                  "documentation": "<p> Contains a list of IPRange elements. </p>",
                  "serialized_name": "IPRanges",
                  "members": {
                    "type": "structure",
                    "documentation": "<p> This data type is used as a response element in the DescribeDBSecurityGroups action. </p>",
                    "serialized_name": "IPRange",
                    "members": {
                      "status": {
                        "type": "string",
                        "documentation": "<p> Specifies the status of the IP range. Status can be \"authorizing\", \"authorized\", \"revoking\", and \"revoked\". </p>",
                        "serialized_name": "Status"
                      },
                      "cidrip": {
                        "type": "string",
                        "documentation": "<p> Specifies the IP range. </p>",
                        "serialized_name": "CIDRIP"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBSecurityGroupName</i> does not refer to an existing DB Security Group. </p>",
          "members": {
          }
        }
      ]
    },
    "describe_db_snapshots": {
      "name": "DescribeDBSnapshots",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Returns information about DBSnapshots. This API supports pagination. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_instance_identifier": {
            "type": "string",
            "documentation": "<p> A DB Instance Identifier to retrieve the list of DB Snapshots for. Cannot be used in conjunction with DBSnapshotIdentifier. This parameter isn't case sensitive. </p> <p>Constraints:</p> <ul> <li>Must contain from 1 to 63 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBInstanceIdentifier"
          },
          "db_snapshot_identifier": {
            "type": "string",
            "documentation": "<p> A specific DB Snapshot Identifier to describe. Cannot be used in conjunction with DBInstanceIdentifier. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> <li>If this is the identifier of an automated snapshot, the <code>SnapshotType</code> parameter must also be specified.</li> </ul>",
            "serialized_name": "DBSnapshotIdentifier"
          },
          "snapshot_type": {
            "type": "string",
            "documentation": "<p> An optional snapshot type for which snapshots will be returned. If not specified, the returned results will include snapshots of all types. </p>",
            "serialized_name": "SnapshotType"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results may be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous DescribeDBSnapshots request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> Contains the result of a successful invocation of the DescribeDBSnapshots action. </p>",
        "members": {
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          },
          "db_snapshots": {
            "type": "list",
            "documentation": "<p> A list of DBSnapshot instances. </p>",
            "serialized_name": "DBSnapshots",
            "members": {
              "type": "structure",
              "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBSnapshot</li> <li>DeleteDBSnapshot</li> </ul> <p>This data type is used as a response element in the DescribeDBSnapshots action.</p>",
              "serialized_name": "DBSnapshot",
              "metadata": {
                "wrapper": true
              },
              "members": {
                "db_snapshot_identifier": {
                  "type": "string",
                  "documentation": "<p> Specifies the identifier for the DB Snapshot. </p>",
                  "serialized_name": "DBSnapshotIdentifier"
                },
                "db_instance_identifier": {
                  "type": "string",
                  "documentation": "<p> Specifies the the DBInstanceIdentifier of the DB Instance this DB Snapshot was created from. </p>",
                  "serialized_name": "DBInstanceIdentifier"
                },
                "snapshot_create_time": {
                  "type": "timestamp",
                  "documentation": "<p> Provides the time (UTC) when the snapshot was taken. </p>",
                  "serialized_name": "SnapshotCreateTime"
                },
                "engine": {
                  "type": "string",
                  "documentation": "<p> Specifies the name of the database engine. </p>",
                  "serialized_name": "Engine"
                },
                "allocated_storage": {
                  "type": "integer",
                  "documentation": "<p> Specifies the allocated storage size in gigabytes (GB). </p>",
                  "serialized_name": "AllocatedStorage"
                },
                "status": {
                  "type": "string",
                  "documentation": "<p> Specifies the status of this DB Snapshot. </p>",
                  "serialized_name": "Status"
                },
                "port": {
                  "type": "integer",
                  "documentation": "<p> Specifies the port that the database engine was listening on at the time of the snapshot. </p>",
                  "serialized_name": "Port"
                },
                "availability_zone": {
                  "type": "string",
                  "documentation": "<p> Specifies the name of the Availability Zone the DB Instance was located in at the time of the DB Snapshot. </p>",
                  "serialized_name": "AvailabilityZone"
                },
                "vpc_id": {
                  "type": "string",
                  "documentation": "<p> Provides the Vpc Id associated with the DB Snapshot. </p>",
                  "serialized_name": "VpcId"
                },
                "instance_create_time": {
                  "type": "timestamp",
                  "documentation": "<p> Specifies the time (UTC) when the snapshot was taken. </p>",
                  "serialized_name": "InstanceCreateTime"
                },
                "master_username": {
                  "type": "string",
                  "documentation": "<p> Provides the master username for the DB Snapshot. </p>",
                  "serialized_name": "MasterUsername"
                },
                "engine_version": {
                  "type": "string",
                  "documentation": "<p> Specifies the version of the database engine. </p>",
                  "serialized_name": "EngineVersion"
                },
                "license_model": {
                  "type": "string",
                  "documentation": "<p> License model information for the restored DB Instance. </p>",
                  "serialized_name": "LicenseModel"
                },
                "snapshot_type": {
                  "type": "string",
                  "documentation": "<p> Provides the type of the DB Snapshot. </p>",
                  "serialized_name": "SnapshotType"
                },
                "iops": {
                  "type": "integer",
                  "documentation": "<p> Specifies the Provisioned IOPS (I/O operations per second) value of the DB Instance at the time of the snapshot. </p>",
                  "serialized_name": "Iops"
                },
                "option_group_name": {
                  "type": "string",
                  "documentation": "<p> Provides the option group name for the DB Snapshot. </p>",
                  "serialized_name": "OptionGroupName"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBSnapshotIdentifier</i> does not refer to an existing DB Snapshot. </p>",
          "members": {
          }
        }
      ]
    },
    "describe_db_subnet_groups": {
      "name": "DescribeDBSubnetGroups",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup. </p> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_subnet_group_name": {
            "type": "string",
            "documentation": "<p> The name of the DB Subnet Group to return details for. </p>",
            "serialized_name": "DBSubnetGroupName"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results may be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous DescribeDBSubnetGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> Contains the result of a successful invocation of the DescribeDBSubnetGroups action. </p>",
        "members": {
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          },
          "db_subnet_groups": {
            "type": "list",
            "documentation": "<p> A list of DBSubnetGroup instances. </p>",
            "serialized_name": "DBSubnetGroups",
            "members": {
              "type": "structure",
              "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBSubnetGroup</li> <li>ModifyDBSubnetGroup</li> <li>DescribeDBSubnetGroups</li> <li>DeleteDBSubnetGroup</li> </ul> <p>This data type is used as a response element in the DescribeDBSubnetGroups action.</p>",
              "serialized_name": "DBSubnetGroup",
              "metadata": {
                "wrapper": true
              },
              "members": {
                "db_subnet_group_name": {
                  "type": "string",
                  "documentation": "<p> Specifies the name of the DB Subnet Group. </p>",
                  "serialized_name": "DBSubnetGroupName"
                },
                "db_subnet_group_description": {
                  "type": "string",
                  "documentation": "<p> Provides the description of the DB Subnet Group. </p>",
                  "serialized_name": "DBSubnetGroupDescription"
                },
                "vpc_id": {
                  "type": "string",
                  "documentation": "<p> Provides the VpcId of the DB Subnet Group. </p>",
                  "serialized_name": "VpcId"
                },
                "subnet_group_status": {
                  "type": "string",
                  "documentation": "<p> Provides the status of the DB Subnet Group. </p>",
                  "serialized_name": "SubnetGroupStatus"
                },
                "subnets": {
                  "type": "list",
                  "documentation": "<p> Contains a list of Subnet elements. </p>",
                  "serialized_name": "Subnets",
                  "members": {
                    "type": "structure",
                    "documentation": "<p> This data type is used as a response element in the DescribeDBSubnetGroups action. </p>",
                    "serialized_name": "Subnet",
                    "members": {
                      "subnet_identifier": {
                        "type": "string",
                        "documentation": "<p> Specifies the identifier of the subnet. </p>",
                        "serialized_name": "SubnetIdentifier"
                      },
                      "subnet_availability_zone": {
                        "type": "structure",
                        "documentation": "<p> Contains Availability Zone information. </p> <p> This data type is used as an element in the following data type: <ul> <li>OrderableDBInstanceOption</li> </ul> </p>",
                        "serialized_name": "SubnetAvailabilityZone",
                        "metadata": {
                          "wrapper": true
                        },
                        "members": {
                          "name": {
                            "type": "string",
                            "documentation": "<p> The name of the availability zone. </p>",
                            "serialized_name": "Name"
                          },
                          "provisioned_iops_capable": {
                            "type": "boolean",
                            "documentation": "<p> True indicates the availability zone is capable of provisioned IOPs. </p>",
                            "serialized_name": "ProvisionedIopsCapable"
                          }
                        }
                      },
                      "subnet_status": {
                        "type": "string",
                        "documentation": "<p> Specifies the status of the subnet. </p>",
                        "serialized_name": "SubnetStatus"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBSubnetGroupName</i> does not refer to an existing DB Subnet Group. </p>",
          "members": {
          }
        }
      ]
    },
    "describe_engine_default_parameters": {
      "name": "DescribeEngineDefaultParameters",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Returns the default engine and system parameter information for the specified database engine. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_parameter_group_family": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the DB Parameter Group Family. </p>",
            "serialized_name": "DBParameterGroupFamily"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results may be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous DescribeEngineDefaultParameters request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "engine_defaults": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the DescribeEngineDefaultParameters action. </p>",
            "serialized_name": "EngineDefaults",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_parameter_group_family": {
                "type": "string",
                "documentation": "<p> Specifies the name of the DB Parameter Group Family which the engine default parameters apply to. </p>",
                "serialized_name": "DBParameterGroupFamily"
              },
              "marker": {
                "type": "string",
                "documentation": "<p> An optional pagination token provided by a previous EngineDefaults request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . </p>",
                "serialized_name": "Marker"
              },
              "parameters": {
                "type": "list",
                "documentation": "<p> Contains a list of engine default parameters. </p>",
                "serialized_name": "Parameters",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions. </p> <p>This data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions.</p>",
                  "serialized_name": "Parameter",
                  "members": {
                    "parameter_name": {
                      "type": "string",
                      "documentation": "<p> Specifies the name of the parameter. </p>",
                      "serialized_name": "ParameterName"
                    },
                    "parameter_value": {
                      "type": "string",
                      "documentation": "<p> Specifies the value of the parameter. </p>",
                      "serialized_name": "ParameterValue"
                    },
                    "description": {
                      "type": "string",
                      "documentation": "<p> Provides a description of the parameter. </p>",
                      "serialized_name": "Description"
                    },
                    "source": {
                      "type": "string",
                      "documentation": "<p> Indicates the source of the parameter value. </p>",
                      "serialized_name": "Source"
                    },
                    "apply_type": {
                      "type": "string",
                      "documentation": "<p> Specifies the engine specific parameters type. </p>",
                      "serialized_name": "ApplyType"
                    },
                    "data_type": {
                      "type": "string",
                      "documentation": "<p> Specifies the valid data type for the parameter. </p>",
                      "serialized_name": "DataType"
                    },
                    "allowed_values": {
                      "type": "string",
                      "documentation": "<p> Specifies the valid range of values for the parameter. </p>",
                      "serialized_name": "AllowedValues"
                    },
                    "is_modifiable": {
                      "type": "boolean",
                      "documentation": "<p> Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. </p>",
                      "serialized_name": "IsModifiable"
                    },
                    "minimum_engine_version": {
                      "type": "string",
                      "documentation": "<p> The earliest engine version to which the parameter can apply. </p>",
                      "serialized_name": "MinimumEngineVersion"
                    },
                    "apply_method": {
                      "type": "string",
                      "documentation": "<p> Indicates when to apply parameter updates. </p>",
                      "serialized_name": "ApplyMethod",
                      "enum": [
                        "immediate",
                        "pending-reboot"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "describe_event_categories": {
      "name": "DescribeEventCategories",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Displays a list of categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in the <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\"> Events</a> topic in the Amazon RDS User Guide.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p></p>",
        "members": {
          "source_type": {
            "type": "string",
            "documentation": "<p> The type of source that will be generating the events. </p> <p>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</p>",
            "serialized_name": "SourceType"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Data returned from the <b>DescribeEventCategories</b> action.</p>",
        "members": {
          "event_categories_map_list": {
            "type": "list",
            "documentation": "<p>A list of EventCategoriesMap data types.</p>",
            "serialized_name": "EventCategoriesMapList",
            "members": {
              "type": "structure",
              "documentation": "<p>Contains the results of a successful invocation of the DescribeEventCategories action.</p>",
              "serialized_name": "EventCategoriesMap",
              "metadata": {
                "wrapper": true
              },
              "members": {
                "source_type": {
                  "type": "string",
                  "documentation": "<p>The source type that the returned categories belong to</p>",
                  "serialized_name": "SourceType"
                },
                "event_categories": {
                  "type": "list",
                  "documentation": "<p>The event categories for the specified source type</p>",
                  "serialized_name": "EventCategories",
                  "members": {
                    "type": "string",
                    "serialized_name": "EventCategory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "describe_event_subscriptions": {
      "name": "DescribeEventSubscriptions",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Lists all the subscription descriptions for a customer account. The description for a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID, CreationTime, and Status. </p> <p>If you specify a SubscriptionName, lists the description for that subscription.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p></p>",
        "members": {
          "subscription_name": {
            "type": "string",
            "documentation": "<p>The name of the RDS event notification subscription you want to describe.</p>",
            "serialized_name": "SubscriptionName"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Data returned by the <b>DescribeEventSubscriptions</b> action.</p>",
        "members": {
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          },
          "event_subscriptions_list": {
            "type": "list",
            "documentation": "<p>A list of EventSubscriptions data types.</p>",
            "serialized_name": "EventSubscriptionsList",
            "members": {
              "type": "structure",
              "documentation": "<p>Contains the results of a successful invocation of the DescribeEventSubscriptions action.</p>",
              "serialized_name": "EventSubscription",
              "metadata": {
                "wrapper": true
              },
              "members": {
                "customer_aws_id": {
                  "type": "string",
                  "documentation": "<p>The AWS customer account associated with the RDS event notification subscription.</p>",
                  "serialized_name": "CustomerAwsId"
                },
                "cust_subscription_id": {
                  "type": "string",
                  "documentation": "<p>The RDS event notification subscription Id.</p>",
                  "serialized_name": "CustSubscriptionId"
                },
                "sns_topic_arn": {
                  "type": "string",
                  "documentation": "<p>The topic ARN of the RDS event notification subscription.</p>",
                  "serialized_name": "SnsTopicArn"
                },
                "status": {
                  "type": "string",
                  "documentation": "<p>The status of the RDS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that RDS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                  "serialized_name": "Status"
                },
                "subscription_creation_time": {
                  "type": "string",
                  "documentation": "<p>The time the RDS event notification subscription was created.</p>",
                  "serialized_name": "SubscriptionCreationTime"
                },
                "source_type": {
                  "type": "string",
                  "documentation": "<p>The source type for the RDS event notification subscription.</p>",
                  "serialized_name": "SourceType"
                },
                "source_ids_list": {
                  "type": "list",
                  "documentation": "<p>A list of source Ids for the RDS event notification subscription.</p>",
                  "serialized_name": "SourceIdsList",
                  "members": {
                    "type": "string",
                    "serialized_name": "SourceId"
                  }
                },
                "event_categories_list": {
                  "type": "list",
                  "documentation": "<p>A list of event categories for the RDS event notification subscription.</p>",
                  "serialized_name": "EventCategoriesList",
                  "members": {
                    "type": "string",
                    "serialized_name": "EventCategory"
                  }
                },
                "enabled": {
                  "type": "boolean",
                  "documentation": "<p>A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.</p>",
                  "serialized_name": "Enabled"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>The subscription name does not exist.</p>",
          "members": {
          }
        }
      ]
    },
    "describe_events": {
      "name": "DescribeEvents",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Returns events related to DB Instances, DB Security Groups, DB Snapshots and DB Parameter Groups for the past 14 days. Events specific to a particular DB Instance, DB Security Group, database snapshot or DB Parameter Group can be obtained by providing the name as a parameter. By default, the past hour of events are returned. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "source_identifier": {
            "type": "string",
            "documentation": "<p> The identifier of the event source for which events will be returned. If not specified, then all sources are included in the response. </p> <p>Constraints:</p> <ul> <li>If SourceIdentifier is supplied, SourceType must also be provided.</li> <li>If the source type is DBInstance, then a DBInstanceIdentifier must be supplied.</li> <li>If the source type is DBSecurityGroup, a DBSecurityGroupName must be supplied.</li> <li>If the source type is DBParameterGroup, a DBParameterGroupName must be supplied.</li> <li>If the source type is DBSnapshot, a DBSnapshotIdentifier must be supplied.</li> <li>Cannot end with a hyphen or contain two consecutive hyphens.</li> </ul>",
            "serialized_name": "SourceIdentifier"
          },
          "source_type": {
            "type": "string",
            "documentation": "<p> The event source to retrieve events for. If no value is specified, all events are returned. </p>",
            "serialized_name": "SourceType",
            "enum": [
              "db-instance",
              "db-parameter-group",
              "db-security-group",
              "db-snapshot"
            ]
          },
          "start_time": {
            "type": "timestamp",
            "documentation": "<p> The beginning of the time interval to retrieve events for, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>",
            "serialized_name": "StartTime"
          },
          "end_time": {
            "type": "timestamp",
            "documentation": "<p> The end of the time interval for which to retrieve events, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>",
            "serialized_name": "EndTime"
          },
          "duration": {
            "type": "integer",
            "documentation": "<p> The number of minutes to retrieve events for. </p> <p>Default: 60</p>",
            "serialized_name": "Duration"
          },
          "event_categories": {
            "type": "list",
            "documentation": "<p> A list of event categories that trigger notifications for a event notification subscription. </p>",
            "serialized_name": "EventCategories",
            "members": {
              "type": "string",
              "serialized_name": "EventCategory"
            }
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results may be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous DescribeEvents request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> Contains the result of a successful invocation of the DescribeEvents action. </p>",
        "members": {
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous Events request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . </p>",
            "serialized_name": "Marker"
          },
          "events": {
            "type": "list",
            "documentation": "<p> A list of Event instances. </p>",
            "serialized_name": "Events",
            "members": {
              "type": "structure",
              "documentation": "<p> This data type is used as a response element in the DescribeEvents action. </p>",
              "serialized_name": "Event",
              "members": {
                "source_identifier": {
                  "type": "string",
                  "documentation": "<p> Provides the identifier for the source of the event. </p>",
                  "serialized_name": "SourceIdentifier"
                },
                "source_type": {
                  "type": "string",
                  "documentation": "<p> Specifies the source type for this event. </p>",
                  "serialized_name": "SourceType",
                  "enum": [
                    "db-instance",
                    "db-parameter-group",
                    "db-security-group",
                    "db-snapshot"
                  ]
                },
                "message": {
                  "type": "string",
                  "documentation": "<p> Provides the text of this event. </p>",
                  "serialized_name": "Message"
                },
                "event_categories": {
                  "type": "list",
                  "documentation": "<p> Specifies the category for the event. </p>",
                  "serialized_name": "EventCategories",
                  "members": {
                    "type": "string",
                    "serialized_name": "EventCategory"
                  }
                },
                "date": {
                  "type": "timestamp",
                  "documentation": "<p> Specifies the date and time of the event. </p>",
                  "serialized_name": "Date"
                }
              }
            }
          }
        }
      }
    },
    "describe_option_group_options": {
      "name": "DescribeOptionGroupOptions",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Describes all available options. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "engine_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> A required parameter. Options available for the given Engine name will be described. </p>",
            "serialized_name": "EngineName"
          },
          "major_engine_version": {
            "type": "string",
            "documentation": "<p> If specified, filters the results to include only options for the specified major engine version. </p>",
            "serialized_name": "MajorEngineVersion"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "option_group_options": {
            "type": "list",
            "documentation": "<p> List of available option group options. </p>",
            "serialized_name": "OptionGroupOptions",
            "members": {
              "type": "structure",
              "documentation": "<p> Available option. </p>",
              "serialized_name": "OptionGroupOption",
              "members": {
                "name": {
                  "type": "string",
                  "documentation": "<p> The name of the option. </p>",
                  "serialized_name": "Name"
                },
                "description": {
                  "type": "string",
                  "documentation": "<p> The description of the option. </p>",
                  "serialized_name": "Description"
                },
                "engine_name": {
                  "type": "string",
                  "documentation": "<p> Engine name that this option can be applied to. </p>",
                  "serialized_name": "EngineName"
                },
                "major_engine_version": {
                  "type": "string",
                  "documentation": "<p> Indicates the major engine version that the option is available for. </p>",
                  "serialized_name": "MajorEngineVersion"
                },
                "minimum_required_minor_engine_version": {
                  "type": "string",
                  "documentation": "<p> The minimum required engine version for the option to be applied. </p>",
                  "serialized_name": "MinimumRequiredMinorEngineVersion"
                },
                "port_required": {
                  "type": "boolean",
                  "documentation": "<p> Specifies whether the option requires a port. </p>",
                  "serialized_name": "PortRequired"
                },
                "default_port": {
                  "type": "integer",
                  "documentation": "<p> If the option requires a port, specifies the default port for the option. </p>",
                  "serialized_name": "DefaultPort"
                },
                "options_depended_on": {
                  "type": "list",
                  "documentation": "<p> List of all options that are prerequisites for this option. </p>",
                  "serialized_name": "OptionsDependedOn",
                  "members": {
                    "type": "string",
                    "serialized_name": "OptionName"
                  }
                },
                "persistent": {
                  "type": "boolean",
                  "documentation": "<p> Specifies whether the option is persistent in an option group. </p>",
                  "serialized_name": "Persistent"
                },
                "option_group_option_settings": {
                  "type": "list",
                  "documentation": "<p> Specifies the option settings that are available (and the default value) for each option in an option group. </p>",
                  "serialized_name": "OptionGroupOptionSettings",
                  "members": {
                    "type": "structure",
                    "documentation": "<p> Option Group option settings are used to display settings available for each option with their default values and other information. These values are used with the DescribeOptionGroupOptions action. </p>",
                    "serialized_name": "OptionGroupOptionSetting",
                    "members": {
                      "setting_name": {
                        "type": "string",
                        "documentation": "<p> The name of the option group option. </p>",
                        "serialized_name": "SettingName"
                      },
                      "setting_description": {
                        "type": "string",
                        "documentation": "<p> The description of the option group option. </p>",
                        "serialized_name": "SettingDescription"
                      },
                      "default_value": {
                        "type": "string",
                        "documentation": "<p> The default value for the option group option. </p>",
                        "serialized_name": "DefaultValue"
                      },
                      "apply_type": {
                        "type": "string",
                        "documentation": "<p> The DB engine specific parameter type for the option group option. </p>",
                        "serialized_name": "ApplyType"
                      },
                      "allowed_values": {
                        "type": "string",
                        "documentation": "<p> Indicates the acceptable values for the option group option. </p>",
                        "serialized_name": "AllowedValues"
                      },
                      "is_modifiable": {
                        "type": "boolean",
                        "documentation": "<p> Boolean value where true indicates that this option group option can be changed from the default value. </p>",
                        "serialized_name": "IsModifiable"
                      }
                    }
                  }
                }
              }
            }
          },
          "marker": {
            "type": "string",
            "documentation": "<p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>",
            "serialized_name": "Marker"
          }
        }
      }
    },
    "describe_option_groups": {
      "name": "DescribeOptionGroups",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Describes the available option groups. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "option_group_name": {
            "type": "string",
            "documentation": "<p> The name of the option group to describe. Cannot be supplied together with EngineName or MajorEngineVersion. </p>",
            "serialized_name": "OptionGroupName"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous DescribeOptionGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "engine_name": {
            "type": "string",
            "documentation": "<p> Filters the list of option groups to only include groups associated with a specific database engine. </p>",
            "serialized_name": "EngineName"
          },
          "major_engine_version": {
            "type": "string",
            "documentation": "<p> Filters the list of option groups to only include groups associated with a specific database engine version. If specified, then EngineName must also be specified. </p>",
            "serialized_name": "MajorEngineVersion"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> List of option groups. </p>",
        "members": {
          "option_groups_list": {
            "type": "list",
            "documentation": "<p> List of option groups. </p>",
            "serialized_name": "OptionGroupsList",
            "members": {
              "type": "structure",
              "documentation": "<p> </p>",
              "serialized_name": "OptionGroup",
              "metadata": {
                "wrapper": true
              },
              "members": {
                "option_group_name": {
                  "type": "string",
                  "documentation": "<p> Specifies the name of the option group. </p>",
                  "serialized_name": "OptionGroupName"
                },
                "option_group_description": {
                  "type": "string",
                  "documentation": "<p> Provides the description of the option group. </p>",
                  "serialized_name": "OptionGroupDescription"
                },
                "engine_name": {
                  "type": "string",
                  "documentation": "<p> Engine name that this option group can be applied to. </p>",
                  "serialized_name": "EngineName"
                },
                "major_engine_version": {
                  "type": "string",
                  "documentation": "<p> Indicates the major engine version associated with this option group. </p>",
                  "serialized_name": "MajorEngineVersion"
                },
                "options": {
                  "type": "list",
                  "documentation": "<p> Indicates what options are available in the option group. </p>",
                  "serialized_name": "Options",
                  "members": {
                    "type": "structure",
                    "documentation": "<p> Option details. </p>",
                    "serialized_name": "Option",
                    "members": {
                      "option_name": {
                        "type": "string",
                        "documentation": "<p> The name of the option. </p>",
                        "serialized_name": "OptionName"
                      },
                      "option_description": {
                        "type": "string",
                        "documentation": "<p> The description of the option. </p>",
                        "serialized_name": "OptionDescription"
                      },
                      "persistent": {
                        "type": "boolean",
                        "documentation": "<p> Indicate if this option is persistent. </p>",
                        "serialized_name": "Persistent"
                      },
                      "port": {
                        "type": "integer",
                        "documentation": "<p> If required, the port configured for this option to use. </p>",
                        "serialized_name": "Port"
                      },
                      "option_settings": {
                        "type": "list",
                        "documentation": "<p> The option settings for this option. </p>",
                        "serialized_name": "OptionSettings",
                        "members": {
                          "type": "structure",
                          "documentation": "<p> Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values. </p>",
                          "serialized_name": "OptionSetting",
                          "members": {
                            "name": {
                              "type": "string",
                              "documentation": "<p> The name of the option that has settings that you can set. </p>",
                              "serialized_name": "Name"
                            },
                            "value": {
                              "type": "string",
                              "documentation": "<p> The current value of the option setting. </p>",
                              "serialized_name": "Value"
                            },
                            "default_value": {
                              "type": "string",
                              "documentation": "<p> The default value of the option setting. </p>",
                              "serialized_name": "DefaultValue"
                            },
                            "description": {
                              "type": "string",
                              "documentation": "<p> The description of the option setting. </p>",
                              "serialized_name": "Description"
                            },
                            "apply_type": {
                              "type": "string",
                              "documentation": "<p> The DB engine specific parameter type. </p>",
                              "serialized_name": "ApplyType"
                            },
                            "data_type": {
                              "type": "string",
                              "documentation": "<p> The data type of the option setting. </p>",
                              "serialized_name": "DataType"
                            },
                            "allowed_values": {
                              "type": "string",
                              "documentation": "<p> The allowed values of the option setting. </p>",
                              "serialized_name": "AllowedValues"
                            },
                            "is_modifiable": {
                              "type": "boolean",
                              "documentation": "<p> A Boolean value that, when true, indicates the option setting can be modified from the default. </p>",
                              "serialized_name": "IsModifiable"
                            },
                            "is_collection": {
                              "type": "boolean",
                              "documentation": "<p> Indicates if the option setting is part of a collection. </p>",
                              "serialized_name": "IsCollection"
                            }
                          }
                        }
                      },
                      "db_security_group_memberships": {
                        "type": "list",
                        "documentation": "<p> If the option requires access to a port, then this DB Security Group allows access to the port. </p>",
                        "serialized_name": "DBSecurityGroupMemberships",
                        "members": {
                          "type": "structure",
                          "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> <li>RestoreDBInstanceToPointInTime</li> </ul>",
                          "serialized_name": "DBSecurityGroup",
                          "members": {
                            "db_security_group_name": {
                              "type": "string",
                              "documentation": "<p> The name of the DB Security Group. </p>",
                              "serialized_name": "DBSecurityGroupName"
                            },
                            "status": {
                              "type": "string",
                              "documentation": "<p> The status of the DB Security Group. </p>",
                              "serialized_name": "Status"
                            }
                          }
                        }
                      },
                      "vpc_security_group_memberships": {
                        "type": "list",
                        "documentation": "<p> If the option requires access to a port, then this VPC Security Group allows access to the port. </p>",
                        "serialized_name": "VpcSecurityGroupMemberships",
                        "members": {
                          "type": "structure",
                          "documentation": "<p>This data type is used as a response element for queries on VPC security group membership.</p>",
                          "serialized_name": "VpcSecurityGroupMembership",
                          "members": {
                            "vpc_security_group_id": {
                              "type": "string",
                              "documentation": "<p>The name of the VPC security group.</p>",
                              "serialized_name": "VpcSecurityGroupId"
                            },
                            "status": {
                              "type": "string",
                              "documentation": "<p> The status of the VPC Security Group. </p>",
                              "serialized_name": "Status"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "allows_vpc_and_non_vpc_instance_memberships": {
                  "type": "boolean",
                  "documentation": "<p> Indicates whether this option group can be applied to both VPC and non-VPC instances. The value 'true' indicates the option group can be applied to both VPC and non-VPC instances. </p>",
                  "serialized_name": "AllowsVpcAndNonVpcInstanceMemberships"
                },
                "vpc_id": {
                  "type": "string",
                  "documentation": "<p> If AllowsVpcAndNonVpcInstanceMemberships is 'false', this field is blank. If AllowsVpcAndNonVpcInstanceMemberships is 'true' and this field is blank, then this option group can be applied to both VPC and non-VPC instances. If this field contains a value, then this option group can only be applied to instances that are in the VPC indicated by this field. </p>",
                  "serialized_name": "VpcId"
                }
              }
            }
          },
          "marker": {
            "type": "string",
            "documentation": "<p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> The specified option group could not be found. </p>",
          "members": {
          }
        }
      ]
    },
    "describe_orderable_db_instance_options": {
      "name": "DescribeOrderableDBInstanceOptions",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Returns a list of orderable DB Instance options for the specified engine. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "engine": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the engine to retrieve DB Instance options for. </p>",
            "serialized_name": "Engine"
          },
          "engine_version": {
            "type": "string",
            "documentation": "<p> The engine version filter value. Specify this parameter to show only the available offerings matching the specified engine version. </p>",
            "serialized_name": "EngineVersion"
          },
          "db_instance_class": {
            "type": "string",
            "documentation": "<p> The DB Instance class filter value. Specify this parameter to show only the available offerings matching the specified DB Instance class. </p>",
            "serialized_name": "DBInstanceClass"
          },
          "license_model": {
            "type": "string",
            "documentation": "<p> The license model filter value. Specify this parameter to show only the available offerings matching the specified license model. </p>",
            "serialized_name": "LicenseModel"
          },
          "vpc": {
            "type": "boolean",
            "documentation": "<p> The VPC filter value. Specify this parameter to show only the available VPC or non-VPC offerings. </p>",
            "serialized_name": "Vpc"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> Contains the result of a successful invocation of the DescribeOrderableDBInstanceOptions action. </p>",
        "members": {
          "orderable_db_instance_options": {
            "type": "list",
            "documentation": "<p>An OrderableDBInstanceOption structure containing information about orderable options for the DB Instance.</p>",
            "serialized_name": "OrderableDBInstanceOptions",
            "members": {
              "type": "structure",
              "documentation": "<p> Contains a list of available options for a DB Instance </p> <p> This data type is used as a response element in the DescribeOrderableDBInstanceOptions action. </p>",
              "serialized_name": "OrderableDBInstanceOption",
              "metadata": {
                "wrapper": true
              },
              "members": {
                "engine": {
                  "type": "string",
                  "documentation": "<p> The engine type of the orderable DB Instance. </p>",
                  "serialized_name": "Engine"
                },
                "engine_version": {
                  "type": "string",
                  "documentation": "<p> The engine version of the orderable DB Instance. </p>",
                  "serialized_name": "EngineVersion"
                },
                "db_instance_class": {
                  "type": "string",
                  "documentation": "<p> The DB Instance Class for the orderable DB Instance </p>",
                  "serialized_name": "DBInstanceClass"
                },
                "license_model": {
                  "type": "string",
                  "documentation": "<p> The license model for the orderable DB Instance. </p>",
                  "serialized_name": "LicenseModel"
                },
                "availability_zones": {
                  "type": "list",
                  "documentation": "<p> A list of availability zones for the orderable DB Instance. </p>",
                  "serialized_name": "AvailabilityZones",
                  "members": {
                    "type": "structure",
                    "documentation": "<p> Contains Availability Zone information. </p> <p> This data type is used as an element in the following data type: <ul> <li>OrderableDBInstanceOption</li> </ul> </p>",
                    "serialized_name": "AvailabilityZone",
                    "metadata": {
                      "wrapper": true
                    },
                    "members": {
                      "name": {
                        "type": "string",
                        "documentation": "<p> The name of the availability zone. </p>",
                        "serialized_name": "Name"
                      },
                      "provisioned_iops_capable": {
                        "type": "boolean",
                        "documentation": "<p> True indicates the availability zone is capable of provisioned IOPs. </p>",
                        "serialized_name": "ProvisionedIopsCapable"
                      }
                    }
                  }
                },
                "multi_az_capable": {
                  "type": "boolean",
                  "documentation": "<p> Indicates whether this orderable DB Instance is multi-AZ capable. </p>",
                  "serialized_name": "MultiAZCapable"
                },
                "read_replica_capable": {
                  "type": "boolean",
                  "documentation": "<p> Indicates whether this orderable DB Instance can have a read replica. </p>",
                  "serialized_name": "ReadReplicaCapable"
                },
                "vpc": {
                  "type": "boolean",
                  "documentation": "<p> Indicates whether this is a VPC orderable DB Instance. </p>",
                  "serialized_name": "Vpc"
                }
              }
            }
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous OrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . </p>",
            "serialized_name": "Marker"
          }
        }
      }
    },
    "describe_reserved_db_instances": {
      "name": "DescribeReservedDBInstances",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Returns information about reserved DB Instances for this account, or about a specified reserved DB Instance. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "reserved_db_instance_id": {
            "type": "string",
            "documentation": "<p> The reserved DB Instance identifier filter value. Specify this parameter to show only the reservation that matches the specified reservation ID. </p>",
            "serialized_name": "ReservedDBInstanceId"
          },
          "reserved_db_instances_offering_id": {
            "type": "string",
            "documentation": "<p> The offering identifier filter value. Specify this parameter to show only purchased reservations matching the specified offering identifier. </p>",
            "serialized_name": "ReservedDBInstancesOfferingId"
          },
          "db_instance_class": {
            "type": "string",
            "documentation": "<p> The DB Instance class filter value. Specify this parameter to show only those reservations matching the specified DB Instances class. </p>",
            "serialized_name": "DBInstanceClass"
          },
          "duration": {
            "type": "string",
            "documentation": "<p> The duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration. </p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code></p>",
            "serialized_name": "Duration"
          },
          "product_description": {
            "type": "string",
            "documentation": "<p> The product description filter value. Specify this parameter to show only those reservations matching the specified product description. </p>",
            "serialized_name": "ProductDescription"
          },
          "offering_type": {
            "type": "string",
            "documentation": "<p> The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type. </p> <p>Valid Values: <code>\"Light Utilization\" | \"Medium Utilization\" | \"Heavy Utilization\" </code></p>",
            "serialized_name": "OfferingType"
          },
          "multi_az": {
            "type": "boolean",
            "documentation": "<p> The Multi-AZ filter value. Specify this parameter to show only those reservations matching the specified Multi-AZ parameter. </p>",
            "serialized_name": "MultiAZ"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so that the following results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> Contains the result of a successful invocation of the DescribeReservedDBInstances action. </p>",
        "members": {
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          },
          "reserved_db_instances": {
            "type": "list",
            "documentation": "<p> A list of of reserved DB Instances. </p>",
            "serialized_name": "ReservedDBInstances",
            "members": {
              "type": "structure",
              "documentation": "<p> This data type is used as a response element in the DescribeReservedDBInstances and PurchaseReservedDBInstancesOffering actions. </p>",
              "serialized_name": "ReservedDBInstance",
              "metadata": {
                "wrapper": true
              },
              "members": {
                "reserved_db_instance_id": {
                  "type": "string",
                  "documentation": "<p> The unique identifier for the reservation. </p>",
                  "serialized_name": "ReservedDBInstanceId"
                },
                "reserved_db_instances_offering_id": {
                  "type": "string",
                  "documentation": "<p> The offering identifier. </p>",
                  "serialized_name": "ReservedDBInstancesOfferingId"
                },
                "db_instance_class": {
                  "type": "string",
                  "documentation": "<p> The DB instance class for the reserved DB Instance. </p>",
                  "serialized_name": "DBInstanceClass"
                },
                "start_time": {
                  "type": "timestamp",
                  "documentation": "<p> The time the reservation started. </p>",
                  "serialized_name": "StartTime"
                },
                "duration": {
                  "type": "integer",
                  "documentation": "<p> The duration of the reservation in seconds. </p>",
                  "serialized_name": "Duration"
                },
                "fixed_price": {
                  "type": "float",
                  "documentation": "<p> The fixed price charged for this reserved DB Instance. </p>",
                  "serialized_name": "FixedPrice"
                },
                "usage_price": {
                  "type": "float",
                  "documentation": "<p> The hourly price charged for this reserved DB Instance. </p>",
                  "serialized_name": "UsagePrice"
                },
                "currency_code": {
                  "type": "string",
                  "documentation": "<p> The currency code for the reserved DB Instance. </p>",
                  "serialized_name": "CurrencyCode"
                },
                "db_instance_count": {
                  "type": "integer",
                  "documentation": "<p> The number of reserved DB Instances. </p>",
                  "serialized_name": "DBInstanceCount"
                },
                "product_description": {
                  "type": "string",
                  "documentation": "<p> The description of the reserved DB Instance. </p>",
                  "serialized_name": "ProductDescription"
                },
                "offering_type": {
                  "type": "string",
                  "documentation": "<p> The offering type of this reserved DB Instance. </p>",
                  "serialized_name": "OfferingType"
                },
                "multi_az": {
                  "type": "boolean",
                  "documentation": "<p> Indicates if the reservation applies to Multi-AZ deployments. </p>",
                  "serialized_name": "MultiAZ"
                },
                "state": {
                  "type": "string",
                  "documentation": "<p> The state of the reserved DB Instance. </p>",
                  "serialized_name": "State"
                },
                "recurring_charges": {
                  "type": "list",
                  "documentation": "<p> The recurring price charged to run this reserved DB Instance. </p>",
                  "serialized_name": "RecurringCharges",
                  "members": {
                    "type": "structure",
                    "documentation": "<p> This data type is used as a response element in the DescribeReservedDBInstances and DescribeReservedDBInstancesOfferings actions. </p>",
                    "serialized_name": "RecurringCharge",
                    "metadata": {
                      "wrapper": true
                    },
                    "members": {
                      "recurring_charge_amount": {
                        "type": "float",
                        "documentation": "<p> The amount of the recurring charge. </p>",
                        "serialized_name": "RecurringChargeAmount"
                      },
                      "recurring_charge_frequency": {
                        "type": "string",
                        "documentation": "<p> The frequency of the recurring charge. </p>",
                        "serialized_name": "RecurringChargeFrequency"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> The specified reserved DB Instance not found. </p>",
          "members": {
          }
        }
      ]
    },
    "describe_reserved_db_instances_offerings": {
      "name": "DescribeReservedDBInstancesOfferings",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Lists available reserved DB Instance offerings. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "reserved_db_instances_offering_id": {
            "type": "string",
            "documentation": "<p> The offering identifier filter value. Specify this parameter to show only the available offering that matches the specified reservation identifier. </p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code></p>",
            "serialized_name": "ReservedDBInstancesOfferingId"
          },
          "db_instance_class": {
            "type": "string",
            "documentation": "<p> The DB Instance class filter value. Specify this parameter to show only the available offerings matching the specified DB Instance class. </p>",
            "serialized_name": "DBInstanceClass"
          },
          "duration": {
            "type": "string",
            "documentation": "<p> Duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration. </p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code></p>",
            "serialized_name": "Duration"
          },
          "product_description": {
            "type": "string",
            "documentation": "<p> Product description filter value. Specify this parameter to show only the available offerings matching the specified product description. </p>",
            "serialized_name": "ProductDescription"
          },
          "offering_type": {
            "type": "string",
            "documentation": "<p> The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type. </p> <p>Valid Values: <code>\"Light Utilization\" | \"Medium Utilization\" | \"Heavy Utilization\" </code></p>",
            "serialized_name": "OfferingType"
          },
          "multi_az": {
            "type": "boolean",
            "documentation": "<p> The Multi-AZ filter value. Specify this parameter to show only the available offerings matching the specified Multi-AZ parameter. </p>",
            "serialized_name": "MultiAZ"
          },
          "max_records": {
            "type": "integer",
            "documentation": "<p> The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so that the following results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100</p>",
            "serialized_name": "MaxRecords"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> Contains the result of a successful invocation of the DescribeReservedDBInstancesOfferings action. </p>",
        "members": {
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>",
            "serialized_name": "Marker"
          },
          "reserved_db_instances_offerings": {
            "type": "list",
            "documentation": "<p> A list of reserved DB Instance offerings. </p>",
            "serialized_name": "ReservedDBInstancesOfferings",
            "members": {
              "type": "structure",
              "documentation": "<p> This data type is used as a response element in the DescribeReservedDBInstancesOfferings action. </p>",
              "serialized_name": "ReservedDBInstancesOffering",
              "metadata": {
                "wrapper": true
              },
              "members": {
                "reserved_db_instances_offering_id": {
                  "type": "string",
                  "documentation": "<p> The offering identifier. </p>",
                  "serialized_name": "ReservedDBInstancesOfferingId"
                },
                "db_instance_class": {
                  "type": "string",
                  "documentation": "<p> The DB instance class for the reserved DB Instance. </p>",
                  "serialized_name": "DBInstanceClass"
                },
                "duration": {
                  "type": "integer",
                  "documentation": "<p> The duration of the offering in seconds. </p>",
                  "serialized_name": "Duration"
                },
                "fixed_price": {
                  "type": "float",
                  "documentation": "<p> The fixed price charged for this offering. </p>",
                  "serialized_name": "FixedPrice"
                },
                "usage_price": {
                  "type": "float",
                  "documentation": "<p> The hourly price charged for this offering. </p>",
                  "serialized_name": "UsagePrice"
                },
                "currency_code": {
                  "type": "string",
                  "documentation": "<p> The currency code for the reserved DB Instance offering. </p>",
                  "serialized_name": "CurrencyCode"
                },
                "product_description": {
                  "type": "string",
                  "documentation": "<p> The database engine used by the offering. </p>",
                  "serialized_name": "ProductDescription"
                },
                "offering_type": {
                  "type": "string",
                  "documentation": "<p> The offering type. </p>",
                  "serialized_name": "OfferingType"
                },
                "multi_az": {
                  "type": "boolean",
                  "documentation": "<p> Indicates if the offering applies to Multi-AZ deployments. </p>",
                  "serialized_name": "MultiAZ"
                },
                "recurring_charges": {
                  "type": "list",
                  "documentation": "<p> The recurring price charged to run this reserved DB Instance. </p>",
                  "serialized_name": "RecurringCharges",
                  "members": {
                    "type": "structure",
                    "documentation": "<p> This data type is used as a response element in the DescribeReservedDBInstances and DescribeReservedDBInstancesOfferings actions. </p>",
                    "serialized_name": "RecurringCharge",
                    "metadata": {
                      "wrapper": true
                    },
                    "members": {
                      "recurring_charge_amount": {
                        "type": "float",
                        "documentation": "<p> The amount of the recurring charge. </p>",
                        "serialized_name": "RecurringChargeAmount"
                      },
                      "recurring_charge_frequency": {
                        "type": "string",
                        "documentation": "<p> The frequency of the recurring charge. </p>",
                        "serialized_name": "RecurringChargeFrequency"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> Specified offering does not exist. </p>",
          "members": {
          }
        }
      ]
    },
    "download_db_log_file_portion": {
      "name": "DownloadDBLogFilePortion",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Downloads the last line of the specified log file. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_instance_identifier": {
            "type": "string",
            "documentation": "<p> The customer-assigned name of the DB Instance that contains the log files you want to list. </p> <p>Constraints:</p> <ul> <li>Must contain from 1 to 63 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBInstanceIdentifier"
          },
          "log_file_name": {
            "type": "string",
            "documentation": "<p> The name of the log file to be downloaded. </p>",
            "serialized_name": "LogFileName"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to MaxRecords. </p>",
            "serialized_name": "Marker"
          },
          "number_of_lines": {
            "type": "integer",
            "documentation": "<p> The number of lines remaining to be downloaded. </p>",
            "serialized_name": "NumberOfLines"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>This data type is used as a response element to DownloadDBLogFilePortion.</p>",
        "members": {
          "log_file_data": {
            "type": "string",
            "documentation": "<p> Entries from the specified log file. </p>",
            "serialized_name": "LogFileData"
          },
          "marker": {
            "type": "string",
            "documentation": "<p> An optional pagination token provided by a previous DownloadDBLogFilePortion request. </p>",
            "serialized_name": "Marker"
          },
          "additional_data_pending": {
            "type": "boolean",
            "documentation": "<p> Boolean value that if true, indicates there is more data to be downloaded. </p>",
            "serialized_name": "AdditionalDataPending"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBInstanceIdentifier</i> does not refer to an existing DB Instance. </p>",
          "members": {
          }
        }
      ]
    },
    "list_tags_for_resource": {
      "name": "ListTagsForResource",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Lists all tags on a DB Instance.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p></p>",
        "members": {
          "resource_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The DB Instance with tags to be listed. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html#USER_Tagging.ARN\"> Constructing an RDS Amazon Resource Name (ARN)</a>.</p>",
            "serialized_name": "ResourceName"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p></p>",
        "members": {
          "tag_list": {
            "type": "list",
            "documentation": "<p>List of tags returned by the ListTagsForResource operation.</p>",
            "serialized_name": "TagList",
            "members": {
              "type": "structure",
              "documentation": "<p>Metadata assigned to a DB Instance consisting of a key-value pair.</p>",
              "serialized_name": "Tag",
              "members": {
                "key": {
                  "type": "string",
                  "documentation": "<p>A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\". The string may only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p`{L}\\\\p{Z}\\\\p{N}`_.:/=+\\\\-]*)$\").</p>",
                  "serialized_name": "Key"
                },
                "value": {
                  "type": "string",
                  "documentation": "<p>A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\". The string may only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p`{L}\\\\p{Z}\\\\p{N}`_.:/=+\\\\-]*)$\").</p>",
                  "serialized_name": "Value"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBInstanceIdentifier</i> does not refer to an existing DB Instance. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSnapshotIdentifier</i> does not refer to an existing DB Snapshot. </p>",
          "members": {
          }
        }
      ]
    },
    "modify_db_instance": {
      "name": "ModifyDBInstance",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Modify settings for a DB Instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_instance_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The DB Instance identifier. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li>Must be the identifier for an existing DB Instance</li> <li>Must contain from 1 to 63 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBInstanceIdentifier"
          },
          "allocated_storage": {
            "type": "integer",
            "documentation": "<p> The new storage capacity of the RDS instance. Changing this parameter does not result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. </p> <p><b>MySQL</b></p> <p>Default: Uses existing setting</p> <p>Valid Values: 5-1024</p> <p>Constraints: Value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value.</p> <p>Type: Integer</p> <p><b>Oracle</b></p> <p>Default: Uses existing setting</p> <p>Valid Values: 10-1024</p> <p>Constraints: Value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value.</p> <p><b>SQL Server</b></p> <p>Cannot be modified.</p> <p> If you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance will be available for use, but may experience performance degradation. While the migration takes place, nightly backups for the instance will be suspended. No other Amazon RDS operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a read replica for the instance, and creating a DB snapshot of the instance. </p>",
            "serialized_name": "AllocatedStorage"
          },
          "db_instance_class": {
            "type": "string",
            "documentation": "<p> The new compute and memory capacity of the DB Instance. To determine the instance classes that are available for a particular DB engine, use the DescribeOrderableDBInstanceOptions action. </p> <p> Passing a value for this parameter causes an outage during the change and is applied during the next maintenance window, unless the <code>ApplyImmediately</code> parameter is specified as <code>true</code> for this request. </p> <p>Default: Uses existing setting</p> <p>Valid Values: <code>db.t1.micro | db.m1.small | db.m1.medium | db.m1.large | db.m1.xlarge | db.m2.xlarge | db.m2.2xlarge | db.m2.4xlarge</code></p>",
            "serialized_name": "DBInstanceClass"
          },
          "db_security_groups": {
            "type": "list",
            "documentation": "<p> A list of DB Security Groups to authorize on this DB Instance. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible. </p> <p>Constraints:</p> <ul> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBSecurityGroups",
            "members": {
              "type": "string",
              "serialized_name": "DBSecurityGroupName"
            }
          },
          "vpc_security_group_ids": {
            "type": "list",
            "documentation": "<p> A list of EC2 VPC Security Groups to authorize on this DB Instance. This change is asynchronously applied as soon as possible. </p> <p>Constraints:</p> <ul> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "VpcSecurityGroupIds",
            "members": {
              "type": "string",
              "serialized_name": "VpcSecurityGroupId"
            }
          },
          "apply_immediately": {
            "type": "boolean",
            "documentation": "<p> Specifies whether or not the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the DB Instance. </p> <p> If this parameter is passed as <code>false</code>, changes to the DB Instance are applied on the next call to RebootDBInstance, the next maintenance reboot, or the next failure reboot, whichever occurs first. See each parameter to determine when a change is applied. </p> <p>Default: <code>false</code></p>",
            "serialized_name": "ApplyImmediately"
          },
          "master_user_password": {
            "type": "string",
            "documentation": "<p> The new password for the DB Instance master user. Can be any printable ASCII character except \"/\", \"\\\", or \"@\".</p> <p> Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible. Between the time of the request and the completion of the request, the <code>MasterUserPassword</code> element exists in the <code>PendingModifiedValues</code> element of the operation response. </p> <p>Default: Uses existing setting</p> <p>Constraints: Must be 8 to 41 alphanumeric characters (MySQL), 8 to 30 alphanumeric characters (Oracle), or 8 to 128 alphanumeric characters (SQL Server).</p> Amazon RDS API actions never return the password, so this action provides a way to regain access to a master instance user if the password is lost.",
            "serialized_name": "MasterUserPassword"
          },
          "db_parameter_group_name": {
            "type": "string",
            "documentation": "<p> The name of the DB Parameter Group to apply to this DB Instance. Changing this parameter does not result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. </p> <p>Default: Uses existing setting</p> <p>Constraints: The DB Parameter Group must be in the same DB Parameter Group family as this DB Instance.</p>",
            "serialized_name": "DBParameterGroupName"
          },
          "backup_retention_period": {
            "type": "integer",
            "documentation": "<p> The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups. </p> <p>Changing this parameter can result in an outage if you change from 0 to a non-zero value or from a non-zero value to 0. These changes are applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. If you change the parameter from one non-zero value to another non-zero value, the change is asynchronously applied as soon as possible.</p> <p>Default: Uses existing setting</p> <p>Constraints:</p> <ul> <li>Must be a value from 0 to 8</li> <li>Cannot be set to 0 if the DB Instance is a master instance with read replicas or if the DB Instance is a read replica</li> </ul>",
            "serialized_name": "BackupRetentionPeriod"
          },
          "preferred_backup_window": {
            "type": "string",
            "documentation": "<p> The daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible. </p> <p>Constraints:</p> <ul> <li>Must be in the format hh24:mi-hh24:mi</li> <li>Times should be Universal Time Coordinated (UTC)</li> <li>Must not conflict with the preferred maintenance window</li> <li>Must be at least 30 minutes</li> </ul>",
            "serialized_name": "PreferredBackupWindow"
          },
          "preferred_maintenance_window": {
            "type": "string",
            "documentation": "<p> The weekly time range (in UTC) during which system maintenance can occur, which may result in an outage. Changing this parameter does not result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If there are pending actions that cause a reboot, and the maintenance window is changed to include the current time, then changing this parameter will cause a reboot of the DB Instance. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied. </p> <p>Default: Uses existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes</p>",
            "serialized_name": "PreferredMaintenanceWindow"
          },
          "multi_az": {
            "type": "boolean",
            "documentation": "<p> Specifies if the DB Instance is a Multi-AZ deployment. Changing this parameter does not result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. </p> <p>Constraints: Cannot be specified if the DB Instance is a read replica.</p>",
            "serialized_name": "MultiAZ"
          },
          "engine_version": {
            "type": "string",
            "documentation": "<p> The version number of the database engine to upgrade to. Changing this parameter results in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. </p> <p> For major version upgrades, if a nondefault DB Parameter Group is currently in use, a new DB Parameter Group in the DB Parameter Group Family for the new engine version must be specified. The new DB Parameter Group can be the default for that DB Parameter Group Family. </p> <p>Example: <code>5.1.42</code></p>",
            "serialized_name": "EngineVersion"
          },
          "allow_major_version_upgrade": {
            "type": "boolean",
            "documentation": "<p> Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible. </p> <p>Constraints: This parameter must be set to true when specifying a value for the EngineVersion parameter that is a different major version than the DB Instance's current version.</p>",
            "serialized_name": "AllowMajorVersionUpgrade"
          },
          "auto_minor_version_upgrade": {
            "type": "boolean",
            "documentation": "<p> Indicates that minor version upgrades will be applied automatically to the DB Instance during the maintenance window. Changing this parameter does not result in an outage except in the following case and the change is asynchronously applied as soon as possible. An outage will result if this parameter is set to <code>true</code> during the maintenance window, and a newer minor version is available, and RDS has enabled auto patching for that engine version. </p>",
            "serialized_name": "AutoMinorVersionUpgrade"
          },
          "iops": {
            "type": "integer",
            "documentation": "<p> The new Provisioned IOPS (I/O operations per second) value for the RDS instance. Changing this parameter does not result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. </p> <p>Default: Uses existing setting</p> <p>Constraints: Value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value.</p> <p>Type: Integer</p> <p> If you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance will be available for use, but may experience performance degradation. While the migration takes place, nightly backups for the instance will be suspended. No other Amazon RDS operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a read replica for the instance, and creating a DB snapshot of the instance. </p>",
            "serialized_name": "Iops"
          },
          "option_group_name": {
            "type": "string",
            "documentation": "<p> Indicates that the DB Instance should be associated with the specified option group. Changing this parameter does not result in an outage except in the following case and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. If the parameter change results in an option group that enables OEM, this change can cause a brief (sub-second) period during which new connections are rejected but existing connections are not interrupted. </p> <p> Permanent options, such as the TDE option for Oracle Advanced Security TDE, cannot be removed from an option group, and that option group cannot be removed from a DB instance once it is associated with a DB instance </p>",
            "serialized_name": "OptionGroupName"
          },
          "new_db_instance_identifier": {
            "type": "string",
            "documentation": "<p> The new DB Instance identifier for the DB Instance when renaming a DB Instance. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li>Must contain from 1 to 63 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "NewDBInstanceIdentifier"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_instance": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBInstance</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> </ul> <p>This data type is used as a response element in the DescribeDBInstances action.</p>",
            "serialized_name": "DBInstance",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains a user-supplied database identifier. This is the unique key that identifies a DB Instance. </p>",
                "serialized_name": "DBInstanceIdentifier"
              },
              "db_instance_class": {
                "type": "string",
                "documentation": "<p> Contains the name of the compute and memory capacity class of the DB Instance. </p>",
                "serialized_name": "DBInstanceClass"
              },
              "engine": {
                "type": "string",
                "documentation": "<p> Provides the name of the database engine to be used for this DB Instance. </p>",
                "serialized_name": "Engine"
              },
              "db_instance_status": {
                "type": "string",
                "documentation": "<p> Specifies the current state of this database. </p>",
                "serialized_name": "DBInstanceStatus"
              },
              "master_username": {
                "type": "string",
                "documentation": "<p> Contains the master username for the DB Instance. </p>",
                "serialized_name": "MasterUsername"
              },
              "db_name": {
                "type": "string",
                "documentation": "<p>The meaning of this parameter differs according to the database engine you use.</p> <p><b>MySQL</b></p> <p> Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB Instance was created. This same name is returned for the life of the DB Instance. </p> <p>Type: String</p> <p><b>Oracle</b></p> <p> Contains the Oracle System ID (SID) of the created DB Instance. </p>",
                "serialized_name": "DBName"
              },
              "endpoint": {
                "type": "structure",
                "documentation": "<p> Specifies the connection endpoint. </p>",
                "serialized_name": "Endpoint",
                "members": {
                  "address": {
                    "type": "string",
                    "documentation": "<p> Specifies the DNS address of the DB Instance. </p>",
                    "serialized_name": "Address"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the port that the database engine is listening on. </p>",
                    "serialized_name": "Port"
                  }
                }
              },
              "allocated_storage": {
                "type": "integer",
                "documentation": "<p> Specifies the allocated storage size specified in gigabytes. </p>",
                "serialized_name": "AllocatedStorage"
              },
              "instance_create_time": {
                "type": "timestamp",
                "documentation": "<p> Provides the date and time the DB Instance was created. </p>",
                "serialized_name": "InstanceCreateTime"
              },
              "preferred_backup_window": {
                "type": "string",
                "documentation": "<p> Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. </p>",
                "serialized_name": "PreferredBackupWindow"
              },
              "backup_retention_period": {
                "type": "integer",
                "documentation": "<p> Specifies the number of days for which automatic DB Snapshots are retained. </p>",
                "serialized_name": "BackupRetentionPeriod"
              },
              "db_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of DB Security Group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. </p>",
                "serialized_name": "DBSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> <li>RestoreDBInstanceToPointInTime</li> </ul>",
                  "serialized_name": "DBSecurityGroup",
                  "members": {
                    "db_security_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DB Security Group. </p>",
                      "serialized_name": "DBSecurityGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "vpc_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of VPC security group elements that the DB Instance belongs to. </p>",
                "serialized_name": "VpcSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p>This data type is used as a response element for queries on VPC security group membership.</p>",
                  "serialized_name": "VpcSecurityGroupMembership",
                  "members": {
                    "vpc_security_group_id": {
                      "type": "string",
                      "documentation": "<p>The name of the VPC security group.</p>",
                      "serialized_name": "VpcSecurityGroupId"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the VPC Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "db_parameter_groups": {
                "type": "list",
                "documentation": "<p> Provides the list of DB Parameter Groups applied to this DB Instance. </p>",
                "serialized_name": "DBParameterGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> The status of the DB Parameter Group. </p> <p>This data type is used as a response element in the following actions:</p> <ul> <li>CreateDBInstance</li> <li>CreateDBInstanceReadReplica</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> </ul>",
                  "serialized_name": "DBParameterGroup",
                  "members": {
                    "db_parameter_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DP Parameter Group. </p>",
                      "serialized_name": "DBParameterGroupName"
                    },
                    "parameter_apply_status": {
                      "type": "string",
                      "documentation": "<p> The status of parameter updates. </p>",
                      "serialized_name": "ParameterApplyStatus"
                    }
                  }
                }
              },
              "availability_zone": {
                "type": "string",
                "documentation": "<p> Specifies the name of the Availability Zone the DB Instance is located in. </p>",
                "serialized_name": "AvailabilityZone"
              },
              "db_subnet_group": {
                "type": "structure",
                "documentation": "<p> Provides the inforamtion of the subnet group associated with the DB instance, including the name, descrption and subnets in the subnet group. </p>",
                "serialized_name": "DBSubnetGroup",
                "metadata": {
                  "wrapper": true
                },
                "members": {
                  "db_subnet_group_name": {
                    "type": "string",
                    "documentation": "<p> Specifies the name of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupName"
                  },
                  "db_subnet_group_description": {
                    "type": "string",
                    "documentation": "<p> Provides the description of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupDescription"
                  },
                  "vpc_id": {
                    "type": "string",
                    "documentation": "<p> Provides the VpcId of the DB Subnet Group. </p>",
                    "serialized_name": "VpcId"
                  },
                  "subnet_group_status": {
                    "type": "string",
                    "documentation": "<p> Provides the status of the DB Subnet Group. </p>",
                    "serialized_name": "SubnetGroupStatus"
                  },
                  "subnets": {
                    "type": "list",
                    "documentation": "<p> Contains a list of Subnet elements. </p>",
                    "serialized_name": "Subnets",
                    "members": {
                      "type": "structure",
                      "documentation": "<p> This data type is used as a response element in the DescribeDBSubnetGroups action. </p>",
                      "serialized_name": "Subnet",
                      "members": {
                        "subnet_identifier": {
                          "type": "string",
                          "documentation": "<p> Specifies the identifier of the subnet. </p>",
                          "serialized_name": "SubnetIdentifier"
                        },
                        "subnet_availability_zone": {
                          "type": "structure",
                          "documentation": "<p> Contains Availability Zone information. </p> <p> This data type is used as an element in the following data type: <ul> <li>OrderableDBInstanceOption</li> </ul> </p>",
                          "serialized_name": "SubnetAvailabilityZone",
                          "metadata": {
                            "wrapper": true
                          },
                          "members": {
                            "name": {
                              "type": "string",
                              "documentation": "<p> The name of the availability zone. </p>",
                              "serialized_name": "Name"
                            },
                            "provisioned_iops_capable": {
                              "type": "boolean",
                              "documentation": "<p> True indicates the availability zone is capable of provisioned IOPs. </p>",
                              "serialized_name": "ProvisionedIopsCapable"
                            }
                          }
                        },
                        "subnet_status": {
                          "type": "string",
                          "documentation": "<p> Specifies the status of the subnet. </p>",
                          "serialized_name": "SubnetStatus"
                        }
                      }
                    }
                  }
                }
              },
              "preferred_maintenance_window": {
                "type": "string",
                "documentation": "<p> Specifies the weekly time range (in UTC) during which system maintenance can occur. </p>",
                "serialized_name": "PreferredMaintenanceWindow"
              },
              "pending_modified_values": {
                "type": "structure",
                "documentation": "<p> Specifies that changes to the DB Instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements. </p>",
                "serialized_name": "PendingModifiedValues",
                "members": {
                  "db_instance_class": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceClass</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceClass"
                  },
                  "allocated_storage": {
                    "type": "integer",
                    "documentation": "<p> Contains the new <code>AllocatedStorage</code> size for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "AllocatedStorage"
                  },
                  "master_user_password": {
                    "type": "string",
                    "documentation": "<p> Contains the pending or in-progress change of the master credentials for the DB Instance. </p>",
                    "serialized_name": "MasterUserPassword"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending port for the DB Instance. </p>",
                    "serialized_name": "Port"
                  },
                  "backup_retention_period": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending number of days for which automated backups are retained. </p>",
                    "serialized_name": "BackupRetentionPeriod"
                  },
                  "multi_az": {
                    "type": "boolean",
                    "documentation": "<p> Indicates that the Single-AZ DB Instance is to change to a Multi-AZ deployment. </p>",
                    "serialized_name": "MultiAZ"
                  },
                  "engine_version": {
                    "type": "string",
                    "documentation": "<p> Indicates the database engine version. </p>",
                    "serialized_name": "EngineVersion"
                  },
                  "iops": {
                    "type": "integer",
                    "documentation": "<p> Specifies the new Provisioned IOPS value for the DB Instance that will be applied or is being applied. </p>",
                    "serialized_name": "Iops"
                  },
                  "db_instance_identifier": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceIdentifier</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceIdentifier"
                  }
                }
              },
              "latest_restorable_time": {
                "type": "timestamp",
                "documentation": "<p> Specifies the latest time to which a database can be restored with point-in-time restore. </p>",
                "serialized_name": "LatestRestorableTime"
              },
              "multi_az": {
                "type": "boolean",
                "documentation": "<p> Specifies if the DB Instance is a Multi-AZ deployment. </p>",
                "serialized_name": "MultiAZ"
              },
              "engine_version": {
                "type": "string",
                "documentation": "<p> Indicates the database engine version. </p>",
                "serialized_name": "EngineVersion"
              },
              "auto_minor_version_upgrade": {
                "type": "boolean",
                "documentation": "<p> Indicates that minor version patches are applied automatically. </p>",
                "serialized_name": "AutoMinorVersionUpgrade"
              },
              "read_replica_source_db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains the identifier of the source DB Instance if this DB Instance is a Read Replica. </p>",
                "serialized_name": "ReadReplicaSourceDBInstanceIdentifier"
              },
              "read_replica_db_instance_identifiers": {
                "type": "list",
                "documentation": "<p> Contains one or more identifiers of the Read Replicas associated with this DB Instance. </p>",
                "serialized_name": "ReadReplicaDBInstanceIdentifiers",
                "members": {
                  "type": "string",
                  "serialized_name": "ReadReplicaDBInstanceIdentifier"
                }
              },
              "license_model": {
                "type": "string",
                "documentation": "<p> License model information for this DB Instance. </p>",
                "serialized_name": "LicenseModel"
              },
              "iops": {
                "type": "integer",
                "documentation": "<p> Specifies the Provisioned IOPS (I/O operations per second) value. </p>",
                "serialized_name": "Iops"
              },
              "option_group_memberships": {
                "type": "list",
                "documentation": "<p> Provides the list of option group memberships for this DB Instance. </p>",
                "serialized_name": "OptionGroupMemberships",
                "members": {
                  "type": "structure",
                  "documentation": "<p> Provides information on the option groups the DB instance is a member of. </p>",
                  "serialized_name": "OptionGroupMembership",
                  "members": {
                    "option_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the option group that the instance belongs to. </p>",
                      "serialized_name": "OptionGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Instance's option group membership (e.g. in-sync, pending, pending-maintenance, applying). </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "character_set_name": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the character set that this instance is associated with. </p>",
                "serialized_name": "CharacterSetName"
              },
              "secondary_availability_zone": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support. </p>",
                "serialized_name": "SecondaryAvailabilityZone"
              },
              "publicly_accessible": {
                "type": "boolean",
                "documentation": "<p> Specifies the accessibility options for the DB Instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p> <p> Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case. </p> <ul> <li> <b>Default VPC:</b>true</li> <li> <b>VPC:</b>false</li> </ul> <p> If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private. </p>",
                "serialized_name": "PubliclyAccessible"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> The specified DB Instance is not in the <i>available</i> state. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The state of the DB Security Group does not allow deletion. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> User already has a DB Instance with the given identifier. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBInstanceIdentifier</i> does not refer to an existing DB Instance. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSecurityGroupName</i> does not refer to an existing DB Security Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBParameterGroupName</i> does not refer to an existing DB Parameter Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Specified DB Instance class is not available in the specified Availability Zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed amount of storage available across all DB Instances. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> DB Subnet Group does not cover all availability zones after it is created because users' change. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Provisioned IOPS not available in the specified Availability Zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The specified option group could not be found. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "members": {
          }
        }
      ]
    },
    "modify_db_parameter_group": {
      "name": "ModifyDBParameterGroup",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Modifies the parameters of a DBParameterGroup. To modify more than one parameter submit a list of the following: ParameterName, ParameterValue, and ApplyMethod. A maximum of 20 parameters can be modified in a single request. </p> <p> The <code>apply-immediate</code> method can be used only for dynamic parameters; the <code>pending-reboot</code> method can be used with MySQL and Oracle DB Instances for either dynamic or static parameters. For Microsoft SQL Server DB Instances, the <code>pending-reboot</code> method can be used only for static parameters. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_parameter_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the DB Parameter Group. </p> <p>Constraints:</p> <ul> <li>Must be the name of an existing DB Parameter Group</li> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBParameterGroupName"
          },
          "parameters": {
            "type": "list",
            "required": true,
            "documentation": "<p> An array of parameter names, values, and the apply method for the parameter update. At least one parameter name, value, and apply method must be supplied; subsequent arguments are optional. A maximum of 20 parameters may be modified in a single request. </p> <p>Valid Values (for the application method): <code>immediate | pending-reboot</code></p> You can use the immediate value with dynamic parameters only. You can use the pending-reboot value for both dynamic and static parameters, and changes are applied when DB Instance reboots.",
            "serialized_name": "Parameters",
            "members": {
              "type": "structure",
              "documentation": "<p> This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions. </p> <p>This data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions.</p>",
              "serialized_name": "Parameter",
              "members": {
                "parameter_name": {
                  "type": "string",
                  "documentation": "<p> Specifies the name of the parameter. </p>",
                  "serialized_name": "ParameterName"
                },
                "parameter_value": {
                  "type": "string",
                  "documentation": "<p> Specifies the value of the parameter. </p>",
                  "serialized_name": "ParameterValue"
                },
                "description": {
                  "type": "string",
                  "documentation": "<p> Provides a description of the parameter. </p>",
                  "serialized_name": "Description"
                },
                "source": {
                  "type": "string",
                  "documentation": "<p> Indicates the source of the parameter value. </p>",
                  "serialized_name": "Source"
                },
                "apply_type": {
                  "type": "string",
                  "documentation": "<p> Specifies the engine specific parameters type. </p>",
                  "serialized_name": "ApplyType"
                },
                "data_type": {
                  "type": "string",
                  "documentation": "<p> Specifies the valid data type for the parameter. </p>",
                  "serialized_name": "DataType"
                },
                "allowed_values": {
                  "type": "string",
                  "documentation": "<p> Specifies the valid range of values for the parameter. </p>",
                  "serialized_name": "AllowedValues"
                },
                "is_modifiable": {
                  "type": "boolean",
                  "documentation": "<p> Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. </p>",
                  "serialized_name": "IsModifiable"
                },
                "minimum_engine_version": {
                  "type": "string",
                  "documentation": "<p> The earliest engine version to which the parameter can apply. </p>",
                  "serialized_name": "MinimumEngineVersion"
                },
                "apply_method": {
                  "type": "string",
                  "documentation": "<p> Indicates when to apply parameter updates. </p>",
                  "serialized_name": "ApplyMethod",
                  "enum": [
                    "immediate",
                    "pending-reboot"
                  ]
                }
              }
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> Contains the result of a successful invocation of the ModifyDBParameterGroup or ResetDBParameterGroup action. </p>",
        "members": {
          "db_parameter_group_name": {
            "type": "string",
            "documentation": "<p> The name of the DB Parameter Group. </p>",
            "serialized_name": "DBParameterGroupName"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBParameterGroupName</i> does not refer to an existing DB Parameter Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The DB Parameter Group cannot be deleted because it is in use. </p>",
          "members": {
          }
        }
      ]
    },
    "modify_db_subnet_group": {
      "name": "ModifyDBSubnetGroup",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the region. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_subnet_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name for the DB Subnet Group. This value is stored as a lowercase string. </p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens. Must not be \"Default\".</p> <p>Example: <code>mySubnetgroup</code></p>",
            "serialized_name": "DBSubnetGroupName"
          },
          "db_subnet_group_description": {
            "type": "string",
            "documentation": "<p> The description for the DB Subnet Group. </p>",
            "serialized_name": "DBSubnetGroupDescription"
          },
          "subnet_ids": {
            "type": "list",
            "required": true,
            "documentation": "<p> The EC2 Subnet IDs for the DB Subnet Group. </p>",
            "serialized_name": "SubnetIds",
            "members": {
              "type": "string",
              "serialized_name": "SubnetIdentifier"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_subnet_group": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBSubnetGroup</li> <li>ModifyDBSubnetGroup</li> <li>DescribeDBSubnetGroups</li> <li>DeleteDBSubnetGroup</li> </ul> <p>This data type is used as a response element in the DescribeDBSubnetGroups action.</p>",
            "serialized_name": "DBSubnetGroup",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_subnet_group_name": {
                "type": "string",
                "documentation": "<p> Specifies the name of the DB Subnet Group. </p>",
                "serialized_name": "DBSubnetGroupName"
              },
              "db_subnet_group_description": {
                "type": "string",
                "documentation": "<p> Provides the description of the DB Subnet Group. </p>",
                "serialized_name": "DBSubnetGroupDescription"
              },
              "vpc_id": {
                "type": "string",
                "documentation": "<p> Provides the VpcId of the DB Subnet Group. </p>",
                "serialized_name": "VpcId"
              },
              "subnet_group_status": {
                "type": "string",
                "documentation": "<p> Provides the status of the DB Subnet Group. </p>",
                "serialized_name": "SubnetGroupStatus"
              },
              "subnets": {
                "type": "list",
                "documentation": "<p> Contains a list of Subnet elements. </p>",
                "serialized_name": "Subnets",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the DescribeDBSubnetGroups action. </p>",
                  "serialized_name": "Subnet",
                  "members": {
                    "subnet_identifier": {
                      "type": "string",
                      "documentation": "<p> Specifies the identifier of the subnet. </p>",
                      "serialized_name": "SubnetIdentifier"
                    },
                    "subnet_availability_zone": {
                      "type": "structure",
                      "documentation": "<p> Contains Availability Zone information. </p> <p> This data type is used as an element in the following data type: <ul> <li>OrderableDBInstanceOption</li> </ul> </p>",
                      "serialized_name": "SubnetAvailabilityZone",
                      "metadata": {
                        "wrapper": true
                      },
                      "members": {
                        "name": {
                          "type": "string",
                          "documentation": "<p> The name of the availability zone. </p>",
                          "serialized_name": "Name"
                        },
                        "provisioned_iops_capable": {
                          "type": "boolean",
                          "documentation": "<p> True indicates the availability zone is capable of provisioned IOPs. </p>",
                          "serialized_name": "ProvisionedIopsCapable"
                        }
                      }
                    },
                    "subnet_status": {
                      "type": "string",
                      "documentation": "<p> Specifies the status of the subnet. </p>",
                      "serialized_name": "SubnetStatus"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBSubnetGroupName</i> does not refer to an existing DB Subnet Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed number of subnets in a DB subnet Groups. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The DB subnet is already in use in the availability zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Subnets in the DB subnet group should cover at least 2 availability zones unless there's'only 1 available zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request subnet is valid, or all subnets are not in common Vpc. </p>",
          "members": {
          }
        }
      ]
    },
    "modify_event_subscription": {
      "name": "ModifyEventSubscription",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Modifies an existing RDS event notification subscription. Note that you cannot modify the source identifiers using this call; to change source identifiers for a subscription, use the AddSourceIdentifierToSubscription and RemoveSourceIdentifierFromSubscription calls.</p> <p>You can see a list of the event categories for a given SourceType in the <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\">Events</a> topic in the Amazon RDS User Guide or by using the <b>DescribeEventCategories</b> action.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p></p>",
        "members": {
          "subscription_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The name of the RDS event notification subscription.</p>",
            "serialized_name": "SubscriptionName"
          },
          "sns_topic_arn": {
            "type": "string",
            "documentation": "<p> The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it. </p>",
            "serialized_name": "SnsTopicArn"
          },
          "source_type": {
            "type": "string",
            "documentation": "<p> The type of source that will be generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. if this value is not specified, all events are returned. </p> <p>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</p>",
            "serialized_name": "SourceType"
          },
          "event_categories": {
            "type": "list",
            "documentation": "<p> A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType in the <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\">Events</a> topic in the Amazon RDS User Guide or by using the <b>DescribeEventCategories</b> action. </p>",
            "serialized_name": "EventCategories",
            "members": {
              "type": "string",
              "serialized_name": "EventCategory"
            }
          },
          "enabled": {
            "type": "boolean",
            "documentation": "<p> A Boolean value; set to <b>true</b> to activate the subscription. </p>",
            "serialized_name": "Enabled"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "event_subscription": {
            "type": "structure",
            "documentation": "<p>Contains the results of a successful invocation of the DescribeEventSubscriptions action.</p>",
            "serialized_name": "EventSubscription",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "customer_aws_id": {
                "type": "string",
                "documentation": "<p>The AWS customer account associated with the RDS event notification subscription.</p>",
                "serialized_name": "CustomerAwsId"
              },
              "cust_subscription_id": {
                "type": "string",
                "documentation": "<p>The RDS event notification subscription Id.</p>",
                "serialized_name": "CustSubscriptionId"
              },
              "sns_topic_arn": {
                "type": "string",
                "documentation": "<p>The topic ARN of the RDS event notification subscription.</p>",
                "serialized_name": "SnsTopicArn"
              },
              "status": {
                "type": "string",
                "documentation": "<p>The status of the RDS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that RDS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                "serialized_name": "Status"
              },
              "subscription_creation_time": {
                "type": "string",
                "documentation": "<p>The time the RDS event notification subscription was created.</p>",
                "serialized_name": "SubscriptionCreationTime"
              },
              "source_type": {
                "type": "string",
                "documentation": "<p>The source type for the RDS event notification subscription.</p>",
                "serialized_name": "SourceType"
              },
              "source_ids_list": {
                "type": "list",
                "documentation": "<p>A list of source Ids for the RDS event notification subscription.</p>",
                "serialized_name": "SourceIdsList",
                "members": {
                  "type": "string",
                  "serialized_name": "SourceId"
                }
              },
              "event_categories_list": {
                "type": "list",
                "documentation": "<p>A list of event categories for the RDS event notification subscription.</p>",
                "serialized_name": "EventCategoriesList",
                "members": {
                  "type": "string",
                  "serialized_name": "EventCategory"
                }
              },
              "enabled": {
                "type": "boolean",
                "documentation": "<p>A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.</p>",
                "serialized_name": "Enabled"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>You have reached the maximum number of event subscriptions.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>The subscription name does not exist.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>SNS has responded that there is a problem with the SND topic specified.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>You do not have permission to publish to the SNS topic ARN.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>The SNS topic ARN does not exist.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>The supplied category does not exist.</p>",
          "members": {
          }
        }
      ]
    },
    "modify_option_group": {
      "name": "ModifyOptionGroup",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Modifies an existing Option Group. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "option_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the option group to be modified. </p> <p> Permanent options, such as the TDE option for Oracle Advanced Security TDE, cannot be removed from an option group, and that option group cannot be removed from a DB instance once it is associated with a DB instance </p>",
            "serialized_name": "OptionGroupName"
          },
          "options_to_include": {
            "type": "list",
            "documentation": "<p> Options in this list are added to the Option Group or, if already present, the specified configuration is used to update the existing configuration. </p>",
            "serialized_name": "OptionsToInclude",
            "members": {
              "type": "structure",
              "documentation": "<p> A list of all available options </p>",
              "serialized_name": "OptionConfiguration",
              "members": {
                "option_name": {
                  "type": "string",
                  "required": true,
                  "documentation": "<p> The configuration of options to include in a group. </p>",
                  "serialized_name": "OptionName"
                },
                "port": {
                  "type": "integer",
                  "documentation": "<p> The optional port for the option. </p>",
                  "serialized_name": "Port"
                },
                "db_security_group_memberships": {
                  "type": "list",
                  "documentation": "<p> A list of DBSecurityGroupMemebrship name strings used for this option. </p>",
                  "serialized_name": "DBSecurityGroupMemberships",
                  "members": {
                    "type": "string",
                    "serialized_name": "DBSecurityGroupName"
                  }
                },
                "vpc_security_group_memberships": {
                  "type": "list",
                  "documentation": "<p> A list of VpcSecurityGroupMemebrship name strings used for this option. </p>",
                  "serialized_name": "VpcSecurityGroupMemberships",
                  "members": {
                    "type": "string",
                    "serialized_name": "VpcSecurityGroupId"
                  }
                },
                "option_settings": {
                  "type": "list",
                  "documentation": "<p> The option settings to include in an option group. </p>",
                  "serialized_name": "OptionSettings",
                  "members": {
                    "type": "structure",
                    "documentation": "<p> Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values. </p>",
                    "serialized_name": "OptionSetting",
                    "members": {
                      "name": {
                        "type": "string",
                        "documentation": "<p> The name of the option that has settings that you can set. </p>",
                        "serialized_name": "Name"
                      },
                      "value": {
                        "type": "string",
                        "documentation": "<p> The current value of the option setting. </p>",
                        "serialized_name": "Value"
                      },
                      "default_value": {
                        "type": "string",
                        "documentation": "<p> The default value of the option setting. </p>",
                        "serialized_name": "DefaultValue"
                      },
                      "description": {
                        "type": "string",
                        "documentation": "<p> The description of the option setting. </p>",
                        "serialized_name": "Description"
                      },
                      "apply_type": {
                        "type": "string",
                        "documentation": "<p> The DB engine specific parameter type. </p>",
                        "serialized_name": "ApplyType"
                      },
                      "data_type": {
                        "type": "string",
                        "documentation": "<p> The data type of the option setting. </p>",
                        "serialized_name": "DataType"
                      },
                      "allowed_values": {
                        "type": "string",
                        "documentation": "<p> The allowed values of the option setting. </p>",
                        "serialized_name": "AllowedValues"
                      },
                      "is_modifiable": {
                        "type": "boolean",
                        "documentation": "<p> A Boolean value that, when true, indicates the option setting can be modified from the default. </p>",
                        "serialized_name": "IsModifiable"
                      },
                      "is_collection": {
                        "type": "boolean",
                        "documentation": "<p> Indicates if the option setting is part of a collection. </p>",
                        "serialized_name": "IsCollection"
                      }
                    }
                  }
                }
              }
            }
          },
          "options_to_remove": {
            "type": "list",
            "documentation": "<p> Options in this list are removed from the Option Group. </p>",
            "serialized_name": "OptionsToRemove",
            "members": {
              "type": "string"
            }
          },
          "apply_immediately": {
            "type": "boolean",
            "documentation": "<p> Indicates whether the changes should be applied immediately, or during the next maintenance window for each instance associated with the Option Group. </p>",
            "serialized_name": "ApplyImmediately"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "option_group": {
            "type": "structure",
            "documentation": "<p> </p>",
            "serialized_name": "OptionGroup",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "option_group_name": {
                "type": "string",
                "documentation": "<p> Specifies the name of the option group. </p>",
                "serialized_name": "OptionGroupName"
              },
              "option_group_description": {
                "type": "string",
                "documentation": "<p> Provides the description of the option group. </p>",
                "serialized_name": "OptionGroupDescription"
              },
              "engine_name": {
                "type": "string",
                "documentation": "<p> Engine name that this option group can be applied to. </p>",
                "serialized_name": "EngineName"
              },
              "major_engine_version": {
                "type": "string",
                "documentation": "<p> Indicates the major engine version associated with this option group. </p>",
                "serialized_name": "MajorEngineVersion"
              },
              "options": {
                "type": "list",
                "documentation": "<p> Indicates what options are available in the option group. </p>",
                "serialized_name": "Options",
                "members": {
                  "type": "structure",
                  "documentation": "<p> Option details. </p>",
                  "serialized_name": "Option",
                  "members": {
                    "option_name": {
                      "type": "string",
                      "documentation": "<p> The name of the option. </p>",
                      "serialized_name": "OptionName"
                    },
                    "option_description": {
                      "type": "string",
                      "documentation": "<p> The description of the option. </p>",
                      "serialized_name": "OptionDescription"
                    },
                    "persistent": {
                      "type": "boolean",
                      "documentation": "<p> Indicate if this option is persistent. </p>",
                      "serialized_name": "Persistent"
                    },
                    "port": {
                      "type": "integer",
                      "documentation": "<p> If required, the port configured for this option to use. </p>",
                      "serialized_name": "Port"
                    },
                    "option_settings": {
                      "type": "list",
                      "documentation": "<p> The option settings for this option. </p>",
                      "serialized_name": "OptionSettings",
                      "members": {
                        "type": "structure",
                        "documentation": "<p> Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values. </p>",
                        "serialized_name": "OptionSetting",
                        "members": {
                          "name": {
                            "type": "string",
                            "documentation": "<p> The name of the option that has settings that you can set. </p>",
                            "serialized_name": "Name"
                          },
                          "value": {
                            "type": "string",
                            "documentation": "<p> The current value of the option setting. </p>",
                            "serialized_name": "Value"
                          },
                          "default_value": {
                            "type": "string",
                            "documentation": "<p> The default value of the option setting. </p>",
                            "serialized_name": "DefaultValue"
                          },
                          "description": {
                            "type": "string",
                            "documentation": "<p> The description of the option setting. </p>",
                            "serialized_name": "Description"
                          },
                          "apply_type": {
                            "type": "string",
                            "documentation": "<p> The DB engine specific parameter type. </p>",
                            "serialized_name": "ApplyType"
                          },
                          "data_type": {
                            "type": "string",
                            "documentation": "<p> The data type of the option setting. </p>",
                            "serialized_name": "DataType"
                          },
                          "allowed_values": {
                            "type": "string",
                            "documentation": "<p> The allowed values of the option setting. </p>",
                            "serialized_name": "AllowedValues"
                          },
                          "is_modifiable": {
                            "type": "boolean",
                            "documentation": "<p> A Boolean value that, when true, indicates the option setting can be modified from the default. </p>",
                            "serialized_name": "IsModifiable"
                          },
                          "is_collection": {
                            "type": "boolean",
                            "documentation": "<p> Indicates if the option setting is part of a collection. </p>",
                            "serialized_name": "IsCollection"
                          }
                        }
                      }
                    },
                    "db_security_group_memberships": {
                      "type": "list",
                      "documentation": "<p> If the option requires access to a port, then this DB Security Group allows access to the port. </p>",
                      "serialized_name": "DBSecurityGroupMemberships",
                      "members": {
                        "type": "structure",
                        "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> <li>RestoreDBInstanceToPointInTime</li> </ul>",
                        "serialized_name": "DBSecurityGroup",
                        "members": {
                          "db_security_group_name": {
                            "type": "string",
                            "documentation": "<p> The name of the DB Security Group. </p>",
                            "serialized_name": "DBSecurityGroupName"
                          },
                          "status": {
                            "type": "string",
                            "documentation": "<p> The status of the DB Security Group. </p>",
                            "serialized_name": "Status"
                          }
                        }
                      }
                    },
                    "vpc_security_group_memberships": {
                      "type": "list",
                      "documentation": "<p> If the option requires access to a port, then this VPC Security Group allows access to the port. </p>",
                      "serialized_name": "VpcSecurityGroupMemberships",
                      "members": {
                        "type": "structure",
                        "documentation": "<p>This data type is used as a response element for queries on VPC security group membership.</p>",
                        "serialized_name": "VpcSecurityGroupMembership",
                        "members": {
                          "vpc_security_group_id": {
                            "type": "string",
                            "documentation": "<p>The name of the VPC security group.</p>",
                            "serialized_name": "VpcSecurityGroupId"
                          },
                          "status": {
                            "type": "string",
                            "documentation": "<p> The status of the VPC Security Group. </p>",
                            "serialized_name": "Status"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "allows_vpc_and_non_vpc_instance_memberships": {
                "type": "boolean",
                "documentation": "<p> Indicates whether this option group can be applied to both VPC and non-VPC instances. The value 'true' indicates the option group can be applied to both VPC and non-VPC instances. </p>",
                "serialized_name": "AllowsVpcAndNonVpcInstanceMemberships"
              },
              "vpc_id": {
                "type": "string",
                "documentation": "<p> If AllowsVpcAndNonVpcInstanceMemberships is 'false', this field is blank. If AllowsVpcAndNonVpcInstanceMemberships is 'true' and this field is blank, then this option group can be applied to both VPC and non-VPC instances. If this field contains a value, then this option group can only be applied to instances that are in the VPC indicated by this field. </p>",
                "serialized_name": "VpcId"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> The Option Group is not in the <i>available</i> state. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The specified option group could not be found. </p>",
          "members": {
          }
        }
      ]
    },
    "promote_read_replica": {
      "name": "PromoteReadReplica",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Promotes a Read Replica DB Instance to a standalone DB Instance. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_instance_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The DB Instance identifier. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li>Must be the identifier for an existing Read Replica DB Instance</li> <li>Must contain from 1 to 63 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul> <p>Example: <copy>mydbinstance</copy></p>",
            "serialized_name": "DBInstanceIdentifier"
          },
          "backup_retention_period": {
            "type": "integer",
            "documentation": "<p> The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups. </p> <p> Default: 1 </p> <p>Constraints:</p> <ul> <li>Must be a value from 0 to 8</li> </ul>",
            "serialized_name": "BackupRetentionPeriod"
          },
          "preferred_backup_window": {
            "type": "string",
            "documentation": "<p> The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter. </p> <p> Default: A 30-minute window selected at random from an 8-hour block of time per region. The following list shows the time blocks for each region from which the default backup windows are assigned. </p> <ul> <li> <b>US-East (Northern Virginia) Region:</b> 03:00-11:00 UTC</li> <li> <b>US-West (Northern California) Region:</b> 06:00-14:00 UTC</li> <li> <b>EU (Ireland) Region:</b> 22:00-06:00 UTC</li> <li> <b>Asia Pacific (Singapore) Region:</b> 14:00-22:00 UTC</li> <li> <b>Asia Pacific (Tokyo) Region: </b> 17:00-03:00 UTC</li> </ul> <p> Constraints: Must be in the format <code>hh24:mi-hh24:mi</code>. Times should be Universal Time Coordinated (UTC). Must not conflict with the preferred maintenance window. Must be at least 30 minutes. </p>",
            "serialized_name": "PreferredBackupWindow"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_instance": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBInstance</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> </ul> <p>This data type is used as a response element in the DescribeDBInstances action.</p>",
            "serialized_name": "DBInstance",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains a user-supplied database identifier. This is the unique key that identifies a DB Instance. </p>",
                "serialized_name": "DBInstanceIdentifier"
              },
              "db_instance_class": {
                "type": "string",
                "documentation": "<p> Contains the name of the compute and memory capacity class of the DB Instance. </p>",
                "serialized_name": "DBInstanceClass"
              },
              "engine": {
                "type": "string",
                "documentation": "<p> Provides the name of the database engine to be used for this DB Instance. </p>",
                "serialized_name": "Engine"
              },
              "db_instance_status": {
                "type": "string",
                "documentation": "<p> Specifies the current state of this database. </p>",
                "serialized_name": "DBInstanceStatus"
              },
              "master_username": {
                "type": "string",
                "documentation": "<p> Contains the master username for the DB Instance. </p>",
                "serialized_name": "MasterUsername"
              },
              "db_name": {
                "type": "string",
                "documentation": "<p>The meaning of this parameter differs according to the database engine you use.</p> <p><b>MySQL</b></p> <p> Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB Instance was created. This same name is returned for the life of the DB Instance. </p> <p>Type: String</p> <p><b>Oracle</b></p> <p> Contains the Oracle System ID (SID) of the created DB Instance. </p>",
                "serialized_name": "DBName"
              },
              "endpoint": {
                "type": "structure",
                "documentation": "<p> Specifies the connection endpoint. </p>",
                "serialized_name": "Endpoint",
                "members": {
                  "address": {
                    "type": "string",
                    "documentation": "<p> Specifies the DNS address of the DB Instance. </p>",
                    "serialized_name": "Address"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the port that the database engine is listening on. </p>",
                    "serialized_name": "Port"
                  }
                }
              },
              "allocated_storage": {
                "type": "integer",
                "documentation": "<p> Specifies the allocated storage size specified in gigabytes. </p>",
                "serialized_name": "AllocatedStorage"
              },
              "instance_create_time": {
                "type": "timestamp",
                "documentation": "<p> Provides the date and time the DB Instance was created. </p>",
                "serialized_name": "InstanceCreateTime"
              },
              "preferred_backup_window": {
                "type": "string",
                "documentation": "<p> Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. </p>",
                "serialized_name": "PreferredBackupWindow"
              },
              "backup_retention_period": {
                "type": "integer",
                "documentation": "<p> Specifies the number of days for which automatic DB Snapshots are retained. </p>",
                "serialized_name": "BackupRetentionPeriod"
              },
              "db_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of DB Security Group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. </p>",
                "serialized_name": "DBSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> <li>RestoreDBInstanceToPointInTime</li> </ul>",
                  "serialized_name": "DBSecurityGroup",
                  "members": {
                    "db_security_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DB Security Group. </p>",
                      "serialized_name": "DBSecurityGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "vpc_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of VPC security group elements that the DB Instance belongs to. </p>",
                "serialized_name": "VpcSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p>This data type is used as a response element for queries on VPC security group membership.</p>",
                  "serialized_name": "VpcSecurityGroupMembership",
                  "members": {
                    "vpc_security_group_id": {
                      "type": "string",
                      "documentation": "<p>The name of the VPC security group.</p>",
                      "serialized_name": "VpcSecurityGroupId"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the VPC Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "db_parameter_groups": {
                "type": "list",
                "documentation": "<p> Provides the list of DB Parameter Groups applied to this DB Instance. </p>",
                "serialized_name": "DBParameterGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> The status of the DB Parameter Group. </p> <p>This data type is used as a response element in the following actions:</p> <ul> <li>CreateDBInstance</li> <li>CreateDBInstanceReadReplica</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> </ul>",
                  "serialized_name": "DBParameterGroup",
                  "members": {
                    "db_parameter_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DP Parameter Group. </p>",
                      "serialized_name": "DBParameterGroupName"
                    },
                    "parameter_apply_status": {
                      "type": "string",
                      "documentation": "<p> The status of parameter updates. </p>",
                      "serialized_name": "ParameterApplyStatus"
                    }
                  }
                }
              },
              "availability_zone": {
                "type": "string",
                "documentation": "<p> Specifies the name of the Availability Zone the DB Instance is located in. </p>",
                "serialized_name": "AvailabilityZone"
              },
              "db_subnet_group": {
                "type": "structure",
                "documentation": "<p> Provides the inforamtion of the subnet group associated with the DB instance, including the name, descrption and subnets in the subnet group. </p>",
                "serialized_name": "DBSubnetGroup",
                "metadata": {
                  "wrapper": true
                },
                "members": {
                  "db_subnet_group_name": {
                    "type": "string",
                    "documentation": "<p> Specifies the name of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupName"
                  },
                  "db_subnet_group_description": {
                    "type": "string",
                    "documentation": "<p> Provides the description of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupDescription"
                  },
                  "vpc_id": {
                    "type": "string",
                    "documentation": "<p> Provides the VpcId of the DB Subnet Group. </p>",
                    "serialized_name": "VpcId"
                  },
                  "subnet_group_status": {
                    "type": "string",
                    "documentation": "<p> Provides the status of the DB Subnet Group. </p>",
                    "serialized_name": "SubnetGroupStatus"
                  },
                  "subnets": {
                    "type": "list",
                    "documentation": "<p> Contains a list of Subnet elements. </p>",
                    "serialized_name": "Subnets",
                    "members": {
                      "type": "structure",
                      "documentation": "<p> This data type is used as a response element in the DescribeDBSubnetGroups action. </p>",
                      "serialized_name": "Subnet",
                      "members": {
                        "subnet_identifier": {
                          "type": "string",
                          "documentation": "<p> Specifies the identifier of the subnet. </p>",
                          "serialized_name": "SubnetIdentifier"
                        },
                        "subnet_availability_zone": {
                          "type": "structure",
                          "documentation": "<p> Contains Availability Zone information. </p> <p> This data type is used as an element in the following data type: <ul> <li>OrderableDBInstanceOption</li> </ul> </p>",
                          "serialized_name": "SubnetAvailabilityZone",
                          "metadata": {
                            "wrapper": true
                          },
                          "members": {
                            "name": {
                              "type": "string",
                              "documentation": "<p> The name of the availability zone. </p>",
                              "serialized_name": "Name"
                            },
                            "provisioned_iops_capable": {
                              "type": "boolean",
                              "documentation": "<p> True indicates the availability zone is capable of provisioned IOPs. </p>",
                              "serialized_name": "ProvisionedIopsCapable"
                            }
                          }
                        },
                        "subnet_status": {
                          "type": "string",
                          "documentation": "<p> Specifies the status of the subnet. </p>",
                          "serialized_name": "SubnetStatus"
                        }
                      }
                    }
                  }
                }
              },
              "preferred_maintenance_window": {
                "type": "string",
                "documentation": "<p> Specifies the weekly time range (in UTC) during which system maintenance can occur. </p>",
                "serialized_name": "PreferredMaintenanceWindow"
              },
              "pending_modified_values": {
                "type": "structure",
                "documentation": "<p> Specifies that changes to the DB Instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements. </p>",
                "serialized_name": "PendingModifiedValues",
                "members": {
                  "db_instance_class": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceClass</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceClass"
                  },
                  "allocated_storage": {
                    "type": "integer",
                    "documentation": "<p> Contains the new <code>AllocatedStorage</code> size for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "AllocatedStorage"
                  },
                  "master_user_password": {
                    "type": "string",
                    "documentation": "<p> Contains the pending or in-progress change of the master credentials for the DB Instance. </p>",
                    "serialized_name": "MasterUserPassword"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending port for the DB Instance. </p>",
                    "serialized_name": "Port"
                  },
                  "backup_retention_period": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending number of days for which automated backups are retained. </p>",
                    "serialized_name": "BackupRetentionPeriod"
                  },
                  "multi_az": {
                    "type": "boolean",
                    "documentation": "<p> Indicates that the Single-AZ DB Instance is to change to a Multi-AZ deployment. </p>",
                    "serialized_name": "MultiAZ"
                  },
                  "engine_version": {
                    "type": "string",
                    "documentation": "<p> Indicates the database engine version. </p>",
                    "serialized_name": "EngineVersion"
                  },
                  "iops": {
                    "type": "integer",
                    "documentation": "<p> Specifies the new Provisioned IOPS value for the DB Instance that will be applied or is being applied. </p>",
                    "serialized_name": "Iops"
                  },
                  "db_instance_identifier": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceIdentifier</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceIdentifier"
                  }
                }
              },
              "latest_restorable_time": {
                "type": "timestamp",
                "documentation": "<p> Specifies the latest time to which a database can be restored with point-in-time restore. </p>",
                "serialized_name": "LatestRestorableTime"
              },
              "multi_az": {
                "type": "boolean",
                "documentation": "<p> Specifies if the DB Instance is a Multi-AZ deployment. </p>",
                "serialized_name": "MultiAZ"
              },
              "engine_version": {
                "type": "string",
                "documentation": "<p> Indicates the database engine version. </p>",
                "serialized_name": "EngineVersion"
              },
              "auto_minor_version_upgrade": {
                "type": "boolean",
                "documentation": "<p> Indicates that minor version patches are applied automatically. </p>",
                "serialized_name": "AutoMinorVersionUpgrade"
              },
              "read_replica_source_db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains the identifier of the source DB Instance if this DB Instance is a Read Replica. </p>",
                "serialized_name": "ReadReplicaSourceDBInstanceIdentifier"
              },
              "read_replica_db_instance_identifiers": {
                "type": "list",
                "documentation": "<p> Contains one or more identifiers of the Read Replicas associated with this DB Instance. </p>",
                "serialized_name": "ReadReplicaDBInstanceIdentifiers",
                "members": {
                  "type": "string",
                  "serialized_name": "ReadReplicaDBInstanceIdentifier"
                }
              },
              "license_model": {
                "type": "string",
                "documentation": "<p> License model information for this DB Instance. </p>",
                "serialized_name": "LicenseModel"
              },
              "iops": {
                "type": "integer",
                "documentation": "<p> Specifies the Provisioned IOPS (I/O operations per second) value. </p>",
                "serialized_name": "Iops"
              },
              "option_group_memberships": {
                "type": "list",
                "documentation": "<p> Provides the list of option group memberships for this DB Instance. </p>",
                "serialized_name": "OptionGroupMemberships",
                "members": {
                  "type": "structure",
                  "documentation": "<p> Provides information on the option groups the DB instance is a member of. </p>",
                  "serialized_name": "OptionGroupMembership",
                  "members": {
                    "option_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the option group that the instance belongs to. </p>",
                      "serialized_name": "OptionGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Instance's option group membership (e.g. in-sync, pending, pending-maintenance, applying). </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "character_set_name": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the character set that this instance is associated with. </p>",
                "serialized_name": "CharacterSetName"
              },
              "secondary_availability_zone": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support. </p>",
                "serialized_name": "SecondaryAvailabilityZone"
              },
              "publicly_accessible": {
                "type": "boolean",
                "documentation": "<p> Specifies the accessibility options for the DB Instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p> <p> Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case. </p> <ul> <li> <b>Default VPC:</b>true</li> <li> <b>VPC:</b>false</li> </ul> <p> If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private. </p>",
                "serialized_name": "PubliclyAccessible"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> The specified DB Instance is not in the <i>available</i> state. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBInstanceIdentifier</i> does not refer to an existing DB Instance. </p>",
          "members": {
          }
        }
      ]
    },
    "purchase_reserved_db_instances_offering": {
      "name": "PurchaseReservedDBInstancesOffering",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Purchases a reserved DB Instance offering. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "reserved_db_instances_offering_id": {
            "type": "string",
            "required": true,
            "documentation": "<p> The ID of the Reserved DB Instance offering to purchase. </p> <p>Example: 438012d3-4052-4cc7-b2e3-8d3372e0e706</p>",
            "serialized_name": "ReservedDBInstancesOfferingId"
          },
          "reserved_db_instance_id": {
            "type": "string",
            "documentation": "<p> Customer-specified identifier to track this reservation. </p> <p>Example: myreservationID</p>",
            "serialized_name": "ReservedDBInstanceId"
          },
          "db_instance_count": {
            "type": "integer",
            "documentation": "<p> The number of instances to reserve. </p> <p>Default: <code>1</code></p>",
            "serialized_name": "DBInstanceCount"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "reserved_db_instance": {
            "type": "structure",
            "documentation": "<p> This data type is used as a response element in the DescribeReservedDBInstances and PurchaseReservedDBInstancesOffering actions. </p>",
            "serialized_name": "ReservedDBInstance",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "reserved_db_instance_id": {
                "type": "string",
                "documentation": "<p> The unique identifier for the reservation. </p>",
                "serialized_name": "ReservedDBInstanceId"
              },
              "reserved_db_instances_offering_id": {
                "type": "string",
                "documentation": "<p> The offering identifier. </p>",
                "serialized_name": "ReservedDBInstancesOfferingId"
              },
              "db_instance_class": {
                "type": "string",
                "documentation": "<p> The DB instance class for the reserved DB Instance. </p>",
                "serialized_name": "DBInstanceClass"
              },
              "start_time": {
                "type": "timestamp",
                "documentation": "<p> The time the reservation started. </p>",
                "serialized_name": "StartTime"
              },
              "duration": {
                "type": "integer",
                "documentation": "<p> The duration of the reservation in seconds. </p>",
                "serialized_name": "Duration"
              },
              "fixed_price": {
                "type": "float",
                "documentation": "<p> The fixed price charged for this reserved DB Instance. </p>",
                "serialized_name": "FixedPrice"
              },
              "usage_price": {
                "type": "float",
                "documentation": "<p> The hourly price charged for this reserved DB Instance. </p>",
                "serialized_name": "UsagePrice"
              },
              "currency_code": {
                "type": "string",
                "documentation": "<p> The currency code for the reserved DB Instance. </p>",
                "serialized_name": "CurrencyCode"
              },
              "db_instance_count": {
                "type": "integer",
                "documentation": "<p> The number of reserved DB Instances. </p>",
                "serialized_name": "DBInstanceCount"
              },
              "product_description": {
                "type": "string",
                "documentation": "<p> The description of the reserved DB Instance. </p>",
                "serialized_name": "ProductDescription"
              },
              "offering_type": {
                "type": "string",
                "documentation": "<p> The offering type of this reserved DB Instance. </p>",
                "serialized_name": "OfferingType"
              },
              "multi_az": {
                "type": "boolean",
                "documentation": "<p> Indicates if the reservation applies to Multi-AZ deployments. </p>",
                "serialized_name": "MultiAZ"
              },
              "state": {
                "type": "string",
                "documentation": "<p> The state of the reserved DB Instance. </p>",
                "serialized_name": "State"
              },
              "recurring_charges": {
                "type": "list",
                "documentation": "<p> The recurring price charged to run this reserved DB Instance. </p>",
                "serialized_name": "RecurringCharges",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the DescribeReservedDBInstances and DescribeReservedDBInstancesOfferings actions. </p>",
                  "serialized_name": "RecurringCharge",
                  "metadata": {
                    "wrapper": true
                  },
                  "members": {
                    "recurring_charge_amount": {
                      "type": "float",
                      "documentation": "<p> The amount of the recurring charge. </p>",
                      "serialized_name": "RecurringChargeAmount"
                    },
                    "recurring_charge_frequency": {
                      "type": "string",
                      "documentation": "<p> The frequency of the recurring charge. </p>",
                      "serialized_name": "RecurringChargeFrequency"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> Specified offering does not exist. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> User already has a reservation with the given identifier. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would exceed the user's DB Instance quota. </p>",
          "members": {
          }
        }
      ]
    },
    "reboot_db_instance": {
      "name": "RebootDBInstance",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Reboots a previously provisioned RDS instance. This API results in the application of modified DBParameterGroup parameters with ApplyStatus of pending-reboot to the RDS instance. This action is taken as soon as possible, and results in a momentary outage to the RDS instance during which the RDS instance status is set to rebooting. If the RDS instance is configured for MultiAZ, it is possible that the reboot will be conducted through a failover. A DBInstance event is created when the reboot is completed. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_instance_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The DB Instance identifier. This parameter is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li>Must contain from 1 to 63 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBInstanceIdentifier"
          },
          "force_failover": {
            "type": "boolean",
            "documentation": "<p> When <code>true</code>, the reboot will be conducted through a MultiAZ failover. </p> <p>Constraint: You cannot specify <code>true</code> if the instance is not configured for MultiAZ.</p>",
            "serialized_name": "ForceFailover"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_instance": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBInstance</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> </ul> <p>This data type is used as a response element in the DescribeDBInstances action.</p>",
            "serialized_name": "DBInstance",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains a user-supplied database identifier. This is the unique key that identifies a DB Instance. </p>",
                "serialized_name": "DBInstanceIdentifier"
              },
              "db_instance_class": {
                "type": "string",
                "documentation": "<p> Contains the name of the compute and memory capacity class of the DB Instance. </p>",
                "serialized_name": "DBInstanceClass"
              },
              "engine": {
                "type": "string",
                "documentation": "<p> Provides the name of the database engine to be used for this DB Instance. </p>",
                "serialized_name": "Engine"
              },
              "db_instance_status": {
                "type": "string",
                "documentation": "<p> Specifies the current state of this database. </p>",
                "serialized_name": "DBInstanceStatus"
              },
              "master_username": {
                "type": "string",
                "documentation": "<p> Contains the master username for the DB Instance. </p>",
                "serialized_name": "MasterUsername"
              },
              "db_name": {
                "type": "string",
                "documentation": "<p>The meaning of this parameter differs according to the database engine you use.</p> <p><b>MySQL</b></p> <p> Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB Instance was created. This same name is returned for the life of the DB Instance. </p> <p>Type: String</p> <p><b>Oracle</b></p> <p> Contains the Oracle System ID (SID) of the created DB Instance. </p>",
                "serialized_name": "DBName"
              },
              "endpoint": {
                "type": "structure",
                "documentation": "<p> Specifies the connection endpoint. </p>",
                "serialized_name": "Endpoint",
                "members": {
                  "address": {
                    "type": "string",
                    "documentation": "<p> Specifies the DNS address of the DB Instance. </p>",
                    "serialized_name": "Address"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the port that the database engine is listening on. </p>",
                    "serialized_name": "Port"
                  }
                }
              },
              "allocated_storage": {
                "type": "integer",
                "documentation": "<p> Specifies the allocated storage size specified in gigabytes. </p>",
                "serialized_name": "AllocatedStorage"
              },
              "instance_create_time": {
                "type": "timestamp",
                "documentation": "<p> Provides the date and time the DB Instance was created. </p>",
                "serialized_name": "InstanceCreateTime"
              },
              "preferred_backup_window": {
                "type": "string",
                "documentation": "<p> Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. </p>",
                "serialized_name": "PreferredBackupWindow"
              },
              "backup_retention_period": {
                "type": "integer",
                "documentation": "<p> Specifies the number of days for which automatic DB Snapshots are retained. </p>",
                "serialized_name": "BackupRetentionPeriod"
              },
              "db_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of DB Security Group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. </p>",
                "serialized_name": "DBSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> <li>RestoreDBInstanceToPointInTime</li> </ul>",
                  "serialized_name": "DBSecurityGroup",
                  "members": {
                    "db_security_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DB Security Group. </p>",
                      "serialized_name": "DBSecurityGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "vpc_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of VPC security group elements that the DB Instance belongs to. </p>",
                "serialized_name": "VpcSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p>This data type is used as a response element for queries on VPC security group membership.</p>",
                  "serialized_name": "VpcSecurityGroupMembership",
                  "members": {
                    "vpc_security_group_id": {
                      "type": "string",
                      "documentation": "<p>The name of the VPC security group.</p>",
                      "serialized_name": "VpcSecurityGroupId"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the VPC Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "db_parameter_groups": {
                "type": "list",
                "documentation": "<p> Provides the list of DB Parameter Groups applied to this DB Instance. </p>",
                "serialized_name": "DBParameterGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> The status of the DB Parameter Group. </p> <p>This data type is used as a response element in the following actions:</p> <ul> <li>CreateDBInstance</li> <li>CreateDBInstanceReadReplica</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> </ul>",
                  "serialized_name": "DBParameterGroup",
                  "members": {
                    "db_parameter_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DP Parameter Group. </p>",
                      "serialized_name": "DBParameterGroupName"
                    },
                    "parameter_apply_status": {
                      "type": "string",
                      "documentation": "<p> The status of parameter updates. </p>",
                      "serialized_name": "ParameterApplyStatus"
                    }
                  }
                }
              },
              "availability_zone": {
                "type": "string",
                "documentation": "<p> Specifies the name of the Availability Zone the DB Instance is located in. </p>",
                "serialized_name": "AvailabilityZone"
              },
              "db_subnet_group": {
                "type": "structure",
                "documentation": "<p> Provides the inforamtion of the subnet group associated with the DB instance, including the name, descrption and subnets in the subnet group. </p>",
                "serialized_name": "DBSubnetGroup",
                "metadata": {
                  "wrapper": true
                },
                "members": {
                  "db_subnet_group_name": {
                    "type": "string",
                    "documentation": "<p> Specifies the name of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupName"
                  },
                  "db_subnet_group_description": {
                    "type": "string",
                    "documentation": "<p> Provides the description of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupDescription"
                  },
                  "vpc_id": {
                    "type": "string",
                    "documentation": "<p> Provides the VpcId of the DB Subnet Group. </p>",
                    "serialized_name": "VpcId"
                  },
                  "subnet_group_status": {
                    "type": "string",
                    "documentation": "<p> Provides the status of the DB Subnet Group. </p>",
                    "serialized_name": "SubnetGroupStatus"
                  },
                  "subnets": {
                    "type": "list",
                    "documentation": "<p> Contains a list of Subnet elements. </p>",
                    "serialized_name": "Subnets",
                    "members": {
                      "type": "structure",
                      "documentation": "<p> This data type is used as a response element in the DescribeDBSubnetGroups action. </p>",
                      "serialized_name": "Subnet",
                      "members": {
                        "subnet_identifier": {
                          "type": "string",
                          "documentation": "<p> Specifies the identifier of the subnet. </p>",
                          "serialized_name": "SubnetIdentifier"
                        },
                        "subnet_availability_zone": {
                          "type": "structure",
                          "documentation": "<p> Contains Availability Zone information. </p> <p> This data type is used as an element in the following data type: <ul> <li>OrderableDBInstanceOption</li> </ul> </p>",
                          "serialized_name": "SubnetAvailabilityZone",
                          "metadata": {
                            "wrapper": true
                          },
                          "members": {
                            "name": {
                              "type": "string",
                              "documentation": "<p> The name of the availability zone. </p>",
                              "serialized_name": "Name"
                            },
                            "provisioned_iops_capable": {
                              "type": "boolean",
                              "documentation": "<p> True indicates the availability zone is capable of provisioned IOPs. </p>",
                              "serialized_name": "ProvisionedIopsCapable"
                            }
                          }
                        },
                        "subnet_status": {
                          "type": "string",
                          "documentation": "<p> Specifies the status of the subnet. </p>",
                          "serialized_name": "SubnetStatus"
                        }
                      }
                    }
                  }
                }
              },
              "preferred_maintenance_window": {
                "type": "string",
                "documentation": "<p> Specifies the weekly time range (in UTC) during which system maintenance can occur. </p>",
                "serialized_name": "PreferredMaintenanceWindow"
              },
              "pending_modified_values": {
                "type": "structure",
                "documentation": "<p> Specifies that changes to the DB Instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements. </p>",
                "serialized_name": "PendingModifiedValues",
                "members": {
                  "db_instance_class": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceClass</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceClass"
                  },
                  "allocated_storage": {
                    "type": "integer",
                    "documentation": "<p> Contains the new <code>AllocatedStorage</code> size for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "AllocatedStorage"
                  },
                  "master_user_password": {
                    "type": "string",
                    "documentation": "<p> Contains the pending or in-progress change of the master credentials for the DB Instance. </p>",
                    "serialized_name": "MasterUserPassword"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending port for the DB Instance. </p>",
                    "serialized_name": "Port"
                  },
                  "backup_retention_period": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending number of days for which automated backups are retained. </p>",
                    "serialized_name": "BackupRetentionPeriod"
                  },
                  "multi_az": {
                    "type": "boolean",
                    "documentation": "<p> Indicates that the Single-AZ DB Instance is to change to a Multi-AZ deployment. </p>",
                    "serialized_name": "MultiAZ"
                  },
                  "engine_version": {
                    "type": "string",
                    "documentation": "<p> Indicates the database engine version. </p>",
                    "serialized_name": "EngineVersion"
                  },
                  "iops": {
                    "type": "integer",
                    "documentation": "<p> Specifies the new Provisioned IOPS value for the DB Instance that will be applied or is being applied. </p>",
                    "serialized_name": "Iops"
                  },
                  "db_instance_identifier": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceIdentifier</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceIdentifier"
                  }
                }
              },
              "latest_restorable_time": {
                "type": "timestamp",
                "documentation": "<p> Specifies the latest time to which a database can be restored with point-in-time restore. </p>",
                "serialized_name": "LatestRestorableTime"
              },
              "multi_az": {
                "type": "boolean",
                "documentation": "<p> Specifies if the DB Instance is a Multi-AZ deployment. </p>",
                "serialized_name": "MultiAZ"
              },
              "engine_version": {
                "type": "string",
                "documentation": "<p> Indicates the database engine version. </p>",
                "serialized_name": "EngineVersion"
              },
              "auto_minor_version_upgrade": {
                "type": "boolean",
                "documentation": "<p> Indicates that minor version patches are applied automatically. </p>",
                "serialized_name": "AutoMinorVersionUpgrade"
              },
              "read_replica_source_db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains the identifier of the source DB Instance if this DB Instance is a Read Replica. </p>",
                "serialized_name": "ReadReplicaSourceDBInstanceIdentifier"
              },
              "read_replica_db_instance_identifiers": {
                "type": "list",
                "documentation": "<p> Contains one or more identifiers of the Read Replicas associated with this DB Instance. </p>",
                "serialized_name": "ReadReplicaDBInstanceIdentifiers",
                "members": {
                  "type": "string",
                  "serialized_name": "ReadReplicaDBInstanceIdentifier"
                }
              },
              "license_model": {
                "type": "string",
                "documentation": "<p> License model information for this DB Instance. </p>",
                "serialized_name": "LicenseModel"
              },
              "iops": {
                "type": "integer",
                "documentation": "<p> Specifies the Provisioned IOPS (I/O operations per second) value. </p>",
                "serialized_name": "Iops"
              },
              "option_group_memberships": {
                "type": "list",
                "documentation": "<p> Provides the list of option group memberships for this DB Instance. </p>",
                "serialized_name": "OptionGroupMemberships",
                "members": {
                  "type": "structure",
                  "documentation": "<p> Provides information on the option groups the DB instance is a member of. </p>",
                  "serialized_name": "OptionGroupMembership",
                  "members": {
                    "option_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the option group that the instance belongs to. </p>",
                      "serialized_name": "OptionGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Instance's option group membership (e.g. in-sync, pending, pending-maintenance, applying). </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "character_set_name": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the character set that this instance is associated with. </p>",
                "serialized_name": "CharacterSetName"
              },
              "secondary_availability_zone": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support. </p>",
                "serialized_name": "SecondaryAvailabilityZone"
              },
              "publicly_accessible": {
                "type": "boolean",
                "documentation": "<p> Specifies the accessibility options for the DB Instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p> <p> Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case. </p> <ul> <li> <b>Default VPC:</b>true</li> <li> <b>VPC:</b>false</li> </ul> <p> If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private. </p>",
                "serialized_name": "PubliclyAccessible"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> The specified DB Instance is not in the <i>available</i> state. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBInstanceIdentifier</i> does not refer to an existing DB Instance. </p>",
          "members": {
          }
        }
      ]
    },
    "remove_source_identifier_from_subscription": {
      "name": "RemoveSourceIdentifierFromSubscription",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Removes a source identifier from an existing RDS event notification subscription.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p></p>",
        "members": {
          "subscription_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The name of the RDS event notification subscription you want to remove a source identifier from.</p>",
            "serialized_name": "SubscriptionName"
          },
          "source_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The source identifier to be removed from the subscription, such as the <b>DB instance identifier</b> for a DB instance or the name of a security group. </p>",
            "serialized_name": "SourceIdentifier"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "event_subscription": {
            "type": "structure",
            "documentation": "<p>Contains the results of a successful invocation of the DescribeEventSubscriptions action.</p>",
            "serialized_name": "EventSubscription",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "customer_aws_id": {
                "type": "string",
                "documentation": "<p>The AWS customer account associated with the RDS event notification subscription.</p>",
                "serialized_name": "CustomerAwsId"
              },
              "cust_subscription_id": {
                "type": "string",
                "documentation": "<p>The RDS event notification subscription Id.</p>",
                "serialized_name": "CustSubscriptionId"
              },
              "sns_topic_arn": {
                "type": "string",
                "documentation": "<p>The topic ARN of the RDS event notification subscription.</p>",
                "serialized_name": "SnsTopicArn"
              },
              "status": {
                "type": "string",
                "documentation": "<p>The status of the RDS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that RDS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                "serialized_name": "Status"
              },
              "subscription_creation_time": {
                "type": "string",
                "documentation": "<p>The time the RDS event notification subscription was created.</p>",
                "serialized_name": "SubscriptionCreationTime"
              },
              "source_type": {
                "type": "string",
                "documentation": "<p>The source type for the RDS event notification subscription.</p>",
                "serialized_name": "SourceType"
              },
              "source_ids_list": {
                "type": "list",
                "documentation": "<p>A list of source Ids for the RDS event notification subscription.</p>",
                "serialized_name": "SourceIdsList",
                "members": {
                  "type": "string",
                  "serialized_name": "SourceId"
                }
              },
              "event_categories_list": {
                "type": "list",
                "documentation": "<p>A list of event categories for the RDS event notification subscription.</p>",
                "serialized_name": "EventCategoriesList",
                "members": {
                  "type": "string",
                  "serialized_name": "EventCategory"
                }
              },
              "enabled": {
                "type": "boolean",
                "documentation": "<p>A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.</p>",
                "serialized_name": "Enabled"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>The subscription name does not exist.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>The requested source could not be found.</p>",
          "members": {
          }
        }
      ]
    },
    "remove_tags_from_resource": {
      "name": "RemoveTagsFromResource",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Removes metadata tags from a DB Instance.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p></p>",
        "members": {
          "resource_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The DB Instance the tags will be removed from. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html#USER_Tagging.ARN\"> Constructing an RDS Amazon Resource Name (ARN)</a>.</p>",
            "serialized_name": "ResourceName"
          },
          "tag_keys": {
            "type": "list",
            "required": true,
            "documentation": "<p>The tag key (name) of the tag to be removed.</p>",
            "serialized_name": "TagKeys",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBInstanceIdentifier</i> does not refer to an existing DB Instance. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSnapshotIdentifier</i> does not refer to an existing DB Snapshot. </p>",
          "members": {
          }
        }
      ]
    },
    "reset_db_parameter_group": {
      "name": "ResetDBParameterGroup",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Modifies the parameters of a DBParameterGroup to the engine/system default value. To reset specific parameters submit a list of the following: ParameterName and ApplyMethod. To reset the entire DBParameterGroup specify the DBParameterGroup name and ResetAllParameters parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to pending-reboot to take effect on the next DB instance restart or RebootDBInstance request. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_parameter_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the DB Parameter Group. </p> <p>Constraints:</p> <ul> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBParameterGroupName"
          },
          "reset_all_parameters": {
            "type": "boolean",
            "documentation": "<p> Specifies whether (<code>true</code>) or not (<code>false</code>) to reset all parameters in the DB Parameter Group to default values. </p> <p>Default: <code>true</code></p>",
            "serialized_name": "ResetAllParameters"
          },
          "parameters": {
            "type": "list",
            "documentation": "<p> An array of parameter names, values, and the apply method for the parameter update. At least one parameter name, value, and apply method must be supplied; subsequent arguments are optional. A maximum of 20 parameters may be modified in a single request. </p> <p><b>MySQL</b></p> <p>Valid Values (for Apply method): <code>immediate</code> | <code>pending-reboot</code></p> <p>You can use the immediate value with dynamic parameters only. You can use the <code>pending-reboot</code> value for both dynamic and static parameters, and changes are applied when DB Instance reboots.</p> <p><b>Oracle</b></p> <p>Valid Values (for Apply method): <code>pending-reboot</code></p>",
            "serialized_name": "Parameters",
            "members": {
              "type": "structure",
              "documentation": "<p> This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions. </p> <p>This data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions.</p>",
              "serialized_name": "Parameter",
              "members": {
                "parameter_name": {
                  "type": "string",
                  "documentation": "<p> Specifies the name of the parameter. </p>",
                  "serialized_name": "ParameterName"
                },
                "parameter_value": {
                  "type": "string",
                  "documentation": "<p> Specifies the value of the parameter. </p>",
                  "serialized_name": "ParameterValue"
                },
                "description": {
                  "type": "string",
                  "documentation": "<p> Provides a description of the parameter. </p>",
                  "serialized_name": "Description"
                },
                "source": {
                  "type": "string",
                  "documentation": "<p> Indicates the source of the parameter value. </p>",
                  "serialized_name": "Source"
                },
                "apply_type": {
                  "type": "string",
                  "documentation": "<p> Specifies the engine specific parameters type. </p>",
                  "serialized_name": "ApplyType"
                },
                "data_type": {
                  "type": "string",
                  "documentation": "<p> Specifies the valid data type for the parameter. </p>",
                  "serialized_name": "DataType"
                },
                "allowed_values": {
                  "type": "string",
                  "documentation": "<p> Specifies the valid range of values for the parameter. </p>",
                  "serialized_name": "AllowedValues"
                },
                "is_modifiable": {
                  "type": "boolean",
                  "documentation": "<p> Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. </p>",
                  "serialized_name": "IsModifiable"
                },
                "minimum_engine_version": {
                  "type": "string",
                  "documentation": "<p> The earliest engine version to which the parameter can apply. </p>",
                  "serialized_name": "MinimumEngineVersion"
                },
                "apply_method": {
                  "type": "string",
                  "documentation": "<p> Indicates when to apply parameter updates. </p>",
                  "serialized_name": "ApplyMethod",
                  "enum": [
                    "immediate",
                    "pending-reboot"
                  ]
                }
              }
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p> Contains the result of a successful invocation of the ModifyDBParameterGroup or ResetDBParameterGroup action. </p>",
        "members": {
          "db_parameter_group_name": {
            "type": "string",
            "documentation": "<p> The name of the DB Parameter Group. </p>",
            "serialized_name": "DBParameterGroupName"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> The DB Parameter Group cannot be deleted because it is in use. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBParameterGroupName</i> does not refer to an existing DB Parameter Group. </p>",
          "members": {
          }
        }
      ]
    },
    "restore_db_instance_from_db_snapshot": {
      "name": "RestoreDBInstanceFromDBSnapshot",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Creates a new DB Instance from a DB snapshot. The target database is created from the source database restore point with the same configuration as the original source database, except that the new RDS instance is created with the default security group. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_instance_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The identifier for the DB Snapshot to restore from. </p> <p>Constraints:</p> <ul> <li>Must contain from 1 to 63 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "DBInstanceIdentifier"
          },
          "db_snapshot_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> Name of the DB Instance to create from the DB Snapshot. This parameter isn't case sensitive. </p> <p>Constraints:</p> <ul> <li>Must contain from 1 to 255 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul> <p>Example: <code>my-snapshot-id</code></p>",
            "serialized_name": "DBSnapshotIdentifier"
          },
          "db_instance_class": {
            "type": "string",
            "documentation": "<p> The compute and memory capacity of the Amazon RDS DB instance. </p> <p>Valid Values: <code>db.t1.micro | db.m1.small | db.m1.medium | db.m1.large | db.m1.xlarge | db.m2.2xlarge | db.m2.4xlarge</code></p>",
            "serialized_name": "DBInstanceClass"
          },
          "port": {
            "type": "integer",
            "documentation": "<p> The port number on which the database accepts connections. </p> <p>Default: The same port as the original DB Instance</p> <p>Constraints: Value must be <code>1150-65535</code></p>",
            "serialized_name": "Port"
          },
          "availability_zone": {
            "type": "string",
            "documentation": "<p> The EC2 Availability Zone that the database instance will be created in. </p> <p>Default: A random, system-chosen Availability Zone.</p> <p>Constraint: You cannot specify the AvailabilityZone parameter if the MultiAZ parameter is set to <code>true</code>.</p> <p>Example: <code>us-east-1a</code></p>",
            "serialized_name": "AvailabilityZone"
          },
          "db_subnet_group_name": {
            "type": "string",
            "documentation": "<p> The DB Subnet Group name to use for the new instance. </p>",
            "serialized_name": "DBSubnetGroupName"
          },
          "multi_az": {
            "type": "boolean",
            "documentation": "<p> Specifies if the DB Instance is a Multi-AZ deployment. </p> <p>Constraint: You cannot specify the AvailabilityZone parameter if the MultiAZ parameter is set to <code>true</code>.</p>",
            "serialized_name": "MultiAZ"
          },
          "publicly_accessible": {
            "type": "boolean",
            "documentation": "<p> Specifies the accessibility options for the DB Instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p> <p> Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case. </p> <ul> <li> <b>Default VPC:</b>true</li> <li> <b>VPC:</b>false</li> </ul> <p> If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private. </p>",
            "serialized_name": "PubliclyAccessible"
          },
          "auto_minor_version_upgrade": {
            "type": "boolean",
            "documentation": "<p> Indicates that minor version upgrades will be applied automatically to the DB Instance during the maintenance window. </p>",
            "serialized_name": "AutoMinorVersionUpgrade"
          },
          "license_model": {
            "type": "string",
            "documentation": "<p> License model information for the restored DB Instance. </p> <p> Default: Same as source. </p> <p> Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
            "serialized_name": "LicenseModel"
          },
          "db_name": {
            "type": "string",
            "documentation": "<p> The database name for the restored DB Instance. </p> <p>This parameter doesn't apply to the MySQL engine.</p>",
            "serialized_name": "DBName"
          },
          "engine": {
            "type": "string",
            "documentation": "<p> The database engine to use for the new instance. </p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source</p> <p>Example: <code>oracle-ee</code></p>",
            "serialized_name": "Engine"
          },
          "iops": {
            "type": "integer",
            "documentation": "<p> Specifies the amount of provisioned IOPS for the DB Instance, expressed in I/O operations per second. If this parameter is not specified, the IOPS value will be taken from the backup. If this parameter is set to 0, the new instance will be converted to a non-PIOPS instance, which will take additional time, though your DB instance will be available for connections before the conversion starts. </p> <p> Constraints: Must be an integer greater than 1000.</p>",
            "serialized_name": "Iops"
          },
          "option_group_name": {
            "type": "string",
            "documentation": "<p> The name of the option group to be used for the restored DB instance.</p> <p> Permanent options, such as the TDE option for Oracle Advanced Security TDE, cannot be removed from an option group, and that option group cannot be removed from a DB instance once it is associated with a DB instance </p>",
            "serialized_name": "OptionGroupName"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_instance": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBInstance</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> </ul> <p>This data type is used as a response element in the DescribeDBInstances action.</p>",
            "serialized_name": "DBInstance",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains a user-supplied database identifier. This is the unique key that identifies a DB Instance. </p>",
                "serialized_name": "DBInstanceIdentifier"
              },
              "db_instance_class": {
                "type": "string",
                "documentation": "<p> Contains the name of the compute and memory capacity class of the DB Instance. </p>",
                "serialized_name": "DBInstanceClass"
              },
              "engine": {
                "type": "string",
                "documentation": "<p> Provides the name of the database engine to be used for this DB Instance. </p>",
                "serialized_name": "Engine"
              },
              "db_instance_status": {
                "type": "string",
                "documentation": "<p> Specifies the current state of this database. </p>",
                "serialized_name": "DBInstanceStatus"
              },
              "master_username": {
                "type": "string",
                "documentation": "<p> Contains the master username for the DB Instance. </p>",
                "serialized_name": "MasterUsername"
              },
              "db_name": {
                "type": "string",
                "documentation": "<p>The meaning of this parameter differs according to the database engine you use.</p> <p><b>MySQL</b></p> <p> Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB Instance was created. This same name is returned for the life of the DB Instance. </p> <p>Type: String</p> <p><b>Oracle</b></p> <p> Contains the Oracle System ID (SID) of the created DB Instance. </p>",
                "serialized_name": "DBName"
              },
              "endpoint": {
                "type": "structure",
                "documentation": "<p> Specifies the connection endpoint. </p>",
                "serialized_name": "Endpoint",
                "members": {
                  "address": {
                    "type": "string",
                    "documentation": "<p> Specifies the DNS address of the DB Instance. </p>",
                    "serialized_name": "Address"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the port that the database engine is listening on. </p>",
                    "serialized_name": "Port"
                  }
                }
              },
              "allocated_storage": {
                "type": "integer",
                "documentation": "<p> Specifies the allocated storage size specified in gigabytes. </p>",
                "serialized_name": "AllocatedStorage"
              },
              "instance_create_time": {
                "type": "timestamp",
                "documentation": "<p> Provides the date and time the DB Instance was created. </p>",
                "serialized_name": "InstanceCreateTime"
              },
              "preferred_backup_window": {
                "type": "string",
                "documentation": "<p> Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. </p>",
                "serialized_name": "PreferredBackupWindow"
              },
              "backup_retention_period": {
                "type": "integer",
                "documentation": "<p> Specifies the number of days for which automatic DB Snapshots are retained. </p>",
                "serialized_name": "BackupRetentionPeriod"
              },
              "db_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of DB Security Group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. </p>",
                "serialized_name": "DBSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> <li>RestoreDBInstanceToPointInTime</li> </ul>",
                  "serialized_name": "DBSecurityGroup",
                  "members": {
                    "db_security_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DB Security Group. </p>",
                      "serialized_name": "DBSecurityGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "vpc_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of VPC security group elements that the DB Instance belongs to. </p>",
                "serialized_name": "VpcSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p>This data type is used as a response element for queries on VPC security group membership.</p>",
                  "serialized_name": "VpcSecurityGroupMembership",
                  "members": {
                    "vpc_security_group_id": {
                      "type": "string",
                      "documentation": "<p>The name of the VPC security group.</p>",
                      "serialized_name": "VpcSecurityGroupId"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the VPC Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "db_parameter_groups": {
                "type": "list",
                "documentation": "<p> Provides the list of DB Parameter Groups applied to this DB Instance. </p>",
                "serialized_name": "DBParameterGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> The status of the DB Parameter Group. </p> <p>This data type is used as a response element in the following actions:</p> <ul> <li>CreateDBInstance</li> <li>CreateDBInstanceReadReplica</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> </ul>",
                  "serialized_name": "DBParameterGroup",
                  "members": {
                    "db_parameter_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DP Parameter Group. </p>",
                      "serialized_name": "DBParameterGroupName"
                    },
                    "parameter_apply_status": {
                      "type": "string",
                      "documentation": "<p> The status of parameter updates. </p>",
                      "serialized_name": "ParameterApplyStatus"
                    }
                  }
                }
              },
              "availability_zone": {
                "type": "string",
                "documentation": "<p> Specifies the name of the Availability Zone the DB Instance is located in. </p>",
                "serialized_name": "AvailabilityZone"
              },
              "db_subnet_group": {
                "type": "structure",
                "documentation": "<p> Provides the inforamtion of the subnet group associated with the DB instance, including the name, descrption and subnets in the subnet group. </p>",
                "serialized_name": "DBSubnetGroup",
                "metadata": {
                  "wrapper": true
                },
                "members": {
                  "db_subnet_group_name": {
                    "type": "string",
                    "documentation": "<p> Specifies the name of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupName"
                  },
                  "db_subnet_group_description": {
                    "type": "string",
                    "documentation": "<p> Provides the description of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupDescription"
                  },
                  "vpc_id": {
                    "type": "string",
                    "documentation": "<p> Provides the VpcId of the DB Subnet Group. </p>",
                    "serialized_name": "VpcId"
                  },
                  "subnet_group_status": {
                    "type": "string",
                    "documentation": "<p> Provides the status of the DB Subnet Group. </p>",
                    "serialized_name": "SubnetGroupStatus"
                  },
                  "subnets": {
                    "type": "list",
                    "documentation": "<p> Contains a list of Subnet elements. </p>",
                    "serialized_name": "Subnets",
                    "members": {
                      "type": "structure",
                      "documentation": "<p> This data type is used as a response element in the DescribeDBSubnetGroups action. </p>",
                      "serialized_name": "Subnet",
                      "members": {
                        "subnet_identifier": {
                          "type": "string",
                          "documentation": "<p> Specifies the identifier of the subnet. </p>",
                          "serialized_name": "SubnetIdentifier"
                        },
                        "subnet_availability_zone": {
                          "type": "structure",
                          "documentation": "<p> Contains Availability Zone information. </p> <p> This data type is used as an element in the following data type: <ul> <li>OrderableDBInstanceOption</li> </ul> </p>",
                          "serialized_name": "SubnetAvailabilityZone",
                          "metadata": {
                            "wrapper": true
                          },
                          "members": {
                            "name": {
                              "type": "string",
                              "documentation": "<p> The name of the availability zone. </p>",
                              "serialized_name": "Name"
                            },
                            "provisioned_iops_capable": {
                              "type": "boolean",
                              "documentation": "<p> True indicates the availability zone is capable of provisioned IOPs. </p>",
                              "serialized_name": "ProvisionedIopsCapable"
                            }
                          }
                        },
                        "subnet_status": {
                          "type": "string",
                          "documentation": "<p> Specifies the status of the subnet. </p>",
                          "serialized_name": "SubnetStatus"
                        }
                      }
                    }
                  }
                }
              },
              "preferred_maintenance_window": {
                "type": "string",
                "documentation": "<p> Specifies the weekly time range (in UTC) during which system maintenance can occur. </p>",
                "serialized_name": "PreferredMaintenanceWindow"
              },
              "pending_modified_values": {
                "type": "structure",
                "documentation": "<p> Specifies that changes to the DB Instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements. </p>",
                "serialized_name": "PendingModifiedValues",
                "members": {
                  "db_instance_class": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceClass</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceClass"
                  },
                  "allocated_storage": {
                    "type": "integer",
                    "documentation": "<p> Contains the new <code>AllocatedStorage</code> size for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "AllocatedStorage"
                  },
                  "master_user_password": {
                    "type": "string",
                    "documentation": "<p> Contains the pending or in-progress change of the master credentials for the DB Instance. </p>",
                    "serialized_name": "MasterUserPassword"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending port for the DB Instance. </p>",
                    "serialized_name": "Port"
                  },
                  "backup_retention_period": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending number of days for which automated backups are retained. </p>",
                    "serialized_name": "BackupRetentionPeriod"
                  },
                  "multi_az": {
                    "type": "boolean",
                    "documentation": "<p> Indicates that the Single-AZ DB Instance is to change to a Multi-AZ deployment. </p>",
                    "serialized_name": "MultiAZ"
                  },
                  "engine_version": {
                    "type": "string",
                    "documentation": "<p> Indicates the database engine version. </p>",
                    "serialized_name": "EngineVersion"
                  },
                  "iops": {
                    "type": "integer",
                    "documentation": "<p> Specifies the new Provisioned IOPS value for the DB Instance that will be applied or is being applied. </p>",
                    "serialized_name": "Iops"
                  },
                  "db_instance_identifier": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceIdentifier</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceIdentifier"
                  }
                }
              },
              "latest_restorable_time": {
                "type": "timestamp",
                "documentation": "<p> Specifies the latest time to which a database can be restored with point-in-time restore. </p>",
                "serialized_name": "LatestRestorableTime"
              },
              "multi_az": {
                "type": "boolean",
                "documentation": "<p> Specifies if the DB Instance is a Multi-AZ deployment. </p>",
                "serialized_name": "MultiAZ"
              },
              "engine_version": {
                "type": "string",
                "documentation": "<p> Indicates the database engine version. </p>",
                "serialized_name": "EngineVersion"
              },
              "auto_minor_version_upgrade": {
                "type": "boolean",
                "documentation": "<p> Indicates that minor version patches are applied automatically. </p>",
                "serialized_name": "AutoMinorVersionUpgrade"
              },
              "read_replica_source_db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains the identifier of the source DB Instance if this DB Instance is a Read Replica. </p>",
                "serialized_name": "ReadReplicaSourceDBInstanceIdentifier"
              },
              "read_replica_db_instance_identifiers": {
                "type": "list",
                "documentation": "<p> Contains one or more identifiers of the Read Replicas associated with this DB Instance. </p>",
                "serialized_name": "ReadReplicaDBInstanceIdentifiers",
                "members": {
                  "type": "string",
                  "serialized_name": "ReadReplicaDBInstanceIdentifier"
                }
              },
              "license_model": {
                "type": "string",
                "documentation": "<p> License model information for this DB Instance. </p>",
                "serialized_name": "LicenseModel"
              },
              "iops": {
                "type": "integer",
                "documentation": "<p> Specifies the Provisioned IOPS (I/O operations per second) value. </p>",
                "serialized_name": "Iops"
              },
              "option_group_memberships": {
                "type": "list",
                "documentation": "<p> Provides the list of option group memberships for this DB Instance. </p>",
                "serialized_name": "OptionGroupMemberships",
                "members": {
                  "type": "structure",
                  "documentation": "<p> Provides information on the option groups the DB instance is a member of. </p>",
                  "serialized_name": "OptionGroupMembership",
                  "members": {
                    "option_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the option group that the instance belongs to. </p>",
                      "serialized_name": "OptionGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Instance's option group membership (e.g. in-sync, pending, pending-maintenance, applying). </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "character_set_name": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the character set that this instance is associated with. </p>",
                "serialized_name": "CharacterSetName"
              },
              "secondary_availability_zone": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support. </p>",
                "serialized_name": "SecondaryAvailabilityZone"
              },
              "publicly_accessible": {
                "type": "boolean",
                "documentation": "<p> Specifies the accessibility options for the DB Instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p> <p> Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case. </p> <ul> <li> <b>Default VPC:</b>true</li> <li> <b>VPC:</b>false</li> </ul> <p> If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private. </p>",
                "serialized_name": "PubliclyAccessible"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> User already has a DB Instance with the given identifier. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSnapshotIdentifier</i> does not refer to an existing DB Snapshot. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed number of DB Instances. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Specified DB Instance class is not available in the specified Availability Zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The state of the DB Security Snapshot does not allow deletion. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed amount of storage available across all DB Instances. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> DB Subnet Group does not cover all availability zones after it is created because users' change. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Cannot restore from vpc backup to non-vpc DB instance. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSubnetGroupName</i> does not refer to an existing DB Subnet Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Subnets in the DB subnet group should cover at least 2 availability zones unless there's'only 1 available zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request subnet is valid, or all subnets are not in common Vpc. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Provisioned IOPS not available in the specified Availability Zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The specified option group could not be found. </p>",
          "members": {
          }
        }
      ]
    },
    "restore_db_instance_to_point_in_time": {
      "name": "RestoreDBInstanceToPointInTime",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Restores a DB Instance to an arbitrary point-in-time. Users can restore to any point in time before the latestRestorableTime for up to backupRetentionPeriod days. The target database is created from the source database with the same configuration as the original database except that the DB instance is created with the default DB security group. </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "source_db_instance_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The identifier of the source DB Instance from which to restore. </p> <p>Constraints:</p> <ul> <li>Must be the identifier of an existing database instance</li> <li>Must contain from 1 to 63 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "SourceDBInstanceIdentifier"
          },
          "target_db_instance_identifier": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the new database instance to be created. </p> <p>Constraints:</p> <ul> <li>Must contain from 1 to 63 alphanumeric characters or hyphens</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>",
            "serialized_name": "TargetDBInstanceIdentifier"
          },
          "restore_time": {
            "type": "timestamp",
            "documentation": "<p> The date and time to restore from. </p> <p>Valid Values: Value must be a UTC time</p> <p>Constraints:</p> <ul> <li>Must be before the latest restorable time for the DB Instance</li> <li>Cannot be specified if UseLatestRestorableTime parameter is true</li> </ul> <p>Example: <code>2009-09-07T23:45:00Z</code></p>",
            "serialized_name": "RestoreTime"
          },
          "use_latest_restorable_time": {
            "type": "boolean",
            "documentation": "<p> Specifies whether (<code>true</code>) or not (<code>false</code>) the DB Instance is restored from the latest backup time. </p> <p>Default: <code>false</code></p> <p>Constraints: Cannot be specified if RestoreTime parameter is provided.</p>",
            "serialized_name": "UseLatestRestorableTime"
          },
          "db_instance_class": {
            "type": "string",
            "documentation": "<p> The compute and memory capacity of the Amazon RDS DB instance. </p> <p>Valid Values: <code>db.t1.micro | db.m1.small | db.m1.medium | db.m1.large | db.m1.xlarge | db.m2.2xlarge | db.m2.4xlarge</code></p> <p>Default: The same DBInstanceClass as the original DB Instance.</p>",
            "serialized_name": "DBInstanceClass"
          },
          "port": {
            "type": "integer",
            "documentation": "<p> The port number on which the database accepts connections. </p> <p>Constraints: Value must be <code>1150-65535</code></p> <p>Default: The same port as the original DB Instance.</p>",
            "serialized_name": "Port"
          },
          "availability_zone": {
            "type": "string",
            "documentation": "<p> The EC2 Availability Zone that the database instance will be created in. </p> <p>Default: A random, system-chosen Availability Zone.</p> <p>Constraint: You cannot specify the AvailabilityZone parameter if the MultiAZ parameter is set to true.</p> <p>Example: <code>us-east-1a</code></p>",
            "serialized_name": "AvailabilityZone"
          },
          "db_subnet_group_name": {
            "type": "string",
            "documentation": "<p> The DB subnet group name to use for the new instance. </p>",
            "serialized_name": "DBSubnetGroupName"
          },
          "multi_az": {
            "type": "boolean",
            "documentation": "<p> Specifies if the DB Instance is a Multi-AZ deployment. </p> <p>Constraint: You cannot specify the AvailabilityZone parameter if the MultiAZ parameter is set to <code>true</code>.</p>",
            "serialized_name": "MultiAZ"
          },
          "publicly_accessible": {
            "type": "boolean",
            "documentation": "<p> Specifies the accessibility options for the DB Instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p> <p> Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case. </p> <ul> <li> <b>Default VPC:</b>true</li> <li> <b>VPC:</b>false</li> </ul> <p> If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private. </p>",
            "serialized_name": "PubliclyAccessible"
          },
          "auto_minor_version_upgrade": {
            "type": "boolean",
            "documentation": "<p> Indicates that minor version upgrades will be applied automatically to the DB Instance during the maintenance window. </p>",
            "serialized_name": "AutoMinorVersionUpgrade"
          },
          "license_model": {
            "type": "string",
            "documentation": "<p> License model information for the restored DB Instance. </p> <p> Default: Same as source. </p> <p> Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
            "serialized_name": "LicenseModel"
          },
          "db_name": {
            "type": "string",
            "documentation": "<p> The database name for the restored DB Instance. </p> <p>This parameter is not used for the MySQL engine.</p>",
            "serialized_name": "DBName"
          },
          "engine": {
            "type": "string",
            "documentation": "<p> The database engine to use for the new instance. </p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source</p> <p>Example: <code>oracle-ee</code></p>",
            "serialized_name": "Engine"
          },
          "iops": {
            "type": "integer",
            "documentation": "<p> The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB Instance. </p> <p> Constraints: Must be an integer greater than 1000.</p>",
            "serialized_name": "Iops"
          },
          "option_group_name": {
            "type": "string",
            "documentation": "<p> The name of the option group to be used for the restored DB instance.</p> <p> Permanent options, such as the TDE option for Oracle Advanced Security TDE, cannot be removed from an option group, and that option group cannot be removed from a DB instance once it is associated with a DB instance </p>",
            "serialized_name": "OptionGroupName"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_instance": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>CreateDBInstance</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> </ul> <p>This data type is used as a response element in the DescribeDBInstances action.</p>",
            "serialized_name": "DBInstance",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains a user-supplied database identifier. This is the unique key that identifies a DB Instance. </p>",
                "serialized_name": "DBInstanceIdentifier"
              },
              "db_instance_class": {
                "type": "string",
                "documentation": "<p> Contains the name of the compute and memory capacity class of the DB Instance. </p>",
                "serialized_name": "DBInstanceClass"
              },
              "engine": {
                "type": "string",
                "documentation": "<p> Provides the name of the database engine to be used for this DB Instance. </p>",
                "serialized_name": "Engine"
              },
              "db_instance_status": {
                "type": "string",
                "documentation": "<p> Specifies the current state of this database. </p>",
                "serialized_name": "DBInstanceStatus"
              },
              "master_username": {
                "type": "string",
                "documentation": "<p> Contains the master username for the DB Instance. </p>",
                "serialized_name": "MasterUsername"
              },
              "db_name": {
                "type": "string",
                "documentation": "<p>The meaning of this parameter differs according to the database engine you use.</p> <p><b>MySQL</b></p> <p> Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB Instance was created. This same name is returned for the life of the DB Instance. </p> <p>Type: String</p> <p><b>Oracle</b></p> <p> Contains the Oracle System ID (SID) of the created DB Instance. </p>",
                "serialized_name": "DBName"
              },
              "endpoint": {
                "type": "structure",
                "documentation": "<p> Specifies the connection endpoint. </p>",
                "serialized_name": "Endpoint",
                "members": {
                  "address": {
                    "type": "string",
                    "documentation": "<p> Specifies the DNS address of the DB Instance. </p>",
                    "serialized_name": "Address"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the port that the database engine is listening on. </p>",
                    "serialized_name": "Port"
                  }
                }
              },
              "allocated_storage": {
                "type": "integer",
                "documentation": "<p> Specifies the allocated storage size specified in gigabytes. </p>",
                "serialized_name": "AllocatedStorage"
              },
              "instance_create_time": {
                "type": "timestamp",
                "documentation": "<p> Provides the date and time the DB Instance was created. </p>",
                "serialized_name": "InstanceCreateTime"
              },
              "preferred_backup_window": {
                "type": "string",
                "documentation": "<p> Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. </p>",
                "serialized_name": "PreferredBackupWindow"
              },
              "backup_retention_period": {
                "type": "integer",
                "documentation": "<p> Specifies the number of days for which automatic DB Snapshots are retained. </p>",
                "serialized_name": "BackupRetentionPeriod"
              },
              "db_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of DB Security Group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. </p>",
                "serialized_name": "DBSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> <li>RestoreDBInstanceToPointInTime</li> </ul>",
                  "serialized_name": "DBSecurityGroup",
                  "members": {
                    "db_security_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DB Security Group. </p>",
                      "serialized_name": "DBSecurityGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "vpc_security_groups": {
                "type": "list",
                "documentation": "<p> Provides List of VPC security group elements that the DB Instance belongs to. </p>",
                "serialized_name": "VpcSecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p>This data type is used as a response element for queries on VPC security group membership.</p>",
                  "serialized_name": "VpcSecurityGroupMembership",
                  "members": {
                    "vpc_security_group_id": {
                      "type": "string",
                      "documentation": "<p>The name of the VPC security group.</p>",
                      "serialized_name": "VpcSecurityGroupId"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the VPC Security Group. </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "db_parameter_groups": {
                "type": "list",
                "documentation": "<p> Provides the list of DB Parameter Groups applied to this DB Instance. </p>",
                "serialized_name": "DBParameterGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> The status of the DB Parameter Group. </p> <p>This data type is used as a response element in the following actions:</p> <ul> <li>CreateDBInstance</li> <li>CreateDBInstanceReadReplica</li> <li>DeleteDBInstance</li> <li>ModifyDBInstance</li> <li>RebootDBInstance</li> <li>RestoreDBInstanceFromDBSnapshot</li> </ul>",
                  "serialized_name": "DBParameterGroup",
                  "members": {
                    "db_parameter_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the DP Parameter Group. </p>",
                      "serialized_name": "DBParameterGroupName"
                    },
                    "parameter_apply_status": {
                      "type": "string",
                      "documentation": "<p> The status of parameter updates. </p>",
                      "serialized_name": "ParameterApplyStatus"
                    }
                  }
                }
              },
              "availability_zone": {
                "type": "string",
                "documentation": "<p> Specifies the name of the Availability Zone the DB Instance is located in. </p>",
                "serialized_name": "AvailabilityZone"
              },
              "db_subnet_group": {
                "type": "structure",
                "documentation": "<p> Provides the inforamtion of the subnet group associated with the DB instance, including the name, descrption and subnets in the subnet group. </p>",
                "serialized_name": "DBSubnetGroup",
                "metadata": {
                  "wrapper": true
                },
                "members": {
                  "db_subnet_group_name": {
                    "type": "string",
                    "documentation": "<p> Specifies the name of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupName"
                  },
                  "db_subnet_group_description": {
                    "type": "string",
                    "documentation": "<p> Provides the description of the DB Subnet Group. </p>",
                    "serialized_name": "DBSubnetGroupDescription"
                  },
                  "vpc_id": {
                    "type": "string",
                    "documentation": "<p> Provides the VpcId of the DB Subnet Group. </p>",
                    "serialized_name": "VpcId"
                  },
                  "subnet_group_status": {
                    "type": "string",
                    "documentation": "<p> Provides the status of the DB Subnet Group. </p>",
                    "serialized_name": "SubnetGroupStatus"
                  },
                  "subnets": {
                    "type": "list",
                    "documentation": "<p> Contains a list of Subnet elements. </p>",
                    "serialized_name": "Subnets",
                    "members": {
                      "type": "structure",
                      "documentation": "<p> This data type is used as a response element in the DescribeDBSubnetGroups action. </p>",
                      "serialized_name": "Subnet",
                      "members": {
                        "subnet_identifier": {
                          "type": "string",
                          "documentation": "<p> Specifies the identifier of the subnet. </p>",
                          "serialized_name": "SubnetIdentifier"
                        },
                        "subnet_availability_zone": {
                          "type": "structure",
                          "documentation": "<p> Contains Availability Zone information. </p> <p> This data type is used as an element in the following data type: <ul> <li>OrderableDBInstanceOption</li> </ul> </p>",
                          "serialized_name": "SubnetAvailabilityZone",
                          "metadata": {
                            "wrapper": true
                          },
                          "members": {
                            "name": {
                              "type": "string",
                              "documentation": "<p> The name of the availability zone. </p>",
                              "serialized_name": "Name"
                            },
                            "provisioned_iops_capable": {
                              "type": "boolean",
                              "documentation": "<p> True indicates the availability zone is capable of provisioned IOPs. </p>",
                              "serialized_name": "ProvisionedIopsCapable"
                            }
                          }
                        },
                        "subnet_status": {
                          "type": "string",
                          "documentation": "<p> Specifies the status of the subnet. </p>",
                          "serialized_name": "SubnetStatus"
                        }
                      }
                    }
                  }
                }
              },
              "preferred_maintenance_window": {
                "type": "string",
                "documentation": "<p> Specifies the weekly time range (in UTC) during which system maintenance can occur. </p>",
                "serialized_name": "PreferredMaintenanceWindow"
              },
              "pending_modified_values": {
                "type": "structure",
                "documentation": "<p> Specifies that changes to the DB Instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements. </p>",
                "serialized_name": "PendingModifiedValues",
                "members": {
                  "db_instance_class": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceClass</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceClass"
                  },
                  "allocated_storage": {
                    "type": "integer",
                    "documentation": "<p> Contains the new <code>AllocatedStorage</code> size for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "AllocatedStorage"
                  },
                  "master_user_password": {
                    "type": "string",
                    "documentation": "<p> Contains the pending or in-progress change of the master credentials for the DB Instance. </p>",
                    "serialized_name": "MasterUserPassword"
                  },
                  "port": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending port for the DB Instance. </p>",
                    "serialized_name": "Port"
                  },
                  "backup_retention_period": {
                    "type": "integer",
                    "documentation": "<p> Specifies the pending number of days for which automated backups are retained. </p>",
                    "serialized_name": "BackupRetentionPeriod"
                  },
                  "multi_az": {
                    "type": "boolean",
                    "documentation": "<p> Indicates that the Single-AZ DB Instance is to change to a Multi-AZ deployment. </p>",
                    "serialized_name": "MultiAZ"
                  },
                  "engine_version": {
                    "type": "string",
                    "documentation": "<p> Indicates the database engine version. </p>",
                    "serialized_name": "EngineVersion"
                  },
                  "iops": {
                    "type": "integer",
                    "documentation": "<p> Specifies the new Provisioned IOPS value for the DB Instance that will be applied or is being applied. </p>",
                    "serialized_name": "Iops"
                  },
                  "db_instance_identifier": {
                    "type": "string",
                    "documentation": "<p> Contains the new <code>DBInstanceIdentifier</code> for the DB Instance that will be applied or is in progress. </p>",
                    "serialized_name": "DBInstanceIdentifier"
                  }
                }
              },
              "latest_restorable_time": {
                "type": "timestamp",
                "documentation": "<p> Specifies the latest time to which a database can be restored with point-in-time restore. </p>",
                "serialized_name": "LatestRestorableTime"
              },
              "multi_az": {
                "type": "boolean",
                "documentation": "<p> Specifies if the DB Instance is a Multi-AZ deployment. </p>",
                "serialized_name": "MultiAZ"
              },
              "engine_version": {
                "type": "string",
                "documentation": "<p> Indicates the database engine version. </p>",
                "serialized_name": "EngineVersion"
              },
              "auto_minor_version_upgrade": {
                "type": "boolean",
                "documentation": "<p> Indicates that minor version patches are applied automatically. </p>",
                "serialized_name": "AutoMinorVersionUpgrade"
              },
              "read_replica_source_db_instance_identifier": {
                "type": "string",
                "documentation": "<p> Contains the identifier of the source DB Instance if this DB Instance is a Read Replica. </p>",
                "serialized_name": "ReadReplicaSourceDBInstanceIdentifier"
              },
              "read_replica_db_instance_identifiers": {
                "type": "list",
                "documentation": "<p> Contains one or more identifiers of the Read Replicas associated with this DB Instance. </p>",
                "serialized_name": "ReadReplicaDBInstanceIdentifiers",
                "members": {
                  "type": "string",
                  "serialized_name": "ReadReplicaDBInstanceIdentifier"
                }
              },
              "license_model": {
                "type": "string",
                "documentation": "<p> License model information for this DB Instance. </p>",
                "serialized_name": "LicenseModel"
              },
              "iops": {
                "type": "integer",
                "documentation": "<p> Specifies the Provisioned IOPS (I/O operations per second) value. </p>",
                "serialized_name": "Iops"
              },
              "option_group_memberships": {
                "type": "list",
                "documentation": "<p> Provides the list of option group memberships for this DB Instance. </p>",
                "serialized_name": "OptionGroupMemberships",
                "members": {
                  "type": "structure",
                  "documentation": "<p> Provides information on the option groups the DB instance is a member of. </p>",
                  "serialized_name": "OptionGroupMembership",
                  "members": {
                    "option_group_name": {
                      "type": "string",
                      "documentation": "<p> The name of the option group that the instance belongs to. </p>",
                      "serialized_name": "OptionGroupName"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "<p> The status of the DB Instance's option group membership (e.g. in-sync, pending, pending-maintenance, applying). </p>",
                      "serialized_name": "Status"
                    }
                  }
                }
              },
              "character_set_name": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the character set that this instance is associated with. </p>",
                "serialized_name": "CharacterSetName"
              },
              "secondary_availability_zone": {
                "type": "string",
                "documentation": "<p> If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support. </p>",
                "serialized_name": "SecondaryAvailabilityZone"
              },
              "publicly_accessible": {
                "type": "boolean",
                "documentation": "<p> Specifies the accessibility options for the DB Instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p> <p> Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case. </p> <ul> <li> <b>Default VPC:</b>true</li> <li> <b>VPC:</b>false</li> </ul> <p> If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private. </p>",
                "serialized_name": "PubliclyAccessible"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> User already has a DB Instance with the given identifier. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBInstanceIdentifier</i> does not refer to an existing DB Instance. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed number of DB Instances. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Specified DB Instance class is not available in the specified Availability Zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The specified DB Instance is not in the <i>available</i> state. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>SourceDBInstanceIdentifier</i> refers to a DB Instance with <i>BackupRetentionPeriod</i> equal to 0. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request would result in user exceeding the allowed amount of storage available across all DB Instances. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> DB Subnet Group does not cover all availability zones after it is created because users' change. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Cannot restore from vpc backup to non-vpc DB instance. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> <i>DBSubnetGroupName</i> does not refer to an existing DB Subnet Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Subnets in the DB subnet group should cover at least 2 availability zones unless there's'only 1 available zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Request subnet is valid, or all subnets are not in common Vpc. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Provisioned IOPS not available in the specified Availability Zone. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The specified option group could not be found. </p>",
          "members": {
          }
        }
      ]
    },
    "revoke_db_security_group_ingress": {
      "name": "RevokeDBSecurityGroupIngress",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p> Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC Security Groups. Required parameters for this API are one of CIDRIP, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId). </p>",
      "input": {
        "type": "structure",
        "documentation": "<p> </p>",
        "members": {
          "db_security_group_name": {
            "type": "string",
            "required": true,
            "documentation": "<p> The name of the DB Security Group to revoke ingress from. </p>",
            "serialized_name": "DBSecurityGroupName"
          },
          "cidrip": {
            "type": "string",
            "documentation": "<p> The IP range to revoke access from. Must be a valid CIDR range. If <code>CIDRIP</code> is specified, <code>EC2SecurityGroupName</code>, <code>EC2SecurityGroupId</code> and <code>EC2SecurityGroupOwnerId</code> cannot be provided. </p>",
            "serialized_name": "CIDRIP"
          },
          "ec2_security_group_name": {
            "type": "string",
            "documentation": "<p> The name of the EC2 Security Group to revoke access from. For VPC DB Security Groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. </p>",
            "serialized_name": "EC2SecurityGroupName"
          },
          "ec2_security_group_id": {
            "type": "string",
            "documentation": "<p> The id of the EC2 Security Group to revoke access from. For VPC DB Security Groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. </p>",
            "serialized_name": "EC2SecurityGroupId"
          },
          "ec2_security_group_owner_id": {
            "type": "string",
            "documentation": "<p> The AWS Account Number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> parameter. The AWS Access Key ID is not an acceptable value. For VPC DB Security Groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. </p>",
            "serialized_name": "EC2SecurityGroupOwnerId"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "db_security_group": {
            "type": "structure",
            "documentation": "<p> Contains the result of a successful invocation of the following actions: </p> <ul> <li>DescribeDBSecurityGroups</li> <li>AuthorizeDBSecurityGroupIngress</li> <li>CreateDBSecurityGroup</li> <li>RevokeDBSecurityGroupIngress</li> </ul> <p>This data type is used as a response element in the DescribeDBSecurityGroups action.</p>",
            "serialized_name": "DBSecurityGroup",
            "metadata": {
              "wrapper": true
            },
            "members": {
              "owner_id": {
                "type": "string",
                "documentation": "<p> Provides the AWS ID of the owner of a specific DB Security Group. </p>",
                "serialized_name": "OwnerId"
              },
              "db_security_group_name": {
                "type": "string",
                "documentation": "<p> Specifies the name of the DB Security Group. </p>",
                "serialized_name": "DBSecurityGroupName"
              },
              "db_security_group_description": {
                "type": "string",
                "documentation": "<p> Provides the description of the DB Security Group. </p>",
                "serialized_name": "DBSecurityGroupDescription"
              },
              "vpc_id": {
                "type": "string",
                "documentation": "<p> Provides the VpcId of the DB Security Group. </p>",
                "serialized_name": "VpcId"
              },
              "ec2_security_groups": {
                "type": "list",
                "documentation": "<p> Contains a list of EC2SecurityGroup elements. </p>",
                "serialized_name": "EC2SecurityGroups",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the following actions: </p> <ul> <li>AuthorizeDBSecurityGroupIngress</li> <li>DescribeDBSecurityGroups</li> <li>RevokeDBSecurityGroupIngress</li> </ul>",
                  "serialized_name": "EC2SecurityGroup",
                  "members": {
                    "status": {
                      "type": "string",
                      "documentation": "<p> Provides the status of the EC2 security group. Status can be \"authorizing\", \"authorized\", \"revoking\", and \"revoked\". </p>",
                      "serialized_name": "Status"
                    },
                    "ec2_security_group_name": {
                      "type": "string",
                      "documentation": "<p> Specifies the name of the EC2 Security Group. </p>",
                      "serialized_name": "EC2SecurityGroupName"
                    },
                    "ec2_security_group_id": {
                      "type": "string",
                      "documentation": "<p> Specifies the id of the EC2 Security Group. </p>",
                      "serialized_name": "EC2SecurityGroupId"
                    },
                    "ec2_security_group_owner_id": {
                      "type": "string",
                      "documentation": "<p> Specifies the AWS ID of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> field. </p>",
                      "serialized_name": "EC2SecurityGroupOwnerId"
                    }
                  }
                }
              },
              "ip_ranges": {
                "type": "list",
                "documentation": "<p> Contains a list of IPRange elements. </p>",
                "serialized_name": "IPRanges",
                "members": {
                  "type": "structure",
                  "documentation": "<p> This data type is used as a response element in the DescribeDBSecurityGroups action. </p>",
                  "serialized_name": "IPRange",
                  "members": {
                    "status": {
                      "type": "string",
                      "documentation": "<p> Specifies the status of the IP range. Status can be \"authorizing\", \"authorized\", \"revoking\", and \"revoked\". </p>",
                      "serialized_name": "Status"
                    },
                    "cidrip": {
                      "type": "string",
                      "documentation": "<p> Specifies the IP range. </p>",
                      "serialized_name": "CIDRIP"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p> <i>DBSecurityGroupName</i> does not refer to an existing DB Security Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> Specified CIDRIP or EC2 security group is not authorized for the specified DB Security Group. </p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p> The state of the DB Security Group does not allow deletion. </p>",
          "members": {
          }
        }
      ]
    }
  }
}