{
  "version": "2013-05-12",
  "endpoint": "cloudfront.%s.amazonaws.com",
  "metadata": {
    "service_abbreviation": "CloudFront",
    "service_full_name": "Amazon CloudFront",
    "xmlnamespace": "http://cloudfront.amazonaws.com/doc/2013-05-12/"
  },
  "plugins": [
    "Aws::Plugins::GlobalConfiguration",
    "Aws::Plugins::RegionalEndpoint",
    "Aws::Plugins::EnvironmentCredentials",
    "Aws::Plugins::ContentLength",
    "Aws::Plugins::RestProtocol",
    "Aws::Plugins::XmlSerializer",
    "Aws::Plugins::Signers::Version4"
  ],
  "operations": {
    "create_cloud_front_origin_access_identity2013_05_12": {
      "name": "CreateCloudFrontOriginAccessIdentity2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/origin-access-identity/cloudfront",
      "documentation": "Create a new origin access identity.",
      "input": {
        "type": "structure",
        "documentation": "The request to create a new origin access identity.",
        "members": {
          "cloud_front_origin_access_identity_config": {
            "type": "structure",
            "required": true,
            "documentation": "The origin access identity's configuration information.",
            "serialized_name": "CloudFrontOriginAccessIdentityConfig",
            "metadata": {
              "payload": true
            },
            "members": {
              "caller_reference": {
                "type": "string",
                "required": true,
                "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created. If the CallerReference is a value you already sent in a previous request to create an identity, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.",
                "serialized_name": "CallerReference"
              },
              "comment": {
                "type": "string",
                "required": true,
                "documentation": "Any comments you want to include about the origin access identity.",
                "serialized_name": "Comment"
              }
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "cloud_front_origin_access_identity": {
            "type": "structure",
            "documentation": "The origin access identity's information.",
            "serialized_name": "CloudFrontOriginAccessIdentity",
            "metadata": {
              "payload": true
            },
            "members": {
              "id": {
                "type": "string",
                "documentation": "The ID for the origin access identity. For example: E74FTE3AJFJ256A.",
                "serialized_name": "Id"
              },
              "s3_canonical_user_id": {
                "type": "string",
                "documentation": "The Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3.",
                "serialized_name": "S3CanonicalUserId"
              },
              "cloud_front_origin_access_identity_config": {
                "type": "structure",
                "documentation": "The current configuration information for the identity.",
                "serialized_name": "CloudFrontOriginAccessIdentityConfig",
                "members": {
                  "caller_reference": {
                    "type": "string",
                    "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created. If the CallerReference is a value you already sent in a previous request to create an identity, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.",
                    "serialized_name": "CallerReference"
                  },
                  "comment": {
                    "type": "string",
                    "documentation": "Any comments you want to include about the origin access identity.",
                    "serialized_name": "Comment"
                  }
                }
              }
            }
          },
          "location": {
            "type": "string",
            "documentation": "The fully qualified URI of the new origin access identity just created. For example: https://cloudfront.amazonaws.com/2010-11-01/origin-access-identity/cloudfront/E74FTE3AJFJ256A.",
            "location": "header",
            "serialized_name": "Location"
          },
          "etag": {
            "type": "string",
            "documentation": "The current version of the origin access identity created.",
            "location": "header",
            "serialized_name": "ETag"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "This operation requires a body. Ensure that the body is present and the Content-Type header is set.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Processing your request would cause you to exceed the maximum number of origin access identities allowed.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The argument is invalid.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The value of Quantity and the size of Items do not match.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "create_distribution2013_05_12": {
      "name": "CreateDistribution2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/distribution",
      "documentation": "Create a new distribution.",
      "input": {
        "type": "structure",
        "documentation": "The request to create a new distribution.",
        "members": {
          "distribution_config": {
            "type": "structure",
            "required": true,
            "documentation": "The distribution's configuration information.",
            "serialized_name": "DistributionConfig",
            "metadata": {
              "payload": true
            },
            "members": {
              "caller_reference": {
                "type": "string",
                "required": true,
                "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the DistributionConfig object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create a distribution, and the content of the DistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of the DistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                "serialized_name": "CallerReference"
              },
              "aliases": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                "serialized_name": "Aliases",
                "members": {
                  "quantity": {
                    "type": "integer",
                    "required": true,
                    "documentation": "The number of CNAMEs, if any, for this distribution.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "string",
                      "serialized_name": "CNAME"
                    }
                  }
                }
              },
              "default_root_object": {
                "type": "string",
                "required": true,
                "documentation": "The object that you want CloudFront to return (for example, index.html) when an end user requests the root URL for your distribution (http://www.example.com) instead of an object in your distribution (http://www.example.com/index.html). Specifying a default root object avoids exposing the contents of your distribution. If you don't want to specify a default root object when you create a distribution, include an empty DefaultRootObject element. To delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element. To replace the default root object, update the distribution configuration and specify the new object.",
                "serialized_name": "DefaultRootObject"
              },
              "origins": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that contains information about origins for this distribution.",
                "serialized_name": "Origins",
                "members": {
                  "quantity": {
                    "type": "integer",
                    "required": true,
                    "documentation": "The number of origins for this distribution.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "A complex type that contains origins for this distribution.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "structure",
                      "documentation": "A complex type that describes the Amazon S3 bucket or the HTTP server (for example, a web server) from which CloudFront gets your files.You must create at least one origin.",
                      "serialized_name": "Origin",
                      "members": {
                        "id": {
                          "type": "string",
                          "required": true,
                          "documentation": "A unique identifier for the origin. The value of Id must be unique within the distribution. You use the value of Id when you create a cache behavior. The Id identifies the origin that CloudFront routes a request to when the request matches the path pattern for that cache behavior.",
                          "serialized_name": "Id"
                        },
                        "domain_name": {
                          "type": "string",
                          "required": true,
                          "documentation": "Amazon S3 origins: The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, myawsbucket.s3.amazonaws.com. Custom origins: The DNS domain name for the HTTP server from which you want CloudFront to get objects for this origin, for example, www.example.com.",
                          "serialized_name": "DomainName"
                        },
                        "s3_origin_config": {
                          "type": "structure",
                          "documentation": "A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin, use the CustomOriginConfig element instead.",
                          "serialized_name": "S3OriginConfig",
                          "members": {
                            "origin_access_identity": {
                              "type": "string",
                              "required": true,
                              "documentation": "The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that end users can only access objects in an Amazon S3 bucket through CloudFront. If you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity.",
                              "serialized_name": "OriginAccessIdentity"
                            }
                          }
                        },
                        "custom_origin_config": {
                          "type": "structure",
                          "documentation": "A complex type that contains information about a custom origin. If the origin is an Amazon S3 bucket, use the S3OriginConfig element instead.",
                          "serialized_name": "CustomOriginConfig",
                          "members": {
                            "http_port": {
                              "type": "integer",
                              "required": true,
                              "documentation": "The HTTP port the custom origin listens on.",
                              "serialized_name": "HTTPPort"
                            },
                            "https_port": {
                              "type": "integer",
                              "required": true,
                              "documentation": "The HTTPS port the custom origin listens on.",
                              "serialized_name": "HTTPSPort"
                            },
                            "origin_protocol_policy": {
                              "type": "string",
                              "required": true,
                              "documentation": "The origin protocol policy to apply to your origin.",
                              "serialized_name": "OriginProtocolPolicy",
                              "enum": [
                                "http-only",
                                "match-viewer"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "default_cache_behavior": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior.",
                "serialized_name": "DefaultCacheBehavior",
                "members": {
                  "target_origin_id": {
                    "type": "string",
                    "required": true,
                    "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                    "serialized_name": "TargetOriginId"
                  },
                  "forwarded_values": {
                    "type": "structure",
                    "required": true,
                    "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                    "serialized_name": "ForwardedValues",
                    "members": {
                      "query_string": {
                        "type": "boolean",
                        "required": true,
                        "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                        "serialized_name": "QueryString"
                      },
                      "cookies": {
                        "type": "structure",
                        "required": true,
                        "documentation": "A complex type that specifies how CloudFront handles cookies.",
                        "serialized_name": "Cookies",
                        "members": {
                          "forward": {
                            "type": "string",
                            "required": true,
                            "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                            "serialized_name": "Forward",
                            "enum": [
                              "none",
                              "whitelist",
                              "all"
                            ]
                          },
                          "whitelisted_names": {
                            "type": "structure",
                            "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                            "serialized_name": "WhitelistedNames",
                            "members": {
                              "quantity": {
                                "type": "integer",
                                "required": true,
                                "documentation": "The number of whitelisted cookies for this cache behavior.",
                                "serialized_name": "Quantity"
                              },
                              "items": {
                                "type": "list",
                                "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                "serialized_name": "Items",
                                "members": {
                                  "type": "string",
                                  "serialized_name": "Name"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "trusted_signers": {
                    "type": "structure",
                    "required": true,
                    "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                    "serialized_name": "TrustedSigners",
                    "members": {
                      "enabled": {
                        "type": "boolean",
                        "required": true,
                        "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                        "serialized_name": "Enabled"
                      },
                      "quantity": {
                        "type": "integer",
                        "required": true,
                        "documentation": "The number of trusted signers for this cache behavior.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "AwsAccountNumber"
                        }
                      }
                    }
                  },
                  "viewer_protocol_policy": {
                    "type": "string",
                    "required": true,
                    "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                    "serialized_name": "ViewerProtocolPolicy",
                    "enum": [
                      "allow-all",
                      "https-only"
                    ]
                  },
                  "min_ttl": {
                    "type": "integer",
                    "required": true,
                    "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                    "serialized_name": "MinTTL"
                  }
                }
              },
              "cache_behaviors": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that contains zero or more CacheBehavior elements.",
                "serialized_name": "CacheBehaviors",
                "members": {
                  "quantity": {
                    "type": "integer",
                    "required": true,
                    "documentation": "The number of cache behaviors for this distribution.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "Optional: A complex type that contains cache behaviors for this distribution. If Quantity is 0, you can omit Items.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "structure",
                      "documentation": "A complex type that describes how CloudFront processes requests. You can create up to 10 cache behaviors.You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to distribute objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin will never be used. If you don't want to specify any cache behaviors, include only an empty CacheBehaviors element. Don't include an empty CacheBehavior element, or CloudFront returns a MalformedXML error. To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element. To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.",
                      "serialized_name": "CacheBehavior",
                      "members": {
                        "path_pattern": {
                          "type": "string",
                          "required": true,
                          "documentation": "The pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to. When CloudFront receives an end-user request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution. The path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.",
                          "serialized_name": "PathPattern"
                        },
                        "target_origin_id": {
                          "type": "string",
                          "required": true,
                          "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                          "serialized_name": "TargetOriginId"
                        },
                        "forwarded_values": {
                          "type": "structure",
                          "required": true,
                          "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                          "serialized_name": "ForwardedValues",
                          "members": {
                            "query_string": {
                              "type": "boolean",
                              "required": true,
                              "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                              "serialized_name": "QueryString"
                            },
                            "cookies": {
                              "type": "structure",
                              "required": true,
                              "documentation": "A complex type that specifies how CloudFront handles cookies.",
                              "serialized_name": "Cookies",
                              "members": {
                                "forward": {
                                  "type": "string",
                                  "required": true,
                                  "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                                  "serialized_name": "Forward",
                                  "enum": [
                                    "none",
                                    "whitelist",
                                    "all"
                                  ]
                                },
                                "whitelisted_names": {
                                  "type": "structure",
                                  "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                                  "serialized_name": "WhitelistedNames",
                                  "members": {
                                    "quantity": {
                                      "type": "integer",
                                      "required": true,
                                      "documentation": "The number of whitelisted cookies for this cache behavior.",
                                      "serialized_name": "Quantity"
                                    },
                                    "items": {
                                      "type": "list",
                                      "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                      "serialized_name": "Items",
                                      "members": {
                                        "type": "string",
                                        "serialized_name": "Name"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trusted_signers": {
                          "type": "structure",
                          "required": true,
                          "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                          "serialized_name": "TrustedSigners",
                          "members": {
                            "enabled": {
                              "type": "boolean",
                              "required": true,
                              "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                              "serialized_name": "Enabled"
                            },
                            "quantity": {
                              "type": "integer",
                              "required": true,
                              "documentation": "The number of trusted signers for this cache behavior.",
                              "serialized_name": "Quantity"
                            },
                            "items": {
                              "type": "list",
                              "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                              "serialized_name": "Items",
                              "members": {
                                "type": "string",
                                "serialized_name": "AwsAccountNumber"
                              }
                            }
                          }
                        },
                        "viewer_protocol_policy": {
                          "type": "string",
                          "required": true,
                          "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                          "serialized_name": "ViewerProtocolPolicy",
                          "enum": [
                            "allow-all",
                            "https-only"
                          ]
                        },
                        "min_ttl": {
                          "type": "integer",
                          "required": true,
                          "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                          "serialized_name": "MinTTL"
                        }
                      }
                    }
                  }
                }
              },
              "comment": {
                "type": "string",
                "required": true,
                "documentation": "Any comments you want to include about the distribution.",
                "serialized_name": "Comment"
              },
              "logging": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that controls whether access logs are written for the distribution.",
                "serialized_name": "Logging",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "required": true,
                    "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket, prefix and IncludeCookies, the values are automatically deleted.",
                    "serialized_name": "Enabled"
                  },
                  "include_cookies": {
                    "type": "boolean",
                    "required": true,
                    "documentation": "Specifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you do not want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies.",
                    "serialized_name": "IncludeCookies"
                  },
                  "bucket": {
                    "type": "string",
                    "required": true,
                    "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                    "serialized_name": "Bucket"
                  },
                  "prefix": {
                    "type": "string",
                    "required": true,
                    "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                    "serialized_name": "Prefix"
                  }
                }
              },
              "price_class": {
                "type": "string",
                "required": true,
                "documentation": "A complex type that contains information about price class for this distribution.",
                "serialized_name": "PriceClass",
                "enum": [
                  "PriceClass_100",
                  "PriceClass_200",
                  "PriceClass_All"
                ]
              },
              "enabled": {
                "type": "boolean",
                "required": true,
                "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                "serialized_name": "Enabled"
              },
              "viewer_certificate": {
                "type": "structure",
                "documentation": "A complex type that contains information about viewer certificates for this distribution.",
                "serialized_name": "ViewerCertificate",
                "members": {
                  "iam_certificate_id": {
                    "type": "string",
                    "documentation": "The IAM certificate identifier of the custom viewer certificate for this distribution.",
                    "serialized_name": "IAMCertificateId"
                  },
                  "cloud_front_default_certificate": {
                    "type": "boolean",
                    "documentation": "Set to true if you want to use the default *.cloudfront.net viewer certificate for this distribution. Omit this value if you are setting an IAMCertificateId.",
                    "serialized_name": "CloudFrontDefaultCertificate"
                  }
                }
              }
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "distribution": {
            "type": "structure",
            "documentation": "The distribution's information.",
            "serialized_name": "Distribution",
            "metadata": {
              "payload": true
            },
            "members": {
              "id": {
                "type": "string",
                "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                "serialized_name": "Id"
              },
              "status": {
                "type": "string",
                "documentation": "This response element indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                "serialized_name": "Status"
              },
              "last_modified_time": {
                "type": "timestamp",
                "documentation": "The date and time the distribution was last modified.",
                "serialized_name": "LastModifiedTime"
              },
              "in_progress_invalidation_batches": {
                "type": "integer",
                "documentation": "The number of invalidation batches currently in progress.",
                "serialized_name": "InProgressInvalidationBatches"
              },
              "domain_name": {
                "type": "string",
                "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                "serialized_name": "DomainName"
              },
              "active_trusted_signers": {
                "type": "structure",
                "documentation": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs.",
                "serialized_name": "ActiveTrustedSigners",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Each active trusted signer.",
                    "serialized_name": "Enabled"
                  },
                  "quantity": {
                    "type": "integer",
                    "documentation": "The number of unique trusted signers included in all cache behaviors. For example, if three cache behaviors all list the same three AWS accounts, the value of Quantity for ActiveTrustedSigners will be 3.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "A complex type that contains one Signer complex type for each unique trusted signer that is specified in the TrustedSigners complex type, including trusted signers in the default cache behavior and in all of the other cache behaviors.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "structure",
                      "documentation": "A complex type that lists the AWS accounts that were included in the TrustedSigners complex type, as well as their active CloudFront key pair IDs, if any.",
                      "serialized_name": "Signer",
                      "members": {
                        "aws_account_number": {
                          "type": "string",
                          "documentation": "Specifies an AWS account that can create signed URLs. Values: self, which indicates that the AWS account that was used to create the distribution can created signed URLs, or an AWS account number. Omit the dashes in the account number.",
                          "serialized_name": "AwsAccountNumber"
                        },
                        "key_pair_ids": {
                          "type": "structure",
                          "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                          "serialized_name": "KeyPairIds",
                          "members": {
                            "quantity": {
                              "type": "integer",
                              "documentation": "The number of active CloudFront key pairs for AwsAccountNumber.",
                              "serialized_name": "Quantity"
                            },
                            "items": {
                              "type": "list",
                              "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                              "serialized_name": "Items",
                              "members": {
                                "type": "string",
                                "serialized_name": "KeyPairId"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "distribution_config": {
                "type": "structure",
                "documentation": "The current configuration information for the distribution.",
                "serialized_name": "DistributionConfig",
                "members": {
                  "caller_reference": {
                    "type": "string",
                    "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the DistributionConfig object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create a distribution, and the content of the DistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of the DistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                    "serialized_name": "CallerReference"
                  },
                  "aliases": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                    "serialized_name": "Aliases",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of CNAMEs, if any, for this distribution.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "CNAME"
                        }
                      }
                    }
                  },
                  "default_root_object": {
                    "type": "string",
                    "documentation": "The object that you want CloudFront to return (for example, index.html) when an end user requests the root URL for your distribution (http://www.example.com) instead of an object in your distribution (http://www.example.com/index.html). Specifying a default root object avoids exposing the contents of your distribution. If you don't want to specify a default root object when you create a distribution, include an empty DefaultRootObject element. To delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element. To replace the default root object, update the distribution configuration and specify the new object.",
                    "serialized_name": "DefaultRootObject"
                  },
                  "origins": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about origins for this distribution.",
                    "serialized_name": "Origins",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of origins for this distribution.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "A complex type that contains origins for this distribution.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "structure",
                          "documentation": "A complex type that describes the Amazon S3 bucket or the HTTP server (for example, a web server) from which CloudFront gets your files.You must create at least one origin.",
                          "serialized_name": "Origin",
                          "members": {
                            "id": {
                              "type": "string",
                              "documentation": "A unique identifier for the origin. The value of Id must be unique within the distribution. You use the value of Id when you create a cache behavior. The Id identifies the origin that CloudFront routes a request to when the request matches the path pattern for that cache behavior.",
                              "serialized_name": "Id"
                            },
                            "domain_name": {
                              "type": "string",
                              "documentation": "Amazon S3 origins: The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, myawsbucket.s3.amazonaws.com. Custom origins: The DNS domain name for the HTTP server from which you want CloudFront to get objects for this origin, for example, www.example.com.",
                              "serialized_name": "DomainName"
                            },
                            "s3_origin_config": {
                              "type": "structure",
                              "documentation": "A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin, use the CustomOriginConfig element instead.",
                              "serialized_name": "S3OriginConfig",
                              "members": {
                                "origin_access_identity": {
                                  "type": "string",
                                  "documentation": "The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that end users can only access objects in an Amazon S3 bucket through CloudFront. If you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity.",
                                  "serialized_name": "OriginAccessIdentity"
                                }
                              }
                            },
                            "custom_origin_config": {
                              "type": "structure",
                              "documentation": "A complex type that contains information about a custom origin. If the origin is an Amazon S3 bucket, use the S3OriginConfig element instead.",
                              "serialized_name": "CustomOriginConfig",
                              "members": {
                                "http_port": {
                                  "type": "integer",
                                  "documentation": "The HTTP port the custom origin listens on.",
                                  "serialized_name": "HTTPPort"
                                },
                                "https_port": {
                                  "type": "integer",
                                  "documentation": "The HTTPS port the custom origin listens on.",
                                  "serialized_name": "HTTPSPort"
                                },
                                "origin_protocol_policy": {
                                  "type": "string",
                                  "documentation": "The origin protocol policy to apply to your origin.",
                                  "serialized_name": "OriginProtocolPolicy",
                                  "enum": [
                                    "http-only",
                                    "match-viewer"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "default_cache_behavior": {
                    "type": "structure",
                    "documentation": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior.",
                    "serialized_name": "DefaultCacheBehavior",
                    "members": {
                      "target_origin_id": {
                        "type": "string",
                        "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                        "serialized_name": "TargetOriginId"
                      },
                      "forwarded_values": {
                        "type": "structure",
                        "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                        "serialized_name": "ForwardedValues",
                        "members": {
                          "query_string": {
                            "type": "boolean",
                            "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                            "serialized_name": "QueryString"
                          },
                          "cookies": {
                            "type": "structure",
                            "documentation": "A complex type that specifies how CloudFront handles cookies.",
                            "serialized_name": "Cookies",
                            "members": {
                              "forward": {
                                "type": "string",
                                "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                                "serialized_name": "Forward",
                                "enum": [
                                  "none",
                                  "whitelist",
                                  "all"
                                ]
                              },
                              "whitelisted_names": {
                                "type": "structure",
                                "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                                "serialized_name": "WhitelistedNames",
                                "members": {
                                  "quantity": {
                                    "type": "integer",
                                    "documentation": "The number of whitelisted cookies for this cache behavior.",
                                    "serialized_name": "Quantity"
                                  },
                                  "items": {
                                    "type": "list",
                                    "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                    "serialized_name": "Items",
                                    "members": {
                                      "type": "string",
                                      "serialized_name": "Name"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "trusted_signers": {
                        "type": "structure",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "serialized_name": "TrustedSigners",
                        "members": {
                          "enabled": {
                            "type": "boolean",
                            "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                            "serialized_name": "Enabled"
                          },
                          "quantity": {
                            "type": "integer",
                            "documentation": "The number of trusted signers for this cache behavior.",
                            "serialized_name": "Quantity"
                          },
                          "items": {
                            "type": "list",
                            "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                            "serialized_name": "Items",
                            "members": {
                              "type": "string",
                              "serialized_name": "AwsAccountNumber"
                            }
                          }
                        }
                      },
                      "viewer_protocol_policy": {
                        "type": "string",
                        "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                        "serialized_name": "ViewerProtocolPolicy",
                        "enum": [
                          "allow-all",
                          "https-only"
                        ]
                      },
                      "min_ttl": {
                        "type": "integer",
                        "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                        "serialized_name": "MinTTL"
                      }
                    }
                  },
                  "cache_behaviors": {
                    "type": "structure",
                    "documentation": "A complex type that contains zero or more CacheBehavior elements.",
                    "serialized_name": "CacheBehaviors",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of cache behaviors for this distribution.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains cache behaviors for this distribution. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "structure",
                          "documentation": "A complex type that describes how CloudFront processes requests. You can create up to 10 cache behaviors.You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to distribute objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin will never be used. If you don't want to specify any cache behaviors, include only an empty CacheBehaviors element. Don't include an empty CacheBehavior element, or CloudFront returns a MalformedXML error. To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element. To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.",
                          "serialized_name": "CacheBehavior",
                          "members": {
                            "path_pattern": {
                              "type": "string",
                              "documentation": "The pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to. When CloudFront receives an end-user request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution. The path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.",
                              "serialized_name": "PathPattern"
                            },
                            "target_origin_id": {
                              "type": "string",
                              "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                              "serialized_name": "TargetOriginId"
                            },
                            "forwarded_values": {
                              "type": "structure",
                              "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                              "serialized_name": "ForwardedValues",
                              "members": {
                                "query_string": {
                                  "type": "boolean",
                                  "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                                  "serialized_name": "QueryString"
                                },
                                "cookies": {
                                  "type": "structure",
                                  "documentation": "A complex type that specifies how CloudFront handles cookies.",
                                  "serialized_name": "Cookies",
                                  "members": {
                                    "forward": {
                                      "type": "string",
                                      "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                                      "serialized_name": "Forward",
                                      "enum": [
                                        "none",
                                        "whitelist",
                                        "all"
                                      ]
                                    },
                                    "whitelisted_names": {
                                      "type": "structure",
                                      "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                                      "serialized_name": "WhitelistedNames",
                                      "members": {
                                        "quantity": {
                                          "type": "integer",
                                          "documentation": "The number of whitelisted cookies for this cache behavior.",
                                          "serialized_name": "Quantity"
                                        },
                                        "items": {
                                          "type": "list",
                                          "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                          "serialized_name": "Items",
                                          "members": {
                                            "type": "string",
                                            "serialized_name": "Name"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "trusted_signers": {
                              "type": "structure",
                              "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                              "serialized_name": "TrustedSigners",
                              "members": {
                                "enabled": {
                                  "type": "boolean",
                                  "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                                  "serialized_name": "Enabled"
                                },
                                "quantity": {
                                  "type": "integer",
                                  "documentation": "The number of trusted signers for this cache behavior.",
                                  "serialized_name": "Quantity"
                                },
                                "items": {
                                  "type": "list",
                                  "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                                  "serialized_name": "Items",
                                  "members": {
                                    "type": "string",
                                    "serialized_name": "AwsAccountNumber"
                                  }
                                }
                              }
                            },
                            "viewer_protocol_policy": {
                              "type": "string",
                              "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                              "serialized_name": "ViewerProtocolPolicy",
                              "enum": [
                                "allow-all",
                                "https-only"
                              ]
                            },
                            "min_ttl": {
                              "type": "integer",
                              "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                              "serialized_name": "MinTTL"
                            }
                          }
                        }
                      }
                    }
                  },
                  "comment": {
                    "type": "string",
                    "documentation": "Any comments you want to include about the distribution.",
                    "serialized_name": "Comment"
                  },
                  "logging": {
                    "type": "structure",
                    "documentation": "A complex type that controls whether access logs are written for the distribution.",
                    "serialized_name": "Logging",
                    "members": {
                      "enabled": {
                        "type": "boolean",
                        "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket, prefix and IncludeCookies, the values are automatically deleted.",
                        "serialized_name": "Enabled"
                      },
                      "include_cookies": {
                        "type": "boolean",
                        "documentation": "Specifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you do not want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies.",
                        "serialized_name": "IncludeCookies"
                      },
                      "bucket": {
                        "type": "string",
                        "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                        "serialized_name": "Bucket"
                      },
                      "prefix": {
                        "type": "string",
                        "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                        "serialized_name": "Prefix"
                      }
                    }
                  },
                  "price_class": {
                    "type": "string",
                    "documentation": "A complex type that contains information about price class for this distribution.",
                    "serialized_name": "PriceClass",
                    "enum": [
                      "PriceClass_100",
                      "PriceClass_200",
                      "PriceClass_All"
                    ]
                  },
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                    "serialized_name": "Enabled"
                  },
                  "viewer_certificate": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about viewer certificates for this distribution.",
                    "serialized_name": "ViewerCertificate",
                    "members": {
                      "iam_certificate_id": {
                        "type": "string",
                        "documentation": "The IAM certificate identifier of the custom viewer certificate for this distribution.",
                        "serialized_name": "IAMCertificateId"
                      },
                      "cloud_front_default_certificate": {
                        "type": "boolean",
                        "documentation": "Set to true if you want to use the default *.cloudfront.net viewer certificate for this distribution. Omit this value if you are setting an IAMCertificateId.",
                        "serialized_name": "CloudFrontDefaultCertificate"
                      }
                    }
                  }
                }
              }
            }
          },
          "location": {
            "type": "string",
            "documentation": "The fully qualified URI of the new distribution resource just created. For example: https://cloudfront.amazonaws.com/2010-11-01/distribution/EDFDVBD632BHDS5.",
            "location": "header",
            "serialized_name": "Location"
          },
          "etag": {
            "type": "string",
            "documentation": "The current version of the distribution created.",
            "location": "header",
            "serialized_name": "ETag"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The caller reference you attempted to create the distribution with is associated with another distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The Amazon S3 origin server specified does not refer to a valid Amazon S3 bucket.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The origin access identity is not valid or doesn't exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Your request contains more trusted signers than are allowed per distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "One or more of your trusted signers do not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "This operation requires a body. Ensure that the body is present and the Content-Type header is set.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Your request contains more CNAMEs than are allowed per distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Processing your request would cause you to exceed the maximum number of distributions allowed.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The default root object file name is too big or contains an invalid character.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The argument is invalid.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "This operation requires the HTTPS protocol. Ensure that you specify the HTTPS protocol in your request, or omit the RequiredProtocols element from your distribution configuration.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "No origin exists with the specified Origin Id.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "You cannot create anymore origins for the distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "You cannot create anymore cache behaviors for the distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Your request contains more cookie names in the whitelist than are allowed per cache behavior.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Your request contains forward cookies option which doesn't match with the expectation for the whitelisted list of cookie names. Either list of cookie names has been specified when not allowed or list of cookie names is missing when expected.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The value of Quantity and the size of Items do not match.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "You cannot create anymore custom ssl certificates.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "create_invalidation2013_05_12": {
      "name": "CreateInvalidation2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/distribution/{DistributionId}/invalidation",
      "documentation": "Create a new invalidation.",
      "input": {
        "type": "structure",
        "documentation": "The request to create an invalidation.",
        "members": {
          "distribution_id": {
            "type": "string",
            "required": true,
            "documentation": "The distribution's id.",
            "location": "uri",
            "serialized_name": "DistributionId"
          },
          "invalidation_batch": {
            "type": "structure",
            "required": true,
            "documentation": "The batch information for the invalidation.",
            "serialized_name": "InvalidationBatch",
            "metadata": {
              "payload": true
            },
            "members": {
              "paths": {
                "type": "structure",
                "required": true,
                "documentation": "The path of the object to invalidate. The path is relative to the distribution and must begin with a slash (/). You must enclose each invalidation object with the Path element tags. If the path includes non-ASCII characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt), URL encode those characters. Do not URL encode any other characters in the path, or CloudFront will not invalidate the old version of the updated object.",
                "serialized_name": "Paths",
                "members": {
                  "quantity": {
                    "type": "integer",
                    "required": true,
                    "documentation": "The number of objects that you want to invalidate.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "A complex type that contains a list of the objects that you want to invalidate.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "string",
                      "serialized_name": "Path"
                    }
                  }
                }
              },
              "caller_reference": {
                "type": "string",
                "required": true,
                "documentation": "A unique name that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the Path object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create an invalidation batch, and the content of each Path element is identical to the original request, the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of any Path is different from the original request, CloudFront returns an InvalidationBatchAlreadyExists error.",
                "serialized_name": "CallerReference"
              }
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "location": {
            "type": "string",
            "documentation": "The fully qualified URI of the distribution and invalidation batch request, including the Invalidation ID.",
            "location": "header",
            "serialized_name": "Location"
          },
          "invalidation": {
            "type": "structure",
            "documentation": "The invalidation's information.",
            "serialized_name": "Invalidation",
            "metadata": {
              "payload": true
            },
            "members": {
              "id": {
                "type": "string",
                "documentation": "The identifier for the invalidation request. For example: IDFDVBD632BHDS5.",
                "serialized_name": "Id"
              },
              "status": {
                "type": "string",
                "documentation": "The status of the invalidation request. When the invalidation batch is finished, the status is Completed.",
                "serialized_name": "Status"
              },
              "create_time": {
                "type": "timestamp",
                "documentation": "The date and time the invalidation request was first made.",
                "serialized_name": "CreateTime"
              },
              "invalidation_batch": {
                "type": "structure",
                "documentation": "The current invalidation information for the batch request.",
                "serialized_name": "InvalidationBatch",
                "members": {
                  "paths": {
                    "type": "structure",
                    "documentation": "The path of the object to invalidate. The path is relative to the distribution and must begin with a slash (/). You must enclose each invalidation object with the Path element tags. If the path includes non-ASCII characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt), URL encode those characters. Do not URL encode any other characters in the path, or CloudFront will not invalidate the old version of the updated object.",
                    "serialized_name": "Paths",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of objects that you want to invalidate.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "A complex type that contains a list of the objects that you want to invalidate.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "Path"
                        }
                      }
                    }
                  },
                  "caller_reference": {
                    "type": "string",
                    "documentation": "A unique name that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the Path object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create an invalidation batch, and the content of each Path element is identical to the original request, the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of any Path is different from the original request, CloudFront returns an InvalidationBatchAlreadyExists error.",
                    "serialized_name": "CallerReference"
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "This operation requires a body. Ensure that the body is present and the Content-Type header is set.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The argument is invalid.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The specified distribution does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "You have exceeded the maximum number of allowable InProgress invalidation batch requests, or invalidation objects.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The value of Quantity and the size of Items do not match.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "create_streaming_distribution2013_05_12": {
      "name": "CreateStreamingDistribution2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/streaming-distribution",
      "documentation": "Create a new streaming distribution.",
      "input": {
        "type": "structure",
        "documentation": "The request to create a new streaming distribution.",
        "members": {
          "streaming_distribution_config": {
            "type": "structure",
            "required": true,
            "documentation": "The streaming distribution's configuration information.",
            "serialized_name": "StreamingDistributionConfig",
            "metadata": {
              "payload": true
            },
            "members": {
              "caller_reference": {
                "type": "string",
                "required": true,
                "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the StreamingDistributionConfig object), a new streaming distribution is created. If the CallerReference is a value you already sent in a previous request to create a streaming distribution, and the content of the StreamingDistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a streaming distribution but the content of the StreamingDistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                "serialized_name": "CallerReference"
              },
              "s3_origin": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
                "serialized_name": "S3Origin",
                "members": {
                  "domain_name": {
                    "type": "string",
                    "required": true,
                    "documentation": "The DNS name of the S3 origin.",
                    "serialized_name": "DomainName"
                  },
                  "origin_access_identity": {
                    "type": "string",
                    "required": true,
                    "documentation": "Your S3 origin's origin access identity.",
                    "serialized_name": "OriginAccessIdentity"
                  }
                }
              },
              "aliases": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.",
                "serialized_name": "Aliases",
                "members": {
                  "quantity": {
                    "type": "integer",
                    "required": true,
                    "documentation": "The number of CNAMEs, if any, for this distribution.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "string",
                      "serialized_name": "CNAME"
                    }
                  }
                }
              },
              "comment": {
                "type": "string",
                "required": true,
                "documentation": "Any comments you want to include about the streaming distribution.",
                "serialized_name": "Comment"
              },
              "logging": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that controls whether access logs are written for the streaming distribution.",
                "serialized_name": "Logging",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "required": true,
                    "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix, the values are automatically deleted.",
                    "serialized_name": "Enabled"
                  },
                  "bucket": {
                    "type": "string",
                    "required": true,
                    "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                    "serialized_name": "Bucket"
                  },
                  "prefix": {
                    "type": "string",
                    "required": true,
                    "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                    "serialized_name": "Prefix"
                  }
                }
              },
              "trusted_signers": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                "serialized_name": "TrustedSigners",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "required": true,
                    "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                    "serialized_name": "Enabled"
                  },
                  "quantity": {
                    "type": "integer",
                    "required": true,
                    "documentation": "The number of trusted signers for this cache behavior.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "string",
                      "serialized_name": "AwsAccountNumber"
                    }
                  }
                }
              },
              "price_class": {
                "type": "string",
                "required": true,
                "documentation": "A complex type that contains information about price class for this streaming distribution.",
                "serialized_name": "PriceClass",
                "enum": [
                  "PriceClass_100",
                  "PriceClass_200",
                  "PriceClass_All"
                ]
              },
              "enabled": {
                "type": "boolean",
                "required": true,
                "documentation": "Whether the streaming distribution is enabled to accept end user requests for content.",
                "serialized_name": "Enabled"
              }
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "streaming_distribution": {
            "type": "structure",
            "documentation": "The streaming distribution's information.",
            "serialized_name": "StreamingDistribution",
            "metadata": {
              "payload": true
            },
            "members": {
              "id": {
                "type": "string",
                "documentation": "The identifier for the streaming distribution. For example: EGTXBD79H29TRA8.",
                "serialized_name": "Id"
              },
              "status": {
                "type": "string",
                "documentation": "The current status of the streaming distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                "serialized_name": "Status"
              },
              "last_modified_time": {
                "type": "timestamp",
                "documentation": "The date and time the distribution was last modified.",
                "serialized_name": "LastModifiedTime"
              },
              "domain_name": {
                "type": "string",
                "documentation": "The domain name corresponding to the streaming distribution. For example: s5c39gqb8ow64r.cloudfront.net.",
                "serialized_name": "DomainName"
              },
              "active_trusted_signers": {
                "type": "structure",
                "documentation": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs.",
                "serialized_name": "ActiveTrustedSigners",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Each active trusted signer.",
                    "serialized_name": "Enabled"
                  },
                  "quantity": {
                    "type": "integer",
                    "documentation": "The number of unique trusted signers included in all cache behaviors. For example, if three cache behaviors all list the same three AWS accounts, the value of Quantity for ActiveTrustedSigners will be 3.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "A complex type that contains one Signer complex type for each unique trusted signer that is specified in the TrustedSigners complex type, including trusted signers in the default cache behavior and in all of the other cache behaviors.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "structure",
                      "documentation": "A complex type that lists the AWS accounts that were included in the TrustedSigners complex type, as well as their active CloudFront key pair IDs, if any.",
                      "serialized_name": "Signer",
                      "members": {
                        "aws_account_number": {
                          "type": "string",
                          "documentation": "Specifies an AWS account that can create signed URLs. Values: self, which indicates that the AWS account that was used to create the distribution can created signed URLs, or an AWS account number. Omit the dashes in the account number.",
                          "serialized_name": "AwsAccountNumber"
                        },
                        "key_pair_ids": {
                          "type": "structure",
                          "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                          "serialized_name": "KeyPairIds",
                          "members": {
                            "quantity": {
                              "type": "integer",
                              "documentation": "The number of active CloudFront key pairs for AwsAccountNumber.",
                              "serialized_name": "Quantity"
                            },
                            "items": {
                              "type": "list",
                              "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                              "serialized_name": "Items",
                              "members": {
                                "type": "string",
                                "serialized_name": "KeyPairId"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "streaming_distribution_config": {
                "type": "structure",
                "documentation": "The current configuration information for the streaming distribution.",
                "serialized_name": "StreamingDistributionConfig",
                "members": {
                  "caller_reference": {
                    "type": "string",
                    "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the StreamingDistributionConfig object), a new streaming distribution is created. If the CallerReference is a value you already sent in a previous request to create a streaming distribution, and the content of the StreamingDistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a streaming distribution but the content of the StreamingDistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                    "serialized_name": "CallerReference"
                  },
                  "s3_origin": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
                    "serialized_name": "S3Origin",
                    "members": {
                      "domain_name": {
                        "type": "string",
                        "documentation": "The DNS name of the S3 origin.",
                        "serialized_name": "DomainName"
                      },
                      "origin_access_identity": {
                        "type": "string",
                        "documentation": "Your S3 origin's origin access identity.",
                        "serialized_name": "OriginAccessIdentity"
                      }
                    }
                  },
                  "aliases": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.",
                    "serialized_name": "Aliases",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of CNAMEs, if any, for this distribution.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "CNAME"
                        }
                      }
                    }
                  },
                  "comment": {
                    "type": "string",
                    "documentation": "Any comments you want to include about the streaming distribution.",
                    "serialized_name": "Comment"
                  },
                  "logging": {
                    "type": "structure",
                    "documentation": "A complex type that controls whether access logs are written for the streaming distribution.",
                    "serialized_name": "Logging",
                    "members": {
                      "enabled": {
                        "type": "boolean",
                        "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix, the values are automatically deleted.",
                        "serialized_name": "Enabled"
                      },
                      "bucket": {
                        "type": "string",
                        "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                        "serialized_name": "Bucket"
                      },
                      "prefix": {
                        "type": "string",
                        "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                        "serialized_name": "Prefix"
                      }
                    }
                  },
                  "trusted_signers": {
                    "type": "structure",
                    "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                    "serialized_name": "TrustedSigners",
                    "members": {
                      "enabled": {
                        "type": "boolean",
                        "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                        "serialized_name": "Enabled"
                      },
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of trusted signers for this cache behavior.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "AwsAccountNumber"
                        }
                      }
                    }
                  },
                  "price_class": {
                    "type": "string",
                    "documentation": "A complex type that contains information about price class for this streaming distribution.",
                    "serialized_name": "PriceClass",
                    "enum": [
                      "PriceClass_100",
                      "PriceClass_200",
                      "PriceClass_All"
                    ]
                  },
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Whether the streaming distribution is enabled to accept end user requests for content.",
                    "serialized_name": "Enabled"
                  }
                }
              }
            }
          },
          "location": {
            "type": "string",
            "documentation": "The fully qualified URI of the new streaming distribution resource just created. For example: https://cloudfront.amazonaws.com/2010-11-01/streaming-distribution/EGTXBD79H29TRA8.",
            "location": "header",
            "serialized_name": "Location"
          },
          "etag": {
            "type": "string",
            "documentation": "The current version of the streaming distribution created.",
            "location": "header",
            "serialized_name": "ETag"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The Amazon S3 origin server specified does not refer to a valid Amazon S3 bucket.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The origin access identity is not valid or doesn't exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Your request contains more trusted signers than are allowed per distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "One or more of your trusted signers do not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "This operation requires a body. Ensure that the body is present and the Content-Type header is set.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Processing your request would cause you to exceed the maximum number of streaming distributions allowed.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The argument is invalid.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The value of Quantity and the size of Items do not match.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "delete_cloud_front_origin_access_identity2013_05_12": {
      "name": "DeleteCloudFrontOriginAccessIdentity2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/origin-access-identity/cloudfront/{Id}",
      "documentation": "Delete an origin access identity.",
      "input": {
        "type": "structure",
        "documentation": "The request to delete a origin access identity.",
        "members": {
          "id": {
            "type": "string",
            "documentation": "The origin access identity's id.",
            "location": "uri",
            "serialized_name": "Id"
          },
          "if_match": {
            "type": "string",
            "documentation": "The value of the ETag header you received from a previous GET or PUT request. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "If-Match"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The If-Match version is missing or not valid for the distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The specified origin access identity does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The precondition given in one or more of the request-header fields evaluated to false.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "delete_distribution2013_05_12": {
      "name": "DeleteDistribution2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/distribution/{Id}",
      "documentation": "Delete a distribution.",
      "input": {
        "type": "structure",
        "documentation": "The request to delete a distribution.",
        "members": {
          "id": {
            "type": "string",
            "documentation": "The distribution id.",
            "location": "uri",
            "serialized_name": "Id"
          },
          "if_match": {
            "type": "string",
            "documentation": "The value of the ETag header you received when you disabled the distribution. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "If-Match"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The If-Match version is missing or not valid for the distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The specified distribution does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The precondition given in one or more of the request-header fields evaluated to false.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "delete_streaming_distribution2013_05_12": {
      "name": "DeleteStreamingDistribution2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/streaming-distribution/{Id}",
      "documentation": "Delete a streaming distribution.",
      "input": {
        "type": "structure",
        "documentation": "The request to delete a streaming distribution.",
        "members": {
          "id": {
            "type": "string",
            "documentation": "The distribution id.",
            "location": "uri",
            "serialized_name": "Id"
          },
          "if_match": {
            "type": "string",
            "documentation": "The value of the ETag header you received when you disabled the streaming distribution. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "If-Match"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The If-Match version is missing or not valid for the distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The specified streaming distribution does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The precondition given in one or more of the request-header fields evaluated to false.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "get_cloud_front_origin_access_identity2013_05_12": {
      "name": "GetCloudFrontOriginAccessIdentity2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/origin-access-identity/cloudfront/{Id}",
      "documentation": "Get the information about an origin access identity.",
      "input": {
        "type": "structure",
        "documentation": "The request to get an origin access identity's information.",
        "members": {
          "id": {
            "type": "string",
            "documentation": "The identity's id.",
            "location": "uri",
            "serialized_name": "Id"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "cloud_front_origin_access_identity": {
            "type": "structure",
            "documentation": "The origin access identity's information.",
            "serialized_name": "CloudFrontOriginAccessIdentity",
            "metadata": {
              "payload": true
            },
            "members": {
              "id": {
                "type": "string",
                "documentation": "The ID for the origin access identity. For example: E74FTE3AJFJ256A.",
                "serialized_name": "Id"
              },
              "s3_canonical_user_id": {
                "type": "string",
                "documentation": "The Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3.",
                "serialized_name": "S3CanonicalUserId"
              },
              "cloud_front_origin_access_identity_config": {
                "type": "structure",
                "documentation": "The current configuration information for the identity.",
                "serialized_name": "CloudFrontOriginAccessIdentityConfig",
                "members": {
                  "caller_reference": {
                    "type": "string",
                    "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created. If the CallerReference is a value you already sent in a previous request to create an identity, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.",
                    "serialized_name": "CallerReference"
                  },
                  "comment": {
                    "type": "string",
                    "documentation": "Any comments you want to include about the origin access identity.",
                    "serialized_name": "Comment"
                  }
                }
              }
            }
          },
          "etag": {
            "type": "string",
            "documentation": "The current version of the origin access identity's information. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "ETag"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "The specified origin access identity does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "get_cloud_front_origin_access_identity_config2013_05_12": {
      "name": "GetCloudFrontOriginAccessIdentityConfig2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/origin-access-identity/cloudfront/{Id}/config",
      "documentation": "Get the configuration information about an origin access identity.",
      "input": {
        "type": "structure",
        "documentation": "The request to get an origin access identity's configuration.",
        "members": {
          "id": {
            "type": "string",
            "documentation": "The identity's id.",
            "location": "uri",
            "serialized_name": "Id"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "cloud_front_origin_access_identity_config": {
            "type": "structure",
            "documentation": "The origin access identity's configuration information.",
            "serialized_name": "CloudFrontOriginAccessIdentityConfig",
            "metadata": {
              "payload": true
            },
            "members": {
              "caller_reference": {
                "type": "string",
                "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created. If the CallerReference is a value you already sent in a previous request to create an identity, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.",
                "serialized_name": "CallerReference"
              },
              "comment": {
                "type": "string",
                "documentation": "Any comments you want to include about the origin access identity.",
                "serialized_name": "Comment"
              }
            }
          },
          "etag": {
            "type": "string",
            "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "ETag"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "The specified origin access identity does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "get_distribution2013_05_12": {
      "name": "GetDistribution2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/distribution/{Id}",
      "documentation": "Get the information about a distribution.",
      "input": {
        "type": "structure",
        "documentation": "The request to get a distribution's information.",
        "members": {
          "id": {
            "type": "string",
            "documentation": "The distribution's id.",
            "location": "uri",
            "serialized_name": "Id"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "distribution": {
            "type": "structure",
            "documentation": "The distribution's information.",
            "serialized_name": "Distribution",
            "metadata": {
              "payload": true
            },
            "members": {
              "id": {
                "type": "string",
                "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                "serialized_name": "Id"
              },
              "status": {
                "type": "string",
                "documentation": "This response element indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                "serialized_name": "Status"
              },
              "last_modified_time": {
                "type": "timestamp",
                "documentation": "The date and time the distribution was last modified.",
                "serialized_name": "LastModifiedTime"
              },
              "in_progress_invalidation_batches": {
                "type": "integer",
                "documentation": "The number of invalidation batches currently in progress.",
                "serialized_name": "InProgressInvalidationBatches"
              },
              "domain_name": {
                "type": "string",
                "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                "serialized_name": "DomainName"
              },
              "active_trusted_signers": {
                "type": "structure",
                "documentation": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs.",
                "serialized_name": "ActiveTrustedSigners",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Each active trusted signer.",
                    "serialized_name": "Enabled"
                  },
                  "quantity": {
                    "type": "integer",
                    "documentation": "The number of unique trusted signers included in all cache behaviors. For example, if three cache behaviors all list the same three AWS accounts, the value of Quantity for ActiveTrustedSigners will be 3.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "A complex type that contains one Signer complex type for each unique trusted signer that is specified in the TrustedSigners complex type, including trusted signers in the default cache behavior and in all of the other cache behaviors.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "structure",
                      "documentation": "A complex type that lists the AWS accounts that were included in the TrustedSigners complex type, as well as their active CloudFront key pair IDs, if any.",
                      "serialized_name": "Signer",
                      "members": {
                        "aws_account_number": {
                          "type": "string",
                          "documentation": "Specifies an AWS account that can create signed URLs. Values: self, which indicates that the AWS account that was used to create the distribution can created signed URLs, or an AWS account number. Omit the dashes in the account number.",
                          "serialized_name": "AwsAccountNumber"
                        },
                        "key_pair_ids": {
                          "type": "structure",
                          "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                          "serialized_name": "KeyPairIds",
                          "members": {
                            "quantity": {
                              "type": "integer",
                              "documentation": "The number of active CloudFront key pairs for AwsAccountNumber.",
                              "serialized_name": "Quantity"
                            },
                            "items": {
                              "type": "list",
                              "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                              "serialized_name": "Items",
                              "members": {
                                "type": "string",
                                "serialized_name": "KeyPairId"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "distribution_config": {
                "type": "structure",
                "documentation": "The current configuration information for the distribution.",
                "serialized_name": "DistributionConfig",
                "members": {
                  "caller_reference": {
                    "type": "string",
                    "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the DistributionConfig object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create a distribution, and the content of the DistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of the DistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                    "serialized_name": "CallerReference"
                  },
                  "aliases": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                    "serialized_name": "Aliases",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of CNAMEs, if any, for this distribution.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "CNAME"
                        }
                      }
                    }
                  },
                  "default_root_object": {
                    "type": "string",
                    "documentation": "The object that you want CloudFront to return (for example, index.html) when an end user requests the root URL for your distribution (http://www.example.com) instead of an object in your distribution (http://www.example.com/index.html). Specifying a default root object avoids exposing the contents of your distribution. If you don't want to specify a default root object when you create a distribution, include an empty DefaultRootObject element. To delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element. To replace the default root object, update the distribution configuration and specify the new object.",
                    "serialized_name": "DefaultRootObject"
                  },
                  "origins": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about origins for this distribution.",
                    "serialized_name": "Origins",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of origins for this distribution.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "A complex type that contains origins for this distribution.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "structure",
                          "documentation": "A complex type that describes the Amazon S3 bucket or the HTTP server (for example, a web server) from which CloudFront gets your files.You must create at least one origin.",
                          "serialized_name": "Origin",
                          "members": {
                            "id": {
                              "type": "string",
                              "documentation": "A unique identifier for the origin. The value of Id must be unique within the distribution. You use the value of Id when you create a cache behavior. The Id identifies the origin that CloudFront routes a request to when the request matches the path pattern for that cache behavior.",
                              "serialized_name": "Id"
                            },
                            "domain_name": {
                              "type": "string",
                              "documentation": "Amazon S3 origins: The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, myawsbucket.s3.amazonaws.com. Custom origins: The DNS domain name for the HTTP server from which you want CloudFront to get objects for this origin, for example, www.example.com.",
                              "serialized_name": "DomainName"
                            },
                            "s3_origin_config": {
                              "type": "structure",
                              "documentation": "A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin, use the CustomOriginConfig element instead.",
                              "serialized_name": "S3OriginConfig",
                              "members": {
                                "origin_access_identity": {
                                  "type": "string",
                                  "documentation": "The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that end users can only access objects in an Amazon S3 bucket through CloudFront. If you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity.",
                                  "serialized_name": "OriginAccessIdentity"
                                }
                              }
                            },
                            "custom_origin_config": {
                              "type": "structure",
                              "documentation": "A complex type that contains information about a custom origin. If the origin is an Amazon S3 bucket, use the S3OriginConfig element instead.",
                              "serialized_name": "CustomOriginConfig",
                              "members": {
                                "http_port": {
                                  "type": "integer",
                                  "documentation": "The HTTP port the custom origin listens on.",
                                  "serialized_name": "HTTPPort"
                                },
                                "https_port": {
                                  "type": "integer",
                                  "documentation": "The HTTPS port the custom origin listens on.",
                                  "serialized_name": "HTTPSPort"
                                },
                                "origin_protocol_policy": {
                                  "type": "string",
                                  "documentation": "The origin protocol policy to apply to your origin.",
                                  "serialized_name": "OriginProtocolPolicy",
                                  "enum": [
                                    "http-only",
                                    "match-viewer"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "default_cache_behavior": {
                    "type": "structure",
                    "documentation": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior.",
                    "serialized_name": "DefaultCacheBehavior",
                    "members": {
                      "target_origin_id": {
                        "type": "string",
                        "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                        "serialized_name": "TargetOriginId"
                      },
                      "forwarded_values": {
                        "type": "structure",
                        "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                        "serialized_name": "ForwardedValues",
                        "members": {
                          "query_string": {
                            "type": "boolean",
                            "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                            "serialized_name": "QueryString"
                          },
                          "cookies": {
                            "type": "structure",
                            "documentation": "A complex type that specifies how CloudFront handles cookies.",
                            "serialized_name": "Cookies",
                            "members": {
                              "forward": {
                                "type": "string",
                                "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                                "serialized_name": "Forward",
                                "enum": [
                                  "none",
                                  "whitelist",
                                  "all"
                                ]
                              },
                              "whitelisted_names": {
                                "type": "structure",
                                "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                                "serialized_name": "WhitelistedNames",
                                "members": {
                                  "quantity": {
                                    "type": "integer",
                                    "documentation": "The number of whitelisted cookies for this cache behavior.",
                                    "serialized_name": "Quantity"
                                  },
                                  "items": {
                                    "type": "list",
                                    "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                    "serialized_name": "Items",
                                    "members": {
                                      "type": "string",
                                      "serialized_name": "Name"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "trusted_signers": {
                        "type": "structure",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "serialized_name": "TrustedSigners",
                        "members": {
                          "enabled": {
                            "type": "boolean",
                            "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                            "serialized_name": "Enabled"
                          },
                          "quantity": {
                            "type": "integer",
                            "documentation": "The number of trusted signers for this cache behavior.",
                            "serialized_name": "Quantity"
                          },
                          "items": {
                            "type": "list",
                            "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                            "serialized_name": "Items",
                            "members": {
                              "type": "string",
                              "serialized_name": "AwsAccountNumber"
                            }
                          }
                        }
                      },
                      "viewer_protocol_policy": {
                        "type": "string",
                        "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                        "serialized_name": "ViewerProtocolPolicy",
                        "enum": [
                          "allow-all",
                          "https-only"
                        ]
                      },
                      "min_ttl": {
                        "type": "integer",
                        "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                        "serialized_name": "MinTTL"
                      }
                    }
                  },
                  "cache_behaviors": {
                    "type": "structure",
                    "documentation": "A complex type that contains zero or more CacheBehavior elements.",
                    "serialized_name": "CacheBehaviors",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of cache behaviors for this distribution.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains cache behaviors for this distribution. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "structure",
                          "documentation": "A complex type that describes how CloudFront processes requests. You can create up to 10 cache behaviors.You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to distribute objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin will never be used. If you don't want to specify any cache behaviors, include only an empty CacheBehaviors element. Don't include an empty CacheBehavior element, or CloudFront returns a MalformedXML error. To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element. To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.",
                          "serialized_name": "CacheBehavior",
                          "members": {
                            "path_pattern": {
                              "type": "string",
                              "documentation": "The pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to. When CloudFront receives an end-user request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution. The path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.",
                              "serialized_name": "PathPattern"
                            },
                            "target_origin_id": {
                              "type": "string",
                              "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                              "serialized_name": "TargetOriginId"
                            },
                            "forwarded_values": {
                              "type": "structure",
                              "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                              "serialized_name": "ForwardedValues",
                              "members": {
                                "query_string": {
                                  "type": "boolean",
                                  "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                                  "serialized_name": "QueryString"
                                },
                                "cookies": {
                                  "type": "structure",
                                  "documentation": "A complex type that specifies how CloudFront handles cookies.",
                                  "serialized_name": "Cookies",
                                  "members": {
                                    "forward": {
                                      "type": "string",
                                      "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                                      "serialized_name": "Forward",
                                      "enum": [
                                        "none",
                                        "whitelist",
                                        "all"
                                      ]
                                    },
                                    "whitelisted_names": {
                                      "type": "structure",
                                      "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                                      "serialized_name": "WhitelistedNames",
                                      "members": {
                                        "quantity": {
                                          "type": "integer",
                                          "documentation": "The number of whitelisted cookies for this cache behavior.",
                                          "serialized_name": "Quantity"
                                        },
                                        "items": {
                                          "type": "list",
                                          "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                          "serialized_name": "Items",
                                          "members": {
                                            "type": "string",
                                            "serialized_name": "Name"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "trusted_signers": {
                              "type": "structure",
                              "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                              "serialized_name": "TrustedSigners",
                              "members": {
                                "enabled": {
                                  "type": "boolean",
                                  "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                                  "serialized_name": "Enabled"
                                },
                                "quantity": {
                                  "type": "integer",
                                  "documentation": "The number of trusted signers for this cache behavior.",
                                  "serialized_name": "Quantity"
                                },
                                "items": {
                                  "type": "list",
                                  "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                                  "serialized_name": "Items",
                                  "members": {
                                    "type": "string",
                                    "serialized_name": "AwsAccountNumber"
                                  }
                                }
                              }
                            },
                            "viewer_protocol_policy": {
                              "type": "string",
                              "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                              "serialized_name": "ViewerProtocolPolicy",
                              "enum": [
                                "allow-all",
                                "https-only"
                              ]
                            },
                            "min_ttl": {
                              "type": "integer",
                              "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                              "serialized_name": "MinTTL"
                            }
                          }
                        }
                      }
                    }
                  },
                  "comment": {
                    "type": "string",
                    "documentation": "Any comments you want to include about the distribution.",
                    "serialized_name": "Comment"
                  },
                  "logging": {
                    "type": "structure",
                    "documentation": "A complex type that controls whether access logs are written for the distribution.",
                    "serialized_name": "Logging",
                    "members": {
                      "enabled": {
                        "type": "boolean",
                        "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket, prefix and IncludeCookies, the values are automatically deleted.",
                        "serialized_name": "Enabled"
                      },
                      "include_cookies": {
                        "type": "boolean",
                        "documentation": "Specifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you do not want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies.",
                        "serialized_name": "IncludeCookies"
                      },
                      "bucket": {
                        "type": "string",
                        "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                        "serialized_name": "Bucket"
                      },
                      "prefix": {
                        "type": "string",
                        "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                        "serialized_name": "Prefix"
                      }
                    }
                  },
                  "price_class": {
                    "type": "string",
                    "documentation": "A complex type that contains information about price class for this distribution.",
                    "serialized_name": "PriceClass",
                    "enum": [
                      "PriceClass_100",
                      "PriceClass_200",
                      "PriceClass_All"
                    ]
                  },
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                    "serialized_name": "Enabled"
                  },
                  "viewer_certificate": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about viewer certificates for this distribution.",
                    "serialized_name": "ViewerCertificate",
                    "members": {
                      "iam_certificate_id": {
                        "type": "string",
                        "documentation": "The IAM certificate identifier of the custom viewer certificate for this distribution.",
                        "serialized_name": "IAMCertificateId"
                      },
                      "cloud_front_default_certificate": {
                        "type": "boolean",
                        "documentation": "Set to true if you want to use the default *.cloudfront.net viewer certificate for this distribution. Omit this value if you are setting an IAMCertificateId.",
                        "serialized_name": "CloudFrontDefaultCertificate"
                      }
                    }
                  }
                }
              }
            }
          },
          "etag": {
            "type": "string",
            "documentation": "The current version of the distribution's information. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "ETag"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "The specified distribution does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "get_distribution_config2013_05_12": {
      "name": "GetDistributionConfig2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/distribution/{Id}/config",
      "documentation": "Get the configuration information about a distribution.",
      "input": {
        "type": "structure",
        "documentation": "The request to get a distribution configuration.",
        "members": {
          "id": {
            "type": "string",
            "documentation": "The distribution's id.",
            "location": "uri",
            "serialized_name": "Id"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "distribution_config": {
            "type": "structure",
            "documentation": "The distribution's configuration information.",
            "serialized_name": "DistributionConfig",
            "metadata": {
              "payload": true
            },
            "members": {
              "caller_reference": {
                "type": "string",
                "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the DistributionConfig object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create a distribution, and the content of the DistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of the DistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                "serialized_name": "CallerReference"
              },
              "aliases": {
                "type": "structure",
                "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                "serialized_name": "Aliases",
                "members": {
                  "quantity": {
                    "type": "integer",
                    "documentation": "The number of CNAMEs, if any, for this distribution.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "string",
                      "serialized_name": "CNAME"
                    }
                  }
                }
              },
              "default_root_object": {
                "type": "string",
                "documentation": "The object that you want CloudFront to return (for example, index.html) when an end user requests the root URL for your distribution (http://www.example.com) instead of an object in your distribution (http://www.example.com/index.html). Specifying a default root object avoids exposing the contents of your distribution. If you don't want to specify a default root object when you create a distribution, include an empty DefaultRootObject element. To delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element. To replace the default root object, update the distribution configuration and specify the new object.",
                "serialized_name": "DefaultRootObject"
              },
              "origins": {
                "type": "structure",
                "documentation": "A complex type that contains information about origins for this distribution.",
                "serialized_name": "Origins",
                "members": {
                  "quantity": {
                    "type": "integer",
                    "documentation": "The number of origins for this distribution.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "A complex type that contains origins for this distribution.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "structure",
                      "documentation": "A complex type that describes the Amazon S3 bucket or the HTTP server (for example, a web server) from which CloudFront gets your files.You must create at least one origin.",
                      "serialized_name": "Origin",
                      "members": {
                        "id": {
                          "type": "string",
                          "documentation": "A unique identifier for the origin. The value of Id must be unique within the distribution. You use the value of Id when you create a cache behavior. The Id identifies the origin that CloudFront routes a request to when the request matches the path pattern for that cache behavior.",
                          "serialized_name": "Id"
                        },
                        "domain_name": {
                          "type": "string",
                          "documentation": "Amazon S3 origins: The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, myawsbucket.s3.amazonaws.com. Custom origins: The DNS domain name for the HTTP server from which you want CloudFront to get objects for this origin, for example, www.example.com.",
                          "serialized_name": "DomainName"
                        },
                        "s3_origin_config": {
                          "type": "structure",
                          "documentation": "A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin, use the CustomOriginConfig element instead.",
                          "serialized_name": "S3OriginConfig",
                          "members": {
                            "origin_access_identity": {
                              "type": "string",
                              "documentation": "The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that end users can only access objects in an Amazon S3 bucket through CloudFront. If you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity.",
                              "serialized_name": "OriginAccessIdentity"
                            }
                          }
                        },
                        "custom_origin_config": {
                          "type": "structure",
                          "documentation": "A complex type that contains information about a custom origin. If the origin is an Amazon S3 bucket, use the S3OriginConfig element instead.",
                          "serialized_name": "CustomOriginConfig",
                          "members": {
                            "http_port": {
                              "type": "integer",
                              "documentation": "The HTTP port the custom origin listens on.",
                              "serialized_name": "HTTPPort"
                            },
                            "https_port": {
                              "type": "integer",
                              "documentation": "The HTTPS port the custom origin listens on.",
                              "serialized_name": "HTTPSPort"
                            },
                            "origin_protocol_policy": {
                              "type": "string",
                              "documentation": "The origin protocol policy to apply to your origin.",
                              "serialized_name": "OriginProtocolPolicy",
                              "enum": [
                                "http-only",
                                "match-viewer"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "default_cache_behavior": {
                "type": "structure",
                "documentation": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior.",
                "serialized_name": "DefaultCacheBehavior",
                "members": {
                  "target_origin_id": {
                    "type": "string",
                    "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                    "serialized_name": "TargetOriginId"
                  },
                  "forwarded_values": {
                    "type": "structure",
                    "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                    "serialized_name": "ForwardedValues",
                    "members": {
                      "query_string": {
                        "type": "boolean",
                        "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                        "serialized_name": "QueryString"
                      },
                      "cookies": {
                        "type": "structure",
                        "documentation": "A complex type that specifies how CloudFront handles cookies.",
                        "serialized_name": "Cookies",
                        "members": {
                          "forward": {
                            "type": "string",
                            "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                            "serialized_name": "Forward",
                            "enum": [
                              "none",
                              "whitelist",
                              "all"
                            ]
                          },
                          "whitelisted_names": {
                            "type": "structure",
                            "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                            "serialized_name": "WhitelistedNames",
                            "members": {
                              "quantity": {
                                "type": "integer",
                                "documentation": "The number of whitelisted cookies for this cache behavior.",
                                "serialized_name": "Quantity"
                              },
                              "items": {
                                "type": "list",
                                "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                "serialized_name": "Items",
                                "members": {
                                  "type": "string",
                                  "serialized_name": "Name"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "trusted_signers": {
                    "type": "structure",
                    "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                    "serialized_name": "TrustedSigners",
                    "members": {
                      "enabled": {
                        "type": "boolean",
                        "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                        "serialized_name": "Enabled"
                      },
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of trusted signers for this cache behavior.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "AwsAccountNumber"
                        }
                      }
                    }
                  },
                  "viewer_protocol_policy": {
                    "type": "string",
                    "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                    "serialized_name": "ViewerProtocolPolicy",
                    "enum": [
                      "allow-all",
                      "https-only"
                    ]
                  },
                  "min_ttl": {
                    "type": "integer",
                    "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                    "serialized_name": "MinTTL"
                  }
                }
              },
              "cache_behaviors": {
                "type": "structure",
                "documentation": "A complex type that contains zero or more CacheBehavior elements.",
                "serialized_name": "CacheBehaviors",
                "members": {
                  "quantity": {
                    "type": "integer",
                    "documentation": "The number of cache behaviors for this distribution.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "Optional: A complex type that contains cache behaviors for this distribution. If Quantity is 0, you can omit Items.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "structure",
                      "documentation": "A complex type that describes how CloudFront processes requests. You can create up to 10 cache behaviors.You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to distribute objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin will never be used. If you don't want to specify any cache behaviors, include only an empty CacheBehaviors element. Don't include an empty CacheBehavior element, or CloudFront returns a MalformedXML error. To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element. To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.",
                      "serialized_name": "CacheBehavior",
                      "members": {
                        "path_pattern": {
                          "type": "string",
                          "documentation": "The pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to. When CloudFront receives an end-user request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution. The path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.",
                          "serialized_name": "PathPattern"
                        },
                        "target_origin_id": {
                          "type": "string",
                          "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                          "serialized_name": "TargetOriginId"
                        },
                        "forwarded_values": {
                          "type": "structure",
                          "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                          "serialized_name": "ForwardedValues",
                          "members": {
                            "query_string": {
                              "type": "boolean",
                              "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                              "serialized_name": "QueryString"
                            },
                            "cookies": {
                              "type": "structure",
                              "documentation": "A complex type that specifies how CloudFront handles cookies.",
                              "serialized_name": "Cookies",
                              "members": {
                                "forward": {
                                  "type": "string",
                                  "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                                  "serialized_name": "Forward",
                                  "enum": [
                                    "none",
                                    "whitelist",
                                    "all"
                                  ]
                                },
                                "whitelisted_names": {
                                  "type": "structure",
                                  "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                                  "serialized_name": "WhitelistedNames",
                                  "members": {
                                    "quantity": {
                                      "type": "integer",
                                      "documentation": "The number of whitelisted cookies for this cache behavior.",
                                      "serialized_name": "Quantity"
                                    },
                                    "items": {
                                      "type": "list",
                                      "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                      "serialized_name": "Items",
                                      "members": {
                                        "type": "string",
                                        "serialized_name": "Name"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trusted_signers": {
                          "type": "structure",
                          "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                          "serialized_name": "TrustedSigners",
                          "members": {
                            "enabled": {
                              "type": "boolean",
                              "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                              "serialized_name": "Enabled"
                            },
                            "quantity": {
                              "type": "integer",
                              "documentation": "The number of trusted signers for this cache behavior.",
                              "serialized_name": "Quantity"
                            },
                            "items": {
                              "type": "list",
                              "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                              "serialized_name": "Items",
                              "members": {
                                "type": "string",
                                "serialized_name": "AwsAccountNumber"
                              }
                            }
                          }
                        },
                        "viewer_protocol_policy": {
                          "type": "string",
                          "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                          "serialized_name": "ViewerProtocolPolicy",
                          "enum": [
                            "allow-all",
                            "https-only"
                          ]
                        },
                        "min_ttl": {
                          "type": "integer",
                          "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                          "serialized_name": "MinTTL"
                        }
                      }
                    }
                  }
                }
              },
              "comment": {
                "type": "string",
                "documentation": "Any comments you want to include about the distribution.",
                "serialized_name": "Comment"
              },
              "logging": {
                "type": "structure",
                "documentation": "A complex type that controls whether access logs are written for the distribution.",
                "serialized_name": "Logging",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket, prefix and IncludeCookies, the values are automatically deleted.",
                    "serialized_name": "Enabled"
                  },
                  "include_cookies": {
                    "type": "boolean",
                    "documentation": "Specifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you do not want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies.",
                    "serialized_name": "IncludeCookies"
                  },
                  "bucket": {
                    "type": "string",
                    "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                    "serialized_name": "Bucket"
                  },
                  "prefix": {
                    "type": "string",
                    "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                    "serialized_name": "Prefix"
                  }
                }
              },
              "price_class": {
                "type": "string",
                "documentation": "A complex type that contains information about price class for this distribution.",
                "serialized_name": "PriceClass",
                "enum": [
                  "PriceClass_100",
                  "PriceClass_200",
                  "PriceClass_All"
                ]
              },
              "enabled": {
                "type": "boolean",
                "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                "serialized_name": "Enabled"
              },
              "viewer_certificate": {
                "type": "structure",
                "documentation": "A complex type that contains information about viewer certificates for this distribution.",
                "serialized_name": "ViewerCertificate",
                "members": {
                  "iam_certificate_id": {
                    "type": "string",
                    "documentation": "The IAM certificate identifier of the custom viewer certificate for this distribution.",
                    "serialized_name": "IAMCertificateId"
                  },
                  "cloud_front_default_certificate": {
                    "type": "boolean",
                    "documentation": "Set to true if you want to use the default *.cloudfront.net viewer certificate for this distribution. Omit this value if you are setting an IAMCertificateId.",
                    "serialized_name": "CloudFrontDefaultCertificate"
                  }
                }
              }
            }
          },
          "etag": {
            "type": "string",
            "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "ETag"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "The specified distribution does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "get_invalidation2013_05_12": {
      "name": "GetInvalidation2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/distribution/{DistributionId}/invalidation/{Id}",
      "documentation": "Get the information about an invalidation.",
      "input": {
        "type": "structure",
        "documentation": "The request to get an invalidation's information.",
        "members": {
          "distribution_id": {
            "type": "string",
            "required": true,
            "documentation": "The distribution's id.",
            "location": "uri",
            "serialized_name": "DistributionId"
          },
          "id": {
            "type": "string",
            "required": true,
            "documentation": "The invalidation's id.",
            "location": "uri",
            "serialized_name": "Id"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "invalidation": {
            "type": "structure",
            "documentation": "The invalidation's information.",
            "serialized_name": "Invalidation",
            "metadata": {
              "payload": true
            },
            "members": {
              "id": {
                "type": "string",
                "documentation": "The identifier for the invalidation request. For example: IDFDVBD632BHDS5.",
                "serialized_name": "Id"
              },
              "status": {
                "type": "string",
                "documentation": "The status of the invalidation request. When the invalidation batch is finished, the status is Completed.",
                "serialized_name": "Status"
              },
              "create_time": {
                "type": "timestamp",
                "documentation": "The date and time the invalidation request was first made.",
                "serialized_name": "CreateTime"
              },
              "invalidation_batch": {
                "type": "structure",
                "documentation": "The current invalidation information for the batch request.",
                "serialized_name": "InvalidationBatch",
                "members": {
                  "paths": {
                    "type": "structure",
                    "documentation": "The path of the object to invalidate. The path is relative to the distribution and must begin with a slash (/). You must enclose each invalidation object with the Path element tags. If the path includes non-ASCII characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt), URL encode those characters. Do not URL encode any other characters in the path, or CloudFront will not invalidate the old version of the updated object.",
                    "serialized_name": "Paths",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of objects that you want to invalidate.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "A complex type that contains a list of the objects that you want to invalidate.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "Path"
                        }
                      }
                    }
                  },
                  "caller_reference": {
                    "type": "string",
                    "documentation": "A unique name that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the Path object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create an invalidation batch, and the content of each Path element is identical to the original request, the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of any Path is different from the original request, CloudFront returns an InvalidationBatchAlreadyExists error.",
                    "serialized_name": "CallerReference"
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "The specified invalidation does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The specified distribution does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "get_streaming_distribution2013_05_12": {
      "name": "GetStreamingDistribution2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/streaming-distribution/{Id}",
      "documentation": "Get the information about a streaming distribution.",
      "input": {
        "type": "structure",
        "documentation": "The request to get a streaming distribution's information.",
        "members": {
          "id": {
            "type": "string",
            "documentation": "The streaming distribution's id.",
            "location": "uri",
            "serialized_name": "Id"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "streaming_distribution": {
            "type": "structure",
            "documentation": "The streaming distribution's information.",
            "serialized_name": "StreamingDistribution",
            "metadata": {
              "payload": true
            },
            "members": {
              "id": {
                "type": "string",
                "documentation": "The identifier for the streaming distribution. For example: EGTXBD79H29TRA8.",
                "serialized_name": "Id"
              },
              "status": {
                "type": "string",
                "documentation": "The current status of the streaming distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                "serialized_name": "Status"
              },
              "last_modified_time": {
                "type": "timestamp",
                "documentation": "The date and time the distribution was last modified.",
                "serialized_name": "LastModifiedTime"
              },
              "domain_name": {
                "type": "string",
                "documentation": "The domain name corresponding to the streaming distribution. For example: s5c39gqb8ow64r.cloudfront.net.",
                "serialized_name": "DomainName"
              },
              "active_trusted_signers": {
                "type": "structure",
                "documentation": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs.",
                "serialized_name": "ActiveTrustedSigners",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Each active trusted signer.",
                    "serialized_name": "Enabled"
                  },
                  "quantity": {
                    "type": "integer",
                    "documentation": "The number of unique trusted signers included in all cache behaviors. For example, if three cache behaviors all list the same three AWS accounts, the value of Quantity for ActiveTrustedSigners will be 3.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "A complex type that contains one Signer complex type for each unique trusted signer that is specified in the TrustedSigners complex type, including trusted signers in the default cache behavior and in all of the other cache behaviors.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "structure",
                      "documentation": "A complex type that lists the AWS accounts that were included in the TrustedSigners complex type, as well as their active CloudFront key pair IDs, if any.",
                      "serialized_name": "Signer",
                      "members": {
                        "aws_account_number": {
                          "type": "string",
                          "documentation": "Specifies an AWS account that can create signed URLs. Values: self, which indicates that the AWS account that was used to create the distribution can created signed URLs, or an AWS account number. Omit the dashes in the account number.",
                          "serialized_name": "AwsAccountNumber"
                        },
                        "key_pair_ids": {
                          "type": "structure",
                          "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                          "serialized_name": "KeyPairIds",
                          "members": {
                            "quantity": {
                              "type": "integer",
                              "documentation": "The number of active CloudFront key pairs for AwsAccountNumber.",
                              "serialized_name": "Quantity"
                            },
                            "items": {
                              "type": "list",
                              "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                              "serialized_name": "Items",
                              "members": {
                                "type": "string",
                                "serialized_name": "KeyPairId"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "streaming_distribution_config": {
                "type": "structure",
                "documentation": "The current configuration information for the streaming distribution.",
                "serialized_name": "StreamingDistributionConfig",
                "members": {
                  "caller_reference": {
                    "type": "string",
                    "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the StreamingDistributionConfig object), a new streaming distribution is created. If the CallerReference is a value you already sent in a previous request to create a streaming distribution, and the content of the StreamingDistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a streaming distribution but the content of the StreamingDistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                    "serialized_name": "CallerReference"
                  },
                  "s3_origin": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
                    "serialized_name": "S3Origin",
                    "members": {
                      "domain_name": {
                        "type": "string",
                        "documentation": "The DNS name of the S3 origin.",
                        "serialized_name": "DomainName"
                      },
                      "origin_access_identity": {
                        "type": "string",
                        "documentation": "Your S3 origin's origin access identity.",
                        "serialized_name": "OriginAccessIdentity"
                      }
                    }
                  },
                  "aliases": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.",
                    "serialized_name": "Aliases",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of CNAMEs, if any, for this distribution.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "CNAME"
                        }
                      }
                    }
                  },
                  "comment": {
                    "type": "string",
                    "documentation": "Any comments you want to include about the streaming distribution.",
                    "serialized_name": "Comment"
                  },
                  "logging": {
                    "type": "structure",
                    "documentation": "A complex type that controls whether access logs are written for the streaming distribution.",
                    "serialized_name": "Logging",
                    "members": {
                      "enabled": {
                        "type": "boolean",
                        "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix, the values are automatically deleted.",
                        "serialized_name": "Enabled"
                      },
                      "bucket": {
                        "type": "string",
                        "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                        "serialized_name": "Bucket"
                      },
                      "prefix": {
                        "type": "string",
                        "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                        "serialized_name": "Prefix"
                      }
                    }
                  },
                  "trusted_signers": {
                    "type": "structure",
                    "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                    "serialized_name": "TrustedSigners",
                    "members": {
                      "enabled": {
                        "type": "boolean",
                        "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                        "serialized_name": "Enabled"
                      },
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of trusted signers for this cache behavior.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "AwsAccountNumber"
                        }
                      }
                    }
                  },
                  "price_class": {
                    "type": "string",
                    "documentation": "A complex type that contains information about price class for this streaming distribution.",
                    "serialized_name": "PriceClass",
                    "enum": [
                      "PriceClass_100",
                      "PriceClass_200",
                      "PriceClass_All"
                    ]
                  },
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Whether the streaming distribution is enabled to accept end user requests for content.",
                    "serialized_name": "Enabled"
                  }
                }
              }
            }
          },
          "etag": {
            "type": "string",
            "documentation": "The current version of the streaming distribution's information. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "ETag"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "The specified streaming distribution does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "get_streaming_distribution_config2013_05_12": {
      "name": "GetStreamingDistributionConfig2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/streaming-distribution/{Id}/config",
      "documentation": "Get the configuration information about a streaming distribution.",
      "input": {
        "type": "structure",
        "documentation": "To request to get a streaming distribution configuration.",
        "members": {
          "id": {
            "type": "string",
            "documentation": "The streaming distribution's id.",
            "location": "uri",
            "serialized_name": "Id"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "streaming_distribution_config": {
            "type": "structure",
            "documentation": "The streaming distribution's configuration information.",
            "serialized_name": "StreamingDistributionConfig",
            "metadata": {
              "payload": true
            },
            "members": {
              "caller_reference": {
                "type": "string",
                "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the StreamingDistributionConfig object), a new streaming distribution is created. If the CallerReference is a value you already sent in a previous request to create a streaming distribution, and the content of the StreamingDistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a streaming distribution but the content of the StreamingDistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                "serialized_name": "CallerReference"
              },
              "s3_origin": {
                "type": "structure",
                "documentation": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
                "serialized_name": "S3Origin",
                "members": {
                  "domain_name": {
                    "type": "string",
                    "documentation": "The DNS name of the S3 origin.",
                    "serialized_name": "DomainName"
                  },
                  "origin_access_identity": {
                    "type": "string",
                    "documentation": "Your S3 origin's origin access identity.",
                    "serialized_name": "OriginAccessIdentity"
                  }
                }
              },
              "aliases": {
                "type": "structure",
                "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.",
                "serialized_name": "Aliases",
                "members": {
                  "quantity": {
                    "type": "integer",
                    "documentation": "The number of CNAMEs, if any, for this distribution.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "string",
                      "serialized_name": "CNAME"
                    }
                  }
                }
              },
              "comment": {
                "type": "string",
                "documentation": "Any comments you want to include about the streaming distribution.",
                "serialized_name": "Comment"
              },
              "logging": {
                "type": "structure",
                "documentation": "A complex type that controls whether access logs are written for the streaming distribution.",
                "serialized_name": "Logging",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix, the values are automatically deleted.",
                    "serialized_name": "Enabled"
                  },
                  "bucket": {
                    "type": "string",
                    "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                    "serialized_name": "Bucket"
                  },
                  "prefix": {
                    "type": "string",
                    "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                    "serialized_name": "Prefix"
                  }
                }
              },
              "trusted_signers": {
                "type": "structure",
                "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                "serialized_name": "TrustedSigners",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                    "serialized_name": "Enabled"
                  },
                  "quantity": {
                    "type": "integer",
                    "documentation": "The number of trusted signers for this cache behavior.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "string",
                      "serialized_name": "AwsAccountNumber"
                    }
                  }
                }
              },
              "price_class": {
                "type": "string",
                "documentation": "A complex type that contains information about price class for this streaming distribution.",
                "serialized_name": "PriceClass",
                "enum": [
                  "PriceClass_100",
                  "PriceClass_200",
                  "PriceClass_All"
                ]
              },
              "enabled": {
                "type": "boolean",
                "documentation": "Whether the streaming distribution is enabled to accept end user requests for content.",
                "serialized_name": "Enabled"
              }
            }
          },
          "etag": {
            "type": "string",
            "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "ETag"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "The specified streaming distribution does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "list_cloud_front_origin_access_identities2013_05_12": {
      "name": "ListCloudFrontOriginAccessIdentities2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/origin-access-identity/cloudfront?Marker={Marker}&MaxItems={MaxItems}",
      "documentation": "List origin access identities.",
      "input": {
        "type": "structure",
        "documentation": "The request to list origin access identities.",
        "members": {
          "marker": {
            "type": "string",
            "documentation": "Use this when paginating results to indicate where to begin in your list of origin access identities. The results include identities in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response (which is also the ID of the last identity on that page).",
            "location": "uri",
            "serialized_name": "Marker"
          },
          "max_items": {
            "type": "string",
            "documentation": "The maximum number of origin access identities you want in the response body.",
            "location": "uri",
            "serialized_name": "MaxItems"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "cloud_front_origin_access_identity_list": {
            "type": "structure",
            "documentation": "The CloudFrontOriginAccessIdentityList type.",
            "serialized_name": "CloudFrontOriginAccessIdentityList",
            "metadata": {
              "payload": true
            },
            "members": {
              "marker": {
                "type": "string",
                "documentation": "The value you provided for the Marker request parameter.",
                "serialized_name": "Marker"
              },
              "next_marker": {
                "type": "string",
                "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your origin access identities where they left off.",
                "serialized_name": "NextMarker"
              },
              "max_items": {
                "type": "integer",
                "documentation": "The value you provided for the MaxItems request parameter.",
                "serialized_name": "MaxItems"
              },
              "is_truncated": {
                "type": "boolean",
                "documentation": "A flag that indicates whether more origin access identities remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more items in the list.",
                "serialized_name": "IsTruncated"
              },
              "quantity": {
                "type": "integer",
                "documentation": "The number of CloudFront origin access identities that were created by the current AWS account.",
                "serialized_name": "Quantity"
              },
              "items": {
                "type": "list",
                "documentation": "A complex type that contains one CloudFrontOriginAccessIdentitySummary element for each origin access identity that was created by the current AWS account.",
                "serialized_name": "Items",
                "members": {
                  "type": "structure",
                  "documentation": "Summary of the information about a CloudFront origin access identity.",
                  "serialized_name": "CloudFrontOriginAccessIdentitySummary",
                  "members": {
                    "id": {
                      "type": "string",
                      "documentation": "The ID for the origin access identity. For example: E74FTE3AJFJ256A.",
                      "serialized_name": "Id"
                    },
                    "s3_canonical_user_id": {
                      "type": "string",
                      "documentation": "The Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3.",
                      "serialized_name": "S3CanonicalUserId"
                    },
                    "comment": {
                      "type": "string",
                      "documentation": "The comment for this origin access identity, as originally specified when created.",
                      "serialized_name": "Comment"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "The argument is invalid.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "list_distributions2013_05_12": {
      "name": "ListDistributions2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/distribution?Marker={Marker}&MaxItems={MaxItems}",
      "documentation": "List distributions.",
      "input": {
        "type": "structure",
        "documentation": "The request to list your distributions.",
        "members": {
          "marker": {
            "type": "string",
            "documentation": "Use this when paginating results to indicate where to begin in your list of distributions. The results include distributions in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response (which is also the ID of the last distribution on that page).",
            "location": "uri",
            "serialized_name": "Marker"
          },
          "max_items": {
            "type": "string",
            "documentation": "The maximum number of distributions you want in the response body.",
            "location": "uri",
            "serialized_name": "MaxItems"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "distribution_list": {
            "type": "structure",
            "documentation": "The DistributionList type.",
            "serialized_name": "DistributionList",
            "metadata": {
              "payload": true
            },
            "members": {
              "marker": {
                "type": "string",
                "documentation": "The value you provided for the Marker request parameter.",
                "serialized_name": "Marker"
              },
              "next_marker": {
                "type": "string",
                "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your distributions where they left off.",
                "serialized_name": "NextMarker"
              },
              "max_items": {
                "type": "integer",
                "documentation": "The value you provided for the MaxItems request parameter.",
                "serialized_name": "MaxItems"
              },
              "is_truncated": {
                "type": "boolean",
                "documentation": "A flag that indicates whether more distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list.",
                "serialized_name": "IsTruncated"
              },
              "quantity": {
                "type": "integer",
                "documentation": "The number of distributions that were created by the current AWS account.",
                "serialized_name": "Quantity"
              },
              "items": {
                "type": "list",
                "documentation": "A complex type that contains one DistributionSummary element for each distribution that was created by the current AWS account.",
                "serialized_name": "Items",
                "members": {
                  "type": "structure",
                  "documentation": "A summary of the information for an Amazon CloudFront distribution.",
                  "serialized_name": "DistributionSummary",
                  "members": {
                    "id": {
                      "type": "string",
                      "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                      "serialized_name": "Id"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "This response element indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                      "serialized_name": "Status"
                    },
                    "last_modified_time": {
                      "type": "timestamp",
                      "documentation": "The date and time the distribution was last modified.",
                      "serialized_name": "LastModifiedTime"
                    },
                    "domain_name": {
                      "type": "string",
                      "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                      "serialized_name": "DomainName"
                    },
                    "aliases": {
                      "type": "structure",
                      "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                      "serialized_name": "Aliases",
                      "members": {
                        "quantity": {
                          "type": "integer",
                          "documentation": "The number of CNAMEs, if any, for this distribution.",
                          "serialized_name": "Quantity"
                        },
                        "items": {
                          "type": "list",
                          "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                          "serialized_name": "Items",
                          "members": {
                            "type": "string",
                            "serialized_name": "CNAME"
                          }
                        }
                      }
                    },
                    "origins": {
                      "type": "structure",
                      "documentation": "A complex type that contains information about origins for this distribution.",
                      "serialized_name": "Origins",
                      "members": {
                        "quantity": {
                          "type": "integer",
                          "documentation": "The number of origins for this distribution.",
                          "serialized_name": "Quantity"
                        },
                        "items": {
                          "type": "list",
                          "documentation": "A complex type that contains origins for this distribution.",
                          "serialized_name": "Items",
                          "members": {
                            "type": "structure",
                            "documentation": "A complex type that describes the Amazon S3 bucket or the HTTP server (for example, a web server) from which CloudFront gets your files.You must create at least one origin.",
                            "serialized_name": "Origin",
                            "members": {
                              "id": {
                                "type": "string",
                                "documentation": "A unique identifier for the origin. The value of Id must be unique within the distribution. You use the value of Id when you create a cache behavior. The Id identifies the origin that CloudFront routes a request to when the request matches the path pattern for that cache behavior.",
                                "serialized_name": "Id"
                              },
                              "domain_name": {
                                "type": "string",
                                "documentation": "Amazon S3 origins: The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, myawsbucket.s3.amazonaws.com. Custom origins: The DNS domain name for the HTTP server from which you want CloudFront to get objects for this origin, for example, www.example.com.",
                                "serialized_name": "DomainName"
                              },
                              "s3_origin_config": {
                                "type": "structure",
                                "documentation": "A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin, use the CustomOriginConfig element instead.",
                                "serialized_name": "S3OriginConfig",
                                "members": {
                                  "origin_access_identity": {
                                    "type": "string",
                                    "documentation": "The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that end users can only access objects in an Amazon S3 bucket through CloudFront. If you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity.",
                                    "serialized_name": "OriginAccessIdentity"
                                  }
                                }
                              },
                              "custom_origin_config": {
                                "type": "structure",
                                "documentation": "A complex type that contains information about a custom origin. If the origin is an Amazon S3 bucket, use the S3OriginConfig element instead.",
                                "serialized_name": "CustomOriginConfig",
                                "members": {
                                  "http_port": {
                                    "type": "integer",
                                    "documentation": "The HTTP port the custom origin listens on.",
                                    "serialized_name": "HTTPPort"
                                  },
                                  "https_port": {
                                    "type": "integer",
                                    "documentation": "The HTTPS port the custom origin listens on.",
                                    "serialized_name": "HTTPSPort"
                                  },
                                  "origin_protocol_policy": {
                                    "type": "string",
                                    "documentation": "The origin protocol policy to apply to your origin.",
                                    "serialized_name": "OriginProtocolPolicy",
                                    "enum": [
                                      "http-only",
                                      "match-viewer"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "default_cache_behavior": {
                      "type": "structure",
                      "documentation": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior.",
                      "serialized_name": "DefaultCacheBehavior",
                      "members": {
                        "target_origin_id": {
                          "type": "string",
                          "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                          "serialized_name": "TargetOriginId"
                        },
                        "forwarded_values": {
                          "type": "structure",
                          "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                          "serialized_name": "ForwardedValues",
                          "members": {
                            "query_string": {
                              "type": "boolean",
                              "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                              "serialized_name": "QueryString"
                            },
                            "cookies": {
                              "type": "structure",
                              "documentation": "A complex type that specifies how CloudFront handles cookies.",
                              "serialized_name": "Cookies",
                              "members": {
                                "forward": {
                                  "type": "string",
                                  "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                                  "serialized_name": "Forward",
                                  "enum": [
                                    "none",
                                    "whitelist",
                                    "all"
                                  ]
                                },
                                "whitelisted_names": {
                                  "type": "structure",
                                  "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                                  "serialized_name": "WhitelistedNames",
                                  "members": {
                                    "quantity": {
                                      "type": "integer",
                                      "documentation": "The number of whitelisted cookies for this cache behavior.",
                                      "serialized_name": "Quantity"
                                    },
                                    "items": {
                                      "type": "list",
                                      "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                      "serialized_name": "Items",
                                      "members": {
                                        "type": "string",
                                        "serialized_name": "Name"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trusted_signers": {
                          "type": "structure",
                          "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                          "serialized_name": "TrustedSigners",
                          "members": {
                            "enabled": {
                              "type": "boolean",
                              "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                              "serialized_name": "Enabled"
                            },
                            "quantity": {
                              "type": "integer",
                              "documentation": "The number of trusted signers for this cache behavior.",
                              "serialized_name": "Quantity"
                            },
                            "items": {
                              "type": "list",
                              "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                              "serialized_name": "Items",
                              "members": {
                                "type": "string",
                                "serialized_name": "AwsAccountNumber"
                              }
                            }
                          }
                        },
                        "viewer_protocol_policy": {
                          "type": "string",
                          "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                          "serialized_name": "ViewerProtocolPolicy",
                          "enum": [
                            "allow-all",
                            "https-only"
                          ]
                        },
                        "min_ttl": {
                          "type": "integer",
                          "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                          "serialized_name": "MinTTL"
                        }
                      }
                    },
                    "cache_behaviors": {
                      "type": "structure",
                      "documentation": "A complex type that contains zero or more CacheBehavior elements.",
                      "serialized_name": "CacheBehaviors",
                      "members": {
                        "quantity": {
                          "type": "integer",
                          "documentation": "The number of cache behaviors for this distribution.",
                          "serialized_name": "Quantity"
                        },
                        "items": {
                          "type": "list",
                          "documentation": "Optional: A complex type that contains cache behaviors for this distribution. If Quantity is 0, you can omit Items.",
                          "serialized_name": "Items",
                          "members": {
                            "type": "structure",
                            "documentation": "A complex type that describes how CloudFront processes requests. You can create up to 10 cache behaviors.You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to distribute objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin will never be used. If you don't want to specify any cache behaviors, include only an empty CacheBehaviors element. Don't include an empty CacheBehavior element, or CloudFront returns a MalformedXML error. To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element. To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.",
                            "serialized_name": "CacheBehavior",
                            "members": {
                              "path_pattern": {
                                "type": "string",
                                "documentation": "The pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to. When CloudFront receives an end-user request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution. The path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.",
                                "serialized_name": "PathPattern"
                              },
                              "target_origin_id": {
                                "type": "string",
                                "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                                "serialized_name": "TargetOriginId"
                              },
                              "forwarded_values": {
                                "type": "structure",
                                "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                                "serialized_name": "ForwardedValues",
                                "members": {
                                  "query_string": {
                                    "type": "boolean",
                                    "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                                    "serialized_name": "QueryString"
                                  },
                                  "cookies": {
                                    "type": "structure",
                                    "documentation": "A complex type that specifies how CloudFront handles cookies.",
                                    "serialized_name": "Cookies",
                                    "members": {
                                      "forward": {
                                        "type": "string",
                                        "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                                        "serialized_name": "Forward",
                                        "enum": [
                                          "none",
                                          "whitelist",
                                          "all"
                                        ]
                                      },
                                      "whitelisted_names": {
                                        "type": "structure",
                                        "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                                        "serialized_name": "WhitelistedNames",
                                        "members": {
                                          "quantity": {
                                            "type": "integer",
                                            "documentation": "The number of whitelisted cookies for this cache behavior.",
                                            "serialized_name": "Quantity"
                                          },
                                          "items": {
                                            "type": "list",
                                            "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                            "serialized_name": "Items",
                                            "members": {
                                              "type": "string",
                                              "serialized_name": "Name"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "trusted_signers": {
                                "type": "structure",
                                "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                                "serialized_name": "TrustedSigners",
                                "members": {
                                  "enabled": {
                                    "type": "boolean",
                                    "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                                    "serialized_name": "Enabled"
                                  },
                                  "quantity": {
                                    "type": "integer",
                                    "documentation": "The number of trusted signers for this cache behavior.",
                                    "serialized_name": "Quantity"
                                  },
                                  "items": {
                                    "type": "list",
                                    "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                                    "serialized_name": "Items",
                                    "members": {
                                      "type": "string",
                                      "serialized_name": "AwsAccountNumber"
                                    }
                                  }
                                }
                              },
                              "viewer_protocol_policy": {
                                "type": "string",
                                "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                                "serialized_name": "ViewerProtocolPolicy",
                                "enum": [
                                  "allow-all",
                                  "https-only"
                                ]
                              },
                              "min_ttl": {
                                "type": "integer",
                                "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                                "serialized_name": "MinTTL"
                              }
                            }
                          }
                        }
                      }
                    },
                    "comment": {
                      "type": "string",
                      "documentation": "The comment originally specified when this distribution was created.",
                      "serialized_name": "Comment"
                    },
                    "price_class": {
                      "type": "string",
                      "serialized_name": "PriceClass",
                      "enum": [
                        "PriceClass_100",
                        "PriceClass_200",
                        "PriceClass_All"
                      ]
                    },
                    "enabled": {
                      "type": "boolean",
                      "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                      "serialized_name": "Enabled"
                    },
                    "viewer_certificate": {
                      "type": "structure",
                      "documentation": "A complex type that contains information about viewer certificates for this distribution.",
                      "serialized_name": "ViewerCertificate",
                      "members": {
                        "iam_certificate_id": {
                          "type": "string",
                          "documentation": "The IAM certificate identifier of the custom viewer certificate for this distribution.",
                          "serialized_name": "IAMCertificateId"
                        },
                        "cloud_front_default_certificate": {
                          "type": "boolean",
                          "documentation": "Set to true if you want to use the default *.cloudfront.net viewer certificate for this distribution. Omit this value if you are setting an IAMCertificateId.",
                          "serialized_name": "CloudFrontDefaultCertificate"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "The argument is invalid.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "list_invalidations2013_05_12": {
      "name": "ListInvalidations2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/distribution/{DistributionId}/invalidation?Marker={Marker}&MaxItems={MaxItems}",
      "documentation": "List invalidation batches.",
      "input": {
        "type": "structure",
        "documentation": "The request to list invalidations.",
        "members": {
          "distribution_id": {
            "type": "string",
            "required": true,
            "documentation": "The distribution's id.",
            "location": "uri",
            "serialized_name": "DistributionId"
          },
          "marker": {
            "type": "string",
            "documentation": "Use this parameter when paginating results to indicate where to begin in your list of invalidation batches. Because the results are returned in decreasing order from most recent to oldest, the most recent results are on the first page, the second page will contain earlier results, and so on. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response. This value is the same as the ID of the last invalidation batch on that page.",
            "location": "uri",
            "serialized_name": "Marker"
          },
          "max_items": {
            "type": "string",
            "documentation": "The maximum number of invalidation batches you want in the response body.",
            "location": "uri",
            "serialized_name": "MaxItems"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "invalidation_list": {
            "type": "structure",
            "documentation": "Information about invalidation batches.",
            "serialized_name": "InvalidationList",
            "metadata": {
              "payload": true
            },
            "members": {
              "marker": {
                "type": "string",
                "documentation": "The value you provided for the Marker request parameter.",
                "serialized_name": "Marker"
              },
              "next_marker": {
                "type": "string",
                "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your invalidation batches where they left off.",
                "serialized_name": "NextMarker"
              },
              "max_items": {
                "type": "integer",
                "documentation": "The value you provided for the MaxItems request parameter.",
                "serialized_name": "MaxItems"
              },
              "is_truncated": {
                "type": "boolean",
                "documentation": "A flag that indicates whether more invalidation batch requests remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more invalidation batches in the list.",
                "serialized_name": "IsTruncated"
              },
              "quantity": {
                "type": "integer",
                "documentation": "The number of invalidation batches that were created by the current AWS account.",
                "serialized_name": "Quantity"
              },
              "items": {
                "type": "list",
                "documentation": "A complex type that contains one InvalidationSummary element for each invalidation batch that was created by the current AWS account.",
                "serialized_name": "Items",
                "members": {
                  "type": "structure",
                  "documentation": "Summary of an invalidation request.",
                  "serialized_name": "InvalidationSummary",
                  "members": {
                    "id": {
                      "type": "string",
                      "documentation": "The unique ID for an invalidation request.",
                      "serialized_name": "Id"
                    },
                    "create_time": {
                      "type": "timestamp",
                      "serialized_name": "CreateTime"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "The status of an invalidation request.",
                      "serialized_name": "Status"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "The argument is invalid.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The specified distribution does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "list_streaming_distributions2013_05_12": {
      "name": "ListStreamingDistributions2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/streaming-distribution?Marker={Marker}&MaxItems={MaxItems}",
      "documentation": "List streaming distributions.",
      "input": {
        "type": "structure",
        "documentation": "The request to list your streaming distributions.",
        "members": {
          "marker": {
            "type": "string",
            "documentation": "Use this when paginating results to indicate where to begin in your list of streaming distributions. The results include distributions in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response (which is also the ID of the last distribution on that page).",
            "location": "uri",
            "serialized_name": "Marker"
          },
          "max_items": {
            "type": "string",
            "documentation": "The maximum number of streaming distributions you want in the response body.",
            "location": "uri",
            "serialized_name": "MaxItems"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "streaming_distribution_list": {
            "type": "structure",
            "documentation": "The StreamingDistributionList type.",
            "serialized_name": "StreamingDistributionList",
            "metadata": {
              "payload": true
            },
            "members": {
              "marker": {
                "type": "string",
                "documentation": "The value you provided for the Marker request parameter.",
                "serialized_name": "Marker"
              },
              "next_marker": {
                "type": "string",
                "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your streaming distributions where they left off.",
                "serialized_name": "NextMarker"
              },
              "max_items": {
                "type": "integer",
                "documentation": "The value you provided for the MaxItems request parameter.",
                "serialized_name": "MaxItems"
              },
              "is_truncated": {
                "type": "boolean",
                "documentation": "A flag that indicates whether more streaming distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list.",
                "serialized_name": "IsTruncated"
              },
              "quantity": {
                "type": "integer",
                "documentation": "The number of streaming distributions that were created by the current AWS account.",
                "serialized_name": "Quantity"
              },
              "items": {
                "type": "list",
                "documentation": "A complex type that contains one StreamingDistributionSummary element for each distribution that was created by the current AWS account.",
                "serialized_name": "Items",
                "members": {
                  "type": "structure",
                  "documentation": "A summary of the information for an Amazon CloudFront streaming distribution.",
                  "serialized_name": "StreamingDistributionSummary",
                  "members": {
                    "id": {
                      "type": "string",
                      "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                      "serialized_name": "Id"
                    },
                    "status": {
                      "type": "string",
                      "documentation": "Indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                      "serialized_name": "Status"
                    },
                    "last_modified_time": {
                      "type": "timestamp",
                      "documentation": "The date and time the distribution was last modified.",
                      "serialized_name": "LastModifiedTime"
                    },
                    "domain_name": {
                      "type": "string",
                      "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                      "serialized_name": "DomainName"
                    },
                    "s3_origin": {
                      "type": "structure",
                      "documentation": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
                      "serialized_name": "S3Origin",
                      "members": {
                        "domain_name": {
                          "type": "string",
                          "documentation": "The DNS name of the S3 origin.",
                          "serialized_name": "DomainName"
                        },
                        "origin_access_identity": {
                          "type": "string",
                          "documentation": "Your S3 origin's origin access identity.",
                          "serialized_name": "OriginAccessIdentity"
                        }
                      }
                    },
                    "aliases": {
                      "type": "structure",
                      "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.",
                      "serialized_name": "Aliases",
                      "members": {
                        "quantity": {
                          "type": "integer",
                          "documentation": "The number of CNAMEs, if any, for this distribution.",
                          "serialized_name": "Quantity"
                        },
                        "items": {
                          "type": "list",
                          "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                          "serialized_name": "Items",
                          "members": {
                            "type": "string",
                            "serialized_name": "CNAME"
                          }
                        }
                      }
                    },
                    "trusted_signers": {
                      "type": "structure",
                      "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                      "serialized_name": "TrustedSigners",
                      "members": {
                        "enabled": {
                          "type": "boolean",
                          "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                          "serialized_name": "Enabled"
                        },
                        "quantity": {
                          "type": "integer",
                          "documentation": "The number of trusted signers for this cache behavior.",
                          "serialized_name": "Quantity"
                        },
                        "items": {
                          "type": "list",
                          "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                          "serialized_name": "Items",
                          "members": {
                            "type": "string",
                            "serialized_name": "AwsAccountNumber"
                          }
                        }
                      }
                    },
                    "comment": {
                      "type": "string",
                      "documentation": "The comment originally specified when this distribution was created.",
                      "serialized_name": "Comment"
                    },
                    "price_class": {
                      "type": "string",
                      "serialized_name": "PriceClass",
                      "enum": [
                        "PriceClass_100",
                        "PriceClass_200",
                        "PriceClass_All"
                      ]
                    },
                    "enabled": {
                      "type": "boolean",
                      "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                      "serialized_name": "Enabled"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "The argument is invalid.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "update_cloud_front_origin_access_identity2013_05_12": {
      "name": "UpdateCloudFrontOriginAccessIdentity2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/origin-access-identity/cloudfront/{Id}/config",
      "documentation": "Update an origin access identity.",
      "input": {
        "type": "structure",
        "documentation": "The request to update an origin access identity.",
        "members": {
          "cloud_front_origin_access_identity_config": {
            "type": "structure",
            "required": true,
            "documentation": "The identity's configuration information.",
            "serialized_name": "CloudFrontOriginAccessIdentityConfig",
            "metadata": {
              "payload": true
            },
            "members": {
              "caller_reference": {
                "type": "string",
                "required": true,
                "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created. If the CallerReference is a value you already sent in a previous request to create an identity, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.",
                "serialized_name": "CallerReference"
              },
              "comment": {
                "type": "string",
                "required": true,
                "documentation": "Any comments you want to include about the origin access identity.",
                "serialized_name": "Comment"
              }
            }
          },
          "id": {
            "type": "string",
            "documentation": "The identity's id.",
            "location": "uri",
            "serialized_name": "Id"
          },
          "if_match": {
            "type": "string",
            "documentation": "The value of the ETag header you received when retrieving the identity's configuration. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "If-Match"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "cloud_front_origin_access_identity": {
            "type": "structure",
            "documentation": "The origin access identity's information.",
            "serialized_name": "CloudFrontOriginAccessIdentity",
            "metadata": {
              "payload": true
            },
            "members": {
              "id": {
                "type": "string",
                "documentation": "The ID for the origin access identity. For example: E74FTE3AJFJ256A.",
                "serialized_name": "Id"
              },
              "s3_canonical_user_id": {
                "type": "string",
                "documentation": "The Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3.",
                "serialized_name": "S3CanonicalUserId"
              },
              "cloud_front_origin_access_identity_config": {
                "type": "structure",
                "documentation": "The current configuration information for the identity.",
                "serialized_name": "CloudFrontOriginAccessIdentityConfig",
                "members": {
                  "caller_reference": {
                    "type": "string",
                    "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created. If the CallerReference is a value you already sent in a previous request to create an identity, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.",
                    "serialized_name": "CallerReference"
                  },
                  "comment": {
                    "type": "string",
                    "documentation": "Any comments you want to include about the origin access identity.",
                    "serialized_name": "Comment"
                  }
                }
              }
            }
          },
          "etag": {
            "type": "string",
            "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "ETag"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Origin and CallerReference cannot be updated.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The If-Match version is missing or not valid for the distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "This operation requires a body. Ensure that the body is present and the Content-Type header is set.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The specified origin access identity does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The precondition given in one or more of the request-header fields evaluated to false.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The argument is invalid.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The value of Quantity and the size of Items do not match.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "update_distribution2013_05_12": {
      "name": "UpdateDistribution2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/distribution/{Id}/config",
      "documentation": "Update a distribution.",
      "input": {
        "type": "structure",
        "documentation": "The request to update a distribution.",
        "members": {
          "distribution_config": {
            "type": "structure",
            "required": true,
            "documentation": "The distribution's configuration information.",
            "serialized_name": "DistributionConfig",
            "metadata": {
              "payload": true
            },
            "members": {
              "caller_reference": {
                "type": "string",
                "required": true,
                "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the DistributionConfig object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create a distribution, and the content of the DistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of the DistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                "serialized_name": "CallerReference"
              },
              "aliases": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                "serialized_name": "Aliases",
                "members": {
                  "quantity": {
                    "type": "integer",
                    "required": true,
                    "documentation": "The number of CNAMEs, if any, for this distribution.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "string",
                      "serialized_name": "CNAME"
                    }
                  }
                }
              },
              "default_root_object": {
                "type": "string",
                "required": true,
                "documentation": "The object that you want CloudFront to return (for example, index.html) when an end user requests the root URL for your distribution (http://www.example.com) instead of an object in your distribution (http://www.example.com/index.html). Specifying a default root object avoids exposing the contents of your distribution. If you don't want to specify a default root object when you create a distribution, include an empty DefaultRootObject element. To delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element. To replace the default root object, update the distribution configuration and specify the new object.",
                "serialized_name": "DefaultRootObject"
              },
              "origins": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that contains information about origins for this distribution.",
                "serialized_name": "Origins",
                "members": {
                  "quantity": {
                    "type": "integer",
                    "required": true,
                    "documentation": "The number of origins for this distribution.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "A complex type that contains origins for this distribution.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "structure",
                      "documentation": "A complex type that describes the Amazon S3 bucket or the HTTP server (for example, a web server) from which CloudFront gets your files.You must create at least one origin.",
                      "serialized_name": "Origin",
                      "members": {
                        "id": {
                          "type": "string",
                          "required": true,
                          "documentation": "A unique identifier for the origin. The value of Id must be unique within the distribution. You use the value of Id when you create a cache behavior. The Id identifies the origin that CloudFront routes a request to when the request matches the path pattern for that cache behavior.",
                          "serialized_name": "Id"
                        },
                        "domain_name": {
                          "type": "string",
                          "required": true,
                          "documentation": "Amazon S3 origins: The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, myawsbucket.s3.amazonaws.com. Custom origins: The DNS domain name for the HTTP server from which you want CloudFront to get objects for this origin, for example, www.example.com.",
                          "serialized_name": "DomainName"
                        },
                        "s3_origin_config": {
                          "type": "structure",
                          "documentation": "A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin, use the CustomOriginConfig element instead.",
                          "serialized_name": "S3OriginConfig",
                          "members": {
                            "origin_access_identity": {
                              "type": "string",
                              "required": true,
                              "documentation": "The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that end users can only access objects in an Amazon S3 bucket through CloudFront. If you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity.",
                              "serialized_name": "OriginAccessIdentity"
                            }
                          }
                        },
                        "custom_origin_config": {
                          "type": "structure",
                          "documentation": "A complex type that contains information about a custom origin. If the origin is an Amazon S3 bucket, use the S3OriginConfig element instead.",
                          "serialized_name": "CustomOriginConfig",
                          "members": {
                            "http_port": {
                              "type": "integer",
                              "required": true,
                              "documentation": "The HTTP port the custom origin listens on.",
                              "serialized_name": "HTTPPort"
                            },
                            "https_port": {
                              "type": "integer",
                              "required": true,
                              "documentation": "The HTTPS port the custom origin listens on.",
                              "serialized_name": "HTTPSPort"
                            },
                            "origin_protocol_policy": {
                              "type": "string",
                              "required": true,
                              "documentation": "The origin protocol policy to apply to your origin.",
                              "serialized_name": "OriginProtocolPolicy",
                              "enum": [
                                "http-only",
                                "match-viewer"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "default_cache_behavior": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior.",
                "serialized_name": "DefaultCacheBehavior",
                "members": {
                  "target_origin_id": {
                    "type": "string",
                    "required": true,
                    "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                    "serialized_name": "TargetOriginId"
                  },
                  "forwarded_values": {
                    "type": "structure",
                    "required": true,
                    "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                    "serialized_name": "ForwardedValues",
                    "members": {
                      "query_string": {
                        "type": "boolean",
                        "required": true,
                        "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                        "serialized_name": "QueryString"
                      },
                      "cookies": {
                        "type": "structure",
                        "required": true,
                        "documentation": "A complex type that specifies how CloudFront handles cookies.",
                        "serialized_name": "Cookies",
                        "members": {
                          "forward": {
                            "type": "string",
                            "required": true,
                            "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                            "serialized_name": "Forward",
                            "enum": [
                              "none",
                              "whitelist",
                              "all"
                            ]
                          },
                          "whitelisted_names": {
                            "type": "structure",
                            "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                            "serialized_name": "WhitelistedNames",
                            "members": {
                              "quantity": {
                                "type": "integer",
                                "required": true,
                                "documentation": "The number of whitelisted cookies for this cache behavior.",
                                "serialized_name": "Quantity"
                              },
                              "items": {
                                "type": "list",
                                "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                "serialized_name": "Items",
                                "members": {
                                  "type": "string",
                                  "serialized_name": "Name"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "trusted_signers": {
                    "type": "structure",
                    "required": true,
                    "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                    "serialized_name": "TrustedSigners",
                    "members": {
                      "enabled": {
                        "type": "boolean",
                        "required": true,
                        "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                        "serialized_name": "Enabled"
                      },
                      "quantity": {
                        "type": "integer",
                        "required": true,
                        "documentation": "The number of trusted signers for this cache behavior.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "AwsAccountNumber"
                        }
                      }
                    }
                  },
                  "viewer_protocol_policy": {
                    "type": "string",
                    "required": true,
                    "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                    "serialized_name": "ViewerProtocolPolicy",
                    "enum": [
                      "allow-all",
                      "https-only"
                    ]
                  },
                  "min_ttl": {
                    "type": "integer",
                    "required": true,
                    "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                    "serialized_name": "MinTTL"
                  }
                }
              },
              "cache_behaviors": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that contains zero or more CacheBehavior elements.",
                "serialized_name": "CacheBehaviors",
                "members": {
                  "quantity": {
                    "type": "integer",
                    "required": true,
                    "documentation": "The number of cache behaviors for this distribution.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "Optional: A complex type that contains cache behaviors for this distribution. If Quantity is 0, you can omit Items.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "structure",
                      "documentation": "A complex type that describes how CloudFront processes requests. You can create up to 10 cache behaviors.You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to distribute objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin will never be used. If you don't want to specify any cache behaviors, include only an empty CacheBehaviors element. Don't include an empty CacheBehavior element, or CloudFront returns a MalformedXML error. To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element. To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.",
                      "serialized_name": "CacheBehavior",
                      "members": {
                        "path_pattern": {
                          "type": "string",
                          "required": true,
                          "documentation": "The pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to. When CloudFront receives an end-user request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution. The path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.",
                          "serialized_name": "PathPattern"
                        },
                        "target_origin_id": {
                          "type": "string",
                          "required": true,
                          "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                          "serialized_name": "TargetOriginId"
                        },
                        "forwarded_values": {
                          "type": "structure",
                          "required": true,
                          "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                          "serialized_name": "ForwardedValues",
                          "members": {
                            "query_string": {
                              "type": "boolean",
                              "required": true,
                              "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                              "serialized_name": "QueryString"
                            },
                            "cookies": {
                              "type": "structure",
                              "required": true,
                              "documentation": "A complex type that specifies how CloudFront handles cookies.",
                              "serialized_name": "Cookies",
                              "members": {
                                "forward": {
                                  "type": "string",
                                  "required": true,
                                  "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                                  "serialized_name": "Forward",
                                  "enum": [
                                    "none",
                                    "whitelist",
                                    "all"
                                  ]
                                },
                                "whitelisted_names": {
                                  "type": "structure",
                                  "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                                  "serialized_name": "WhitelistedNames",
                                  "members": {
                                    "quantity": {
                                      "type": "integer",
                                      "required": true,
                                      "documentation": "The number of whitelisted cookies for this cache behavior.",
                                      "serialized_name": "Quantity"
                                    },
                                    "items": {
                                      "type": "list",
                                      "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                      "serialized_name": "Items",
                                      "members": {
                                        "type": "string",
                                        "serialized_name": "Name"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trusted_signers": {
                          "type": "structure",
                          "required": true,
                          "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                          "serialized_name": "TrustedSigners",
                          "members": {
                            "enabled": {
                              "type": "boolean",
                              "required": true,
                              "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                              "serialized_name": "Enabled"
                            },
                            "quantity": {
                              "type": "integer",
                              "required": true,
                              "documentation": "The number of trusted signers for this cache behavior.",
                              "serialized_name": "Quantity"
                            },
                            "items": {
                              "type": "list",
                              "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                              "serialized_name": "Items",
                              "members": {
                                "type": "string",
                                "serialized_name": "AwsAccountNumber"
                              }
                            }
                          }
                        },
                        "viewer_protocol_policy": {
                          "type": "string",
                          "required": true,
                          "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                          "serialized_name": "ViewerProtocolPolicy",
                          "enum": [
                            "allow-all",
                            "https-only"
                          ]
                        },
                        "min_ttl": {
                          "type": "integer",
                          "required": true,
                          "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                          "serialized_name": "MinTTL"
                        }
                      }
                    }
                  }
                }
              },
              "comment": {
                "type": "string",
                "required": true,
                "documentation": "Any comments you want to include about the distribution.",
                "serialized_name": "Comment"
              },
              "logging": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that controls whether access logs are written for the distribution.",
                "serialized_name": "Logging",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "required": true,
                    "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket, prefix and IncludeCookies, the values are automatically deleted.",
                    "serialized_name": "Enabled"
                  },
                  "include_cookies": {
                    "type": "boolean",
                    "required": true,
                    "documentation": "Specifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you do not want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies.",
                    "serialized_name": "IncludeCookies"
                  },
                  "bucket": {
                    "type": "string",
                    "required": true,
                    "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                    "serialized_name": "Bucket"
                  },
                  "prefix": {
                    "type": "string",
                    "required": true,
                    "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                    "serialized_name": "Prefix"
                  }
                }
              },
              "price_class": {
                "type": "string",
                "required": true,
                "documentation": "A complex type that contains information about price class for this distribution.",
                "serialized_name": "PriceClass",
                "enum": [
                  "PriceClass_100",
                  "PriceClass_200",
                  "PriceClass_All"
                ]
              },
              "enabled": {
                "type": "boolean",
                "required": true,
                "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                "serialized_name": "Enabled"
              },
              "viewer_certificate": {
                "type": "structure",
                "documentation": "A complex type that contains information about viewer certificates for this distribution.",
                "serialized_name": "ViewerCertificate",
                "members": {
                  "iam_certificate_id": {
                    "type": "string",
                    "documentation": "The IAM certificate identifier of the custom viewer certificate for this distribution.",
                    "serialized_name": "IAMCertificateId"
                  },
                  "cloud_front_default_certificate": {
                    "type": "boolean",
                    "documentation": "Set to true if you want to use the default *.cloudfront.net viewer certificate for this distribution. Omit this value if you are setting an IAMCertificateId.",
                    "serialized_name": "CloudFrontDefaultCertificate"
                  }
                }
              }
            }
          },
          "id": {
            "type": "string",
            "documentation": "The distribution's id.",
            "location": "uri",
            "serialized_name": "Id"
          },
          "if_match": {
            "type": "string",
            "documentation": "The value of the ETag header you received when retrieving the distribution's configuration. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "If-Match"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "distribution": {
            "type": "structure",
            "documentation": "The distribution's information.",
            "serialized_name": "Distribution",
            "metadata": {
              "payload": true
            },
            "members": {
              "id": {
                "type": "string",
                "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                "serialized_name": "Id"
              },
              "status": {
                "type": "string",
                "documentation": "This response element indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                "serialized_name": "Status"
              },
              "last_modified_time": {
                "type": "timestamp",
                "documentation": "The date and time the distribution was last modified.",
                "serialized_name": "LastModifiedTime"
              },
              "in_progress_invalidation_batches": {
                "type": "integer",
                "documentation": "The number of invalidation batches currently in progress.",
                "serialized_name": "InProgressInvalidationBatches"
              },
              "domain_name": {
                "type": "string",
                "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                "serialized_name": "DomainName"
              },
              "active_trusted_signers": {
                "type": "structure",
                "documentation": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs.",
                "serialized_name": "ActiveTrustedSigners",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Each active trusted signer.",
                    "serialized_name": "Enabled"
                  },
                  "quantity": {
                    "type": "integer",
                    "documentation": "The number of unique trusted signers included in all cache behaviors. For example, if three cache behaviors all list the same three AWS accounts, the value of Quantity for ActiveTrustedSigners will be 3.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "A complex type that contains one Signer complex type for each unique trusted signer that is specified in the TrustedSigners complex type, including trusted signers in the default cache behavior and in all of the other cache behaviors.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "structure",
                      "documentation": "A complex type that lists the AWS accounts that were included in the TrustedSigners complex type, as well as their active CloudFront key pair IDs, if any.",
                      "serialized_name": "Signer",
                      "members": {
                        "aws_account_number": {
                          "type": "string",
                          "documentation": "Specifies an AWS account that can create signed URLs. Values: self, which indicates that the AWS account that was used to create the distribution can created signed URLs, or an AWS account number. Omit the dashes in the account number.",
                          "serialized_name": "AwsAccountNumber"
                        },
                        "key_pair_ids": {
                          "type": "structure",
                          "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                          "serialized_name": "KeyPairIds",
                          "members": {
                            "quantity": {
                              "type": "integer",
                              "documentation": "The number of active CloudFront key pairs for AwsAccountNumber.",
                              "serialized_name": "Quantity"
                            },
                            "items": {
                              "type": "list",
                              "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                              "serialized_name": "Items",
                              "members": {
                                "type": "string",
                                "serialized_name": "KeyPairId"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "distribution_config": {
                "type": "structure",
                "documentation": "The current configuration information for the distribution.",
                "serialized_name": "DistributionConfig",
                "members": {
                  "caller_reference": {
                    "type": "string",
                    "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the DistributionConfig object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create a distribution, and the content of the DistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of the DistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                    "serialized_name": "CallerReference"
                  },
                  "aliases": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                    "serialized_name": "Aliases",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of CNAMEs, if any, for this distribution.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "CNAME"
                        }
                      }
                    }
                  },
                  "default_root_object": {
                    "type": "string",
                    "documentation": "The object that you want CloudFront to return (for example, index.html) when an end user requests the root URL for your distribution (http://www.example.com) instead of an object in your distribution (http://www.example.com/index.html). Specifying a default root object avoids exposing the contents of your distribution. If you don't want to specify a default root object when you create a distribution, include an empty DefaultRootObject element. To delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element. To replace the default root object, update the distribution configuration and specify the new object.",
                    "serialized_name": "DefaultRootObject"
                  },
                  "origins": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about origins for this distribution.",
                    "serialized_name": "Origins",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of origins for this distribution.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "A complex type that contains origins for this distribution.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "structure",
                          "documentation": "A complex type that describes the Amazon S3 bucket or the HTTP server (for example, a web server) from which CloudFront gets your files.You must create at least one origin.",
                          "serialized_name": "Origin",
                          "members": {
                            "id": {
                              "type": "string",
                              "documentation": "A unique identifier for the origin. The value of Id must be unique within the distribution. You use the value of Id when you create a cache behavior. The Id identifies the origin that CloudFront routes a request to when the request matches the path pattern for that cache behavior.",
                              "serialized_name": "Id"
                            },
                            "domain_name": {
                              "type": "string",
                              "documentation": "Amazon S3 origins: The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, myawsbucket.s3.amazonaws.com. Custom origins: The DNS domain name for the HTTP server from which you want CloudFront to get objects for this origin, for example, www.example.com.",
                              "serialized_name": "DomainName"
                            },
                            "s3_origin_config": {
                              "type": "structure",
                              "documentation": "A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin, use the CustomOriginConfig element instead.",
                              "serialized_name": "S3OriginConfig",
                              "members": {
                                "origin_access_identity": {
                                  "type": "string",
                                  "documentation": "The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that end users can only access objects in an Amazon S3 bucket through CloudFront. If you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity.",
                                  "serialized_name": "OriginAccessIdentity"
                                }
                              }
                            },
                            "custom_origin_config": {
                              "type": "structure",
                              "documentation": "A complex type that contains information about a custom origin. If the origin is an Amazon S3 bucket, use the S3OriginConfig element instead.",
                              "serialized_name": "CustomOriginConfig",
                              "members": {
                                "http_port": {
                                  "type": "integer",
                                  "documentation": "The HTTP port the custom origin listens on.",
                                  "serialized_name": "HTTPPort"
                                },
                                "https_port": {
                                  "type": "integer",
                                  "documentation": "The HTTPS port the custom origin listens on.",
                                  "serialized_name": "HTTPSPort"
                                },
                                "origin_protocol_policy": {
                                  "type": "string",
                                  "documentation": "The origin protocol policy to apply to your origin.",
                                  "serialized_name": "OriginProtocolPolicy",
                                  "enum": [
                                    "http-only",
                                    "match-viewer"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "default_cache_behavior": {
                    "type": "structure",
                    "documentation": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior.",
                    "serialized_name": "DefaultCacheBehavior",
                    "members": {
                      "target_origin_id": {
                        "type": "string",
                        "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                        "serialized_name": "TargetOriginId"
                      },
                      "forwarded_values": {
                        "type": "structure",
                        "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                        "serialized_name": "ForwardedValues",
                        "members": {
                          "query_string": {
                            "type": "boolean",
                            "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                            "serialized_name": "QueryString"
                          },
                          "cookies": {
                            "type": "structure",
                            "documentation": "A complex type that specifies how CloudFront handles cookies.",
                            "serialized_name": "Cookies",
                            "members": {
                              "forward": {
                                "type": "string",
                                "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                                "serialized_name": "Forward",
                                "enum": [
                                  "none",
                                  "whitelist",
                                  "all"
                                ]
                              },
                              "whitelisted_names": {
                                "type": "structure",
                                "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                                "serialized_name": "WhitelistedNames",
                                "members": {
                                  "quantity": {
                                    "type": "integer",
                                    "documentation": "The number of whitelisted cookies for this cache behavior.",
                                    "serialized_name": "Quantity"
                                  },
                                  "items": {
                                    "type": "list",
                                    "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                    "serialized_name": "Items",
                                    "members": {
                                      "type": "string",
                                      "serialized_name": "Name"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "trusted_signers": {
                        "type": "structure",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "serialized_name": "TrustedSigners",
                        "members": {
                          "enabled": {
                            "type": "boolean",
                            "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                            "serialized_name": "Enabled"
                          },
                          "quantity": {
                            "type": "integer",
                            "documentation": "The number of trusted signers for this cache behavior.",
                            "serialized_name": "Quantity"
                          },
                          "items": {
                            "type": "list",
                            "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                            "serialized_name": "Items",
                            "members": {
                              "type": "string",
                              "serialized_name": "AwsAccountNumber"
                            }
                          }
                        }
                      },
                      "viewer_protocol_policy": {
                        "type": "string",
                        "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                        "serialized_name": "ViewerProtocolPolicy",
                        "enum": [
                          "allow-all",
                          "https-only"
                        ]
                      },
                      "min_ttl": {
                        "type": "integer",
                        "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                        "serialized_name": "MinTTL"
                      }
                    }
                  },
                  "cache_behaviors": {
                    "type": "structure",
                    "documentation": "A complex type that contains zero or more CacheBehavior elements.",
                    "serialized_name": "CacheBehaviors",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of cache behaviors for this distribution.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains cache behaviors for this distribution. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "structure",
                          "documentation": "A complex type that describes how CloudFront processes requests. You can create up to 10 cache behaviors.You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to distribute objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin will never be used. If you don't want to specify any cache behaviors, include only an empty CacheBehaviors element. Don't include an empty CacheBehavior element, or CloudFront returns a MalformedXML error. To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element. To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.",
                          "serialized_name": "CacheBehavior",
                          "members": {
                            "path_pattern": {
                              "type": "string",
                              "documentation": "The pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to. When CloudFront receives an end-user request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution. The path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.",
                              "serialized_name": "PathPattern"
                            },
                            "target_origin_id": {
                              "type": "string",
                              "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                              "serialized_name": "TargetOriginId"
                            },
                            "forwarded_values": {
                              "type": "structure",
                              "documentation": "A complex type that specifies how CloudFront handles query strings and cookies.",
                              "serialized_name": "ForwardedValues",
                              "members": {
                                "query_string": {
                                  "type": "boolean",
                                  "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                                  "serialized_name": "QueryString"
                                },
                                "cookies": {
                                  "type": "structure",
                                  "documentation": "A complex type that specifies how CloudFront handles cookies.",
                                  "serialized_name": "Cookies",
                                  "members": {
                                    "forward": {
                                      "type": "string",
                                      "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                                      "serialized_name": "Forward",
                                      "enum": [
                                        "none",
                                        "whitelist",
                                        "all"
                                      ]
                                    },
                                    "whitelisted_names": {
                                      "type": "structure",
                                      "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                                      "serialized_name": "WhitelistedNames",
                                      "members": {
                                        "quantity": {
                                          "type": "integer",
                                          "documentation": "The number of whitelisted cookies for this cache behavior.",
                                          "serialized_name": "Quantity"
                                        },
                                        "items": {
                                          "type": "list",
                                          "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                                          "serialized_name": "Items",
                                          "members": {
                                            "type": "string",
                                            "serialized_name": "Name"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "trusted_signers": {
                              "type": "structure",
                              "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                              "serialized_name": "TrustedSigners",
                              "members": {
                                "enabled": {
                                  "type": "boolean",
                                  "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                                  "serialized_name": "Enabled"
                                },
                                "quantity": {
                                  "type": "integer",
                                  "documentation": "The number of trusted signers for this cache behavior.",
                                  "serialized_name": "Quantity"
                                },
                                "items": {
                                  "type": "list",
                                  "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                                  "serialized_name": "Items",
                                  "members": {
                                    "type": "string",
                                    "serialized_name": "AwsAccountNumber"
                                  }
                                }
                              }
                            },
                            "viewer_protocol_policy": {
                              "type": "string",
                              "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https.",
                              "serialized_name": "ViewerProtocolPolicy",
                              "enum": [
                                "allow-all",
                                "https-only"
                              ]
                            },
                            "min_ttl": {
                              "type": "integer",
                              "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                              "serialized_name": "MinTTL"
                            }
                          }
                        }
                      }
                    }
                  },
                  "comment": {
                    "type": "string",
                    "documentation": "Any comments you want to include about the distribution.",
                    "serialized_name": "Comment"
                  },
                  "logging": {
                    "type": "structure",
                    "documentation": "A complex type that controls whether access logs are written for the distribution.",
                    "serialized_name": "Logging",
                    "members": {
                      "enabled": {
                        "type": "boolean",
                        "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket, prefix and IncludeCookies, the values are automatically deleted.",
                        "serialized_name": "Enabled"
                      },
                      "include_cookies": {
                        "type": "boolean",
                        "documentation": "Specifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you do not want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies.",
                        "serialized_name": "IncludeCookies"
                      },
                      "bucket": {
                        "type": "string",
                        "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                        "serialized_name": "Bucket"
                      },
                      "prefix": {
                        "type": "string",
                        "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                        "serialized_name": "Prefix"
                      }
                    }
                  },
                  "price_class": {
                    "type": "string",
                    "documentation": "A complex type that contains information about price class for this distribution.",
                    "serialized_name": "PriceClass",
                    "enum": [
                      "PriceClass_100",
                      "PriceClass_200",
                      "PriceClass_All"
                    ]
                  },
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                    "serialized_name": "Enabled"
                  },
                  "viewer_certificate": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about viewer certificates for this distribution.",
                    "serialized_name": "ViewerCertificate",
                    "members": {
                      "iam_certificate_id": {
                        "type": "string",
                        "documentation": "The IAM certificate identifier of the custom viewer certificate for this distribution.",
                        "serialized_name": "IAMCertificateId"
                      },
                      "cloud_front_default_certificate": {
                        "type": "boolean",
                        "documentation": "Set to true if you want to use the default *.cloudfront.net viewer certificate for this distribution. Omit this value if you are setting an IAMCertificateId.",
                        "serialized_name": "CloudFrontDefaultCertificate"
                      }
                    }
                  }
                }
              }
            }
          },
          "etag": {
            "type": "string",
            "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "ETag"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Origin and CallerReference cannot be updated.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The If-Match version is missing or not valid for the distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "This operation requires a body. Ensure that the body is present and the Content-Type header is set.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The specified distribution does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The precondition given in one or more of the request-header fields evaluated to false.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Your request contains more CNAMEs than are allowed per distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The default root object file name is too big or contains an invalid character.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The argument is invalid.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The origin access identity is not valid or doesn't exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Your request contains more trusted signers than are allowed per distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "One or more of your trusted signers do not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "This operation requires the HTTPS protocol. Ensure that you specify the HTTPS protocol in your request, or omit the RequiredProtocols element from your distribution configuration.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "No origin exists with the specified Origin Id.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "You cannot create anymore origins for the distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "You cannot create anymore cache behaviors for the distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Your request contains more cookie names in the whitelist than are allowed per cache behavior.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Your request contains forward cookies option which doesn't match with the expectation for the whitelisted list of cookie names. Either list of cookie names has been specified when not allowed or list of cookie names is missing when expected.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The value of Quantity and the size of Items do not match.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "You cannot create anymore custom ssl certificates.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    },
    "update_streaming_distribution2013_05_12": {
      "name": "UpdateStreamingDistribution2013_05_12",
      "http_method": "POST",
      "http_path": "/2013-05-12/streaming-distribution/{Id}/config",
      "documentation": "Update a streaming distribution.",
      "input": {
        "type": "structure",
        "documentation": "The request to update a streaming distribution.",
        "members": {
          "streaming_distribution_config": {
            "type": "structure",
            "required": true,
            "documentation": "The streaming distribution's configuration information.",
            "serialized_name": "StreamingDistributionConfig",
            "metadata": {
              "payload": true
            },
            "members": {
              "caller_reference": {
                "type": "string",
                "required": true,
                "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the StreamingDistributionConfig object), a new streaming distribution is created. If the CallerReference is a value you already sent in a previous request to create a streaming distribution, and the content of the StreamingDistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a streaming distribution but the content of the StreamingDistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                "serialized_name": "CallerReference"
              },
              "s3_origin": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
                "serialized_name": "S3Origin",
                "members": {
                  "domain_name": {
                    "type": "string",
                    "required": true,
                    "documentation": "The DNS name of the S3 origin.",
                    "serialized_name": "DomainName"
                  },
                  "origin_access_identity": {
                    "type": "string",
                    "required": true,
                    "documentation": "Your S3 origin's origin access identity.",
                    "serialized_name": "OriginAccessIdentity"
                  }
                }
              },
              "aliases": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.",
                "serialized_name": "Aliases",
                "members": {
                  "quantity": {
                    "type": "integer",
                    "required": true,
                    "documentation": "The number of CNAMEs, if any, for this distribution.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "string",
                      "serialized_name": "CNAME"
                    }
                  }
                }
              },
              "comment": {
                "type": "string",
                "required": true,
                "documentation": "Any comments you want to include about the streaming distribution.",
                "serialized_name": "Comment"
              },
              "logging": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that controls whether access logs are written for the streaming distribution.",
                "serialized_name": "Logging",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "required": true,
                    "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix, the values are automatically deleted.",
                    "serialized_name": "Enabled"
                  },
                  "bucket": {
                    "type": "string",
                    "required": true,
                    "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                    "serialized_name": "Bucket"
                  },
                  "prefix": {
                    "type": "string",
                    "required": true,
                    "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                    "serialized_name": "Prefix"
                  }
                }
              },
              "trusted_signers": {
                "type": "structure",
                "required": true,
                "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                "serialized_name": "TrustedSigners",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "required": true,
                    "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                    "serialized_name": "Enabled"
                  },
                  "quantity": {
                    "type": "integer",
                    "required": true,
                    "documentation": "The number of trusted signers for this cache behavior.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "string",
                      "serialized_name": "AwsAccountNumber"
                    }
                  }
                }
              },
              "price_class": {
                "type": "string",
                "required": true,
                "documentation": "A complex type that contains information about price class for this streaming distribution.",
                "serialized_name": "PriceClass",
                "enum": [
                  "PriceClass_100",
                  "PriceClass_200",
                  "PriceClass_All"
                ]
              },
              "enabled": {
                "type": "boolean",
                "required": true,
                "documentation": "Whether the streaming distribution is enabled to accept end user requests for content.",
                "serialized_name": "Enabled"
              }
            }
          },
          "id": {
            "type": "string",
            "documentation": "The streaming distribution's id.",
            "location": "uri",
            "serialized_name": "Id"
          },
          "if_match": {
            "type": "string",
            "documentation": "The value of the ETag header you received when retrieving the streaming distribution's configuration. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "If-Match"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "The returned result of the corresponding request.",
        "members": {
          "streaming_distribution": {
            "type": "structure",
            "documentation": "The streaming distribution's information.",
            "serialized_name": "StreamingDistribution",
            "metadata": {
              "payload": true
            },
            "members": {
              "id": {
                "type": "string",
                "documentation": "The identifier for the streaming distribution. For example: EGTXBD79H29TRA8.",
                "serialized_name": "Id"
              },
              "status": {
                "type": "string",
                "documentation": "The current status of the streaming distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                "serialized_name": "Status"
              },
              "last_modified_time": {
                "type": "timestamp",
                "documentation": "The date and time the distribution was last modified.",
                "serialized_name": "LastModifiedTime"
              },
              "domain_name": {
                "type": "string",
                "documentation": "The domain name corresponding to the streaming distribution. For example: s5c39gqb8ow64r.cloudfront.net.",
                "serialized_name": "DomainName"
              },
              "active_trusted_signers": {
                "type": "structure",
                "documentation": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs.",
                "serialized_name": "ActiveTrustedSigners",
                "members": {
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Each active trusted signer.",
                    "serialized_name": "Enabled"
                  },
                  "quantity": {
                    "type": "integer",
                    "documentation": "The number of unique trusted signers included in all cache behaviors. For example, if three cache behaviors all list the same three AWS accounts, the value of Quantity for ActiveTrustedSigners will be 3.",
                    "serialized_name": "Quantity"
                  },
                  "items": {
                    "type": "list",
                    "documentation": "A complex type that contains one Signer complex type for each unique trusted signer that is specified in the TrustedSigners complex type, including trusted signers in the default cache behavior and in all of the other cache behaviors.",
                    "serialized_name": "Items",
                    "members": {
                      "type": "structure",
                      "documentation": "A complex type that lists the AWS accounts that were included in the TrustedSigners complex type, as well as their active CloudFront key pair IDs, if any.",
                      "serialized_name": "Signer",
                      "members": {
                        "aws_account_number": {
                          "type": "string",
                          "documentation": "Specifies an AWS account that can create signed URLs. Values: self, which indicates that the AWS account that was used to create the distribution can created signed URLs, or an AWS account number. Omit the dashes in the account number.",
                          "serialized_name": "AwsAccountNumber"
                        },
                        "key_pair_ids": {
                          "type": "structure",
                          "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                          "serialized_name": "KeyPairIds",
                          "members": {
                            "quantity": {
                              "type": "integer",
                              "documentation": "The number of active CloudFront key pairs for AwsAccountNumber.",
                              "serialized_name": "Quantity"
                            },
                            "items": {
                              "type": "list",
                              "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                              "serialized_name": "Items",
                              "members": {
                                "type": "string",
                                "serialized_name": "KeyPairId"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "streaming_distribution_config": {
                "type": "structure",
                "documentation": "The current configuration information for the streaming distribution.",
                "serialized_name": "StreamingDistributionConfig",
                "members": {
                  "caller_reference": {
                    "type": "string",
                    "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the StreamingDistributionConfig object), a new streaming distribution is created. If the CallerReference is a value you already sent in a previous request to create a streaming distribution, and the content of the StreamingDistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a streaming distribution but the content of the StreamingDistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                    "serialized_name": "CallerReference"
                  },
                  "s3_origin": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
                    "serialized_name": "S3Origin",
                    "members": {
                      "domain_name": {
                        "type": "string",
                        "documentation": "The DNS name of the S3 origin.",
                        "serialized_name": "DomainName"
                      },
                      "origin_access_identity": {
                        "type": "string",
                        "documentation": "Your S3 origin's origin access identity.",
                        "serialized_name": "OriginAccessIdentity"
                      }
                    }
                  },
                  "aliases": {
                    "type": "structure",
                    "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.",
                    "serialized_name": "Aliases",
                    "members": {
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of CNAMEs, if any, for this distribution.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "CNAME"
                        }
                      }
                    }
                  },
                  "comment": {
                    "type": "string",
                    "documentation": "Any comments you want to include about the streaming distribution.",
                    "serialized_name": "Comment"
                  },
                  "logging": {
                    "type": "structure",
                    "documentation": "A complex type that controls whether access logs are written for the streaming distribution.",
                    "serialized_name": "Logging",
                    "members": {
                      "enabled": {
                        "type": "boolean",
                        "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix, the values are automatically deleted.",
                        "serialized_name": "Enabled"
                      },
                      "bucket": {
                        "type": "string",
                        "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                        "serialized_name": "Bucket"
                      },
                      "prefix": {
                        "type": "string",
                        "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                        "serialized_name": "Prefix"
                      }
                    }
                  },
                  "trusted_signers": {
                    "type": "structure",
                    "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                    "serialized_name": "TrustedSigners",
                    "members": {
                      "enabled": {
                        "type": "boolean",
                        "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                        "serialized_name": "Enabled"
                      },
                      "quantity": {
                        "type": "integer",
                        "documentation": "The number of trusted signers for this cache behavior.",
                        "serialized_name": "Quantity"
                      },
                      "items": {
                        "type": "list",
                        "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                        "serialized_name": "Items",
                        "members": {
                          "type": "string",
                          "serialized_name": "AwsAccountNumber"
                        }
                      }
                    }
                  },
                  "price_class": {
                    "type": "string",
                    "documentation": "A complex type that contains information about price class for this streaming distribution.",
                    "serialized_name": "PriceClass",
                    "enum": [
                      "PriceClass_100",
                      "PriceClass_200",
                      "PriceClass_All"
                    ]
                  },
                  "enabled": {
                    "type": "boolean",
                    "documentation": "Whether the streaming distribution is enabled to accept end user requests for content.",
                    "serialized_name": "Enabled"
                  }
                }
              }
            }
          },
          "etag": {
            "type": "string",
            "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
            "location": "header",
            "serialized_name": "ETag"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "Access denied.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Origin and CallerReference cannot be updated.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The If-Match version is missing or not valid for the distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "This operation requires a body. Ensure that the body is present and the Content-Type header is set.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The specified streaming distribution does not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The precondition given in one or more of the request-header fields evaluated to false.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The argument is invalid.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The origin access identity is not valid or doesn't exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "Your request contains more trusted signers than are allowed per distribution.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "One or more of your trusted signers do not exist.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "The value of Quantity and the size of Items do not match.",
          "members": {
            "message": {
              "type": "string",
              "serialized_name": "Message"
            }
          }
        }
      ]
    }
  }
}