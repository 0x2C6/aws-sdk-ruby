{
  "version": "2010-05-15",
  "endpoint": "cloudformation.%s.amazonaws.com",
  "metadata": {
    "result_wrapped": true,
    "service_full_name": "AWS CloudFormation"
  },
  "plugins": [
    "Aws::Plugins::GlobalConfiguration",
    "Aws::Plugins::VersionedApiLoader",
    "Aws::Plugins::RegionalEndpoint",
    "Aws::Plugins::EnvironmentCredentials",
    "Aws::Plugins::ContentLength",
    "Aws::Plugins::QuerySerializer",
    "Aws::Plugins::Signers::Version4"
  ],
  "documentation": "<fullname>AWS CloudFormation</fullname> <p>AWS CloudFormation enables you to create and manage AWS infrastructure deployments predictably and repeatedly. AWS CloudFormation helps you leverage AWS products such as Amazon EC2, EBS, Amazon SNS, ELB, and Auto Scaling to build highly-reliable, highly scalable, cost effective applications without worrying about creating and configuring the underlying the AWS infrastructure.</p> <p>With AWS CloudFormation, you declare all of your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. AWS CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about this product, go to the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation Product Page</a>.</p> <p>Amazon CloudFormation makes use of other AWS products. If you need additional technical information about a specific AWS product, you can find the product's technical documentation at <a href=\"http://aws.amazon.com/documentation/\">http://aws.amazon.com/documentation/</a>.</p> You must call the AWS CloudFormation API as a regular IAM user. AWS CloudFormation does not support calling the API with an <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">IAM role</a>",
  "operations": {
    "cancel_update_stack": {
      "name": "CancelUpdateStack",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Cancels an update on the specified stack. If the call completes successfully, the stack will roll back the update and revert to the previous stack configuration.</p> Only stacks that are in the UPDATE_IN_PROGRESS state can be canceled.",
      "input": {
        "type": "structure",
        "documentation": "<p>The input for CancelUpdateStack action.</p>",
        "members": {
          "stack_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The name or the unique identifier associated with the stack.</p>",
            "serialized_name": "StackName"
          }
        }
      }
    },
    "create_stack": {
      "name": "CreateStack",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the DescribeStacks API.</p> Currently, the limit for stacks is 20 stacks per account per region.",
      "input": {
        "type": "structure",
        "documentation": "<p>The input for CreateStack action.</p>",
        "members": {
          "stack_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The name associated with the stack. The name must be unique within your AWS account.</p> Must contain only alphanumeric characters (case sensitive) and start with an alpha character. Maximum length of the name is 255 characters.",
            "serialized_name": "StackName"
          },
          "template_body": {
            "type": "string",
            "documentation": "<p>Structure containing the template body. (For more information, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>",
            "serialized_name": "TemplateBody"
          },
          "template_url": {
            "type": "string",
            "documentation": "<p>Location of file containing the template body. The URL must point to a template (max size: 307,200 bytes) located in an S3 bucket in the same region as the stack. For more information, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>",
            "serialized_name": "TemplateURL"
          },
          "parameters": {
            "type": "list",
            "documentation": "<p>A list of <code>Parameter</code> structures that specify input parameters for the stack.</p>",
            "serialized_name": "Parameters",
            "members": {
              "type": "structure",
              "documentation": "<p>The Parameter data type.</p>",
              "members": {
                "parameter_key": {
                  "type": "string",
                  "documentation": "<p>The key associated with the parameter.</p>",
                  "serialized_name": "ParameterKey"
                },
                "parameter_value": {
                  "type": "string",
                  "documentation": "<p>The value associated with the parameter.</p>",
                  "serialized_name": "ParameterValue"
                }
              }
            }
          },
          "disable_rollback": {
            "type": "boolean",
            "documentation": "<p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p>",
            "serialized_name": "DisableRollback"
          },
          "timeout_in_minutes": {
            "type": "integer",
            "documentation": "<p>The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.</p>",
            "serialized_name": "TimeoutInMinutes"
          },
          "notification_arns": {
            "type": "list",
            "documentation": "<p>The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the <a href=\"http://console.aws.amazon.com/sns\">SNS console</a> or your Command Line Interface (CLI).</p>",
            "serialized_name": "NotificationARNs",
            "members": {
              "type": "string"
            }
          },
          "capabilities": {
            "type": "list",
            "documentation": "<p>The list of capabilities that you want to allow in the stack. If your template contains IAM resources, you must specify the CAPABILITY_IAM value for this parameter; otherwise, this action returns an InsufficientCapabilities error. IAM resources are the following: <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html\">AWS::IAM::AccessKey</a>, <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html\">AWS::IAM::Group</a>, <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html\">AWS::IAM::Policy</a>, <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html\">AWS::IAM::User</a>, and <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html\">AWS::IAM::UserToGroupAddition</a>.</p>",
            "serialized_name": "Capabilities",
            "members": {
              "type": "string",
              "enum": [
                "CAPABILITY_IAM"
              ]
            }
          },
          "on_failure": {
            "type": "string",
            "documentation": "<p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code></p>",
            "serialized_name": "OnFailure",
            "enum": [
              "DO_NOTHING",
              "ROLLBACK",
              "DELETE"
            ]
          },
          "tags": {
            "type": "list",
            "documentation": "<p>A set of user-defined <code>Tags</code> to associate with this stack, represented by key/value pairs. Tags defined for the stack are propogated to EC2 resources that are created as part of the stack. A maximum number of 10 tags can be specified.</p>",
            "serialized_name": "Tags",
            "members": {
              "type": "structure",
              "documentation": "<p>The Tag type is used by <code>CreateStack</code> in the <code>Tags</code> parameter. It allows you to specify a key/value pair that can be used to store information related to cost allocation for an AWS CloudFormation stack.</p>",
              "members": {
                "key": {
                  "type": "string",
                  "documentation": "<p><i>Required</i>. A string used to identify this tag. You can specify a maximum of 128 characters for a tag key. Tags owned by Amazon Web Services (AWS) have the reserved prefix: <code>aws:</code>.</p>",
                  "serialized_name": "Key"
                },
                "value": {
                  "type": "string",
                  "documentation": "<p><i>Required</i>. A string containing the value for this tag. You can specify a maximum of 256 characters for a tag value.</p>",
                  "serialized_name": "Value"
                }
              }
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>The output for a CreateStack action.</p>",
        "members": {
          "stack_id": {
            "type": "string",
            "documentation": "<p>Unique identifier of the stack.</p>",
            "serialized_name": "StackId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Quota for the resource has already been reached.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Resource with the name requested already exists.</p>",
          "members": {
          }
        },
        {
          "type": "structure",
          "documentation": "<p>The template contains resources with capabilities that were not specified in the Capabilities parameter.</p>",
          "members": {
          }
        }
      ]
    },
    "delete_stack": {
      "name": "DeleteStack",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the DescribeStacks API if the deletion has been completed successfully.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p>The input for DeleteStack action.</p>",
        "members": {
          "stack_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The name or the unique identifier associated with the stack.</p>",
            "serialized_name": "StackName"
          }
        }
      }
    },
    "describe_stack_events": {
      "name": "DescribeStackEvents",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Returns all stack related events for a specified stack. For more information about a stack's event history, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.</p> Events are returned, even if the stack never existed or has been successfully deleted.",
      "input": {
        "type": "structure",
        "documentation": "<p>The input for DescribeStackEvents action.</p>",
        "members": {
          "stack_name": {
            "type": "string",
            "documentation": "<p>The name or the unique identifier associated with the stack.</p> <p>Default: There is no default value.</p>",
            "serialized_name": "StackName"
          },
          "next_token": {
            "type": "string",
            "documentation": "<p>String that identifies the start of the next list of events, if there is one.</p> <p>Default: There is no default value.</p>",
            "serialized_name": "NextToken"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>The output for a DescribeStackEvents action.</p>",
        "members": {
          "stack_events": {
            "type": "list",
            "documentation": "<p>A list of <code>StackEvents</code> structures.</p>",
            "serialized_name": "StackEvents",
            "members": {
              "type": "structure",
              "documentation": "<p>The StackEvent data type.</p>",
              "members": {
                "stack_id": {
                  "type": "string",
                  "documentation": "<p>The unique ID name of the instance of the stack.</p>",
                  "serialized_name": "StackId"
                },
                "event_id": {
                  "type": "string",
                  "documentation": "<p>The unique ID of this event.</p>",
                  "serialized_name": "EventId"
                },
                "stack_name": {
                  "type": "string",
                  "documentation": "<p>The name associated with a stack.</p>",
                  "serialized_name": "StackName"
                },
                "logical_resource_id": {
                  "type": "string",
                  "documentation": "<p>The logical name of the resource specified in the template.</p>",
                  "serialized_name": "LogicalResourceId"
                },
                "physical_resource_id": {
                  "type": "string",
                  "documentation": "<p>The name or unique identifier associated with the physical instance of the resource.</p>",
                  "serialized_name": "PhysicalResourceId"
                },
                "resource_type": {
                  "type": "string",
                  "documentation": "<p>Type of the resource. (For more information, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.)</p>",
                  "serialized_name": "ResourceType"
                },
                "timestamp": {
                  "type": "timestamp",
                  "documentation": "<p>Time the status was updated.</p>",
                  "serialized_name": "Timestamp"
                },
                "resource_status": {
                  "type": "string",
                  "documentation": "<p>Current status of the resource.</p>",
                  "serialized_name": "ResourceStatus",
                  "enum": [
                    "CREATE_IN_PROGRESS",
                    "CREATE_FAILED",
                    "CREATE_COMPLETE",
                    "DELETE_IN_PROGRESS",
                    "DELETE_FAILED",
                    "DELETE_COMPLETE",
                    "UPDATE_IN_PROGRESS",
                    "UPDATE_FAILED",
                    "UPDATE_COMPLETE"
                  ]
                },
                "resource_status_reason": {
                  "type": "string",
                  "documentation": "<p>Success/failure message associated with the resource.</p>",
                  "serialized_name": "ResourceStatusReason"
                },
                "resource_properties": {
                  "type": "string",
                  "documentation": "<p>BLOB of the properties used to create the resource.</p>",
                  "serialized_name": "ResourceProperties"
                }
              }
            }
          },
          "next_token": {
            "type": "string",
            "documentation": "<p>String that identifies the start of the next list of events, if there is one.</p>",
            "serialized_name": "NextToken"
          }
        }
      }
    },
    "describe_stack_resource": {
      "name": "DescribeStackResource",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p>The input for DescribeStackResource action.</p>",
        "members": {
          "stack_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The name or the unique identifier associated with the stack.</p> <p>Default: There is no default value.</p>",
            "serialized_name": "StackName"
          },
          "logical_resource_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>",
            "serialized_name": "LogicalResourceId"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>The output for a DescribeStackResource action.</p>",
        "members": {
          "stack_resource_detail": {
            "type": "structure",
            "documentation": "<p>A <code>StackResourceDetail</code> structure containing the description of the specified resource in the specified stack.</p>",
            "serialized_name": "StackResourceDetail",
            "members": {
              "stack_name": {
                "type": "string",
                "documentation": "<p>The name associated with the stack.</p>",
                "serialized_name": "StackName"
              },
              "stack_id": {
                "type": "string",
                "documentation": "<p>Unique identifier of the stack.</p>",
                "serialized_name": "StackId"
              },
              "logical_resource_id": {
                "type": "string",
                "documentation": "<p>The logical name of the resource specified in the template.</p>",
                "serialized_name": "LogicalResourceId"
              },
              "physical_resource_id": {
                "type": "string",
                "documentation": "<p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p>",
                "serialized_name": "PhysicalResourceId"
              },
              "resource_type": {
                "type": "string",
                "documentation": "<p>Type of the resource. (For more information, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.)</p>",
                "serialized_name": "ResourceType"
              },
              "last_updated_timestamp": {
                "type": "timestamp",
                "documentation": "<p>Time the status was updated.</p>",
                "serialized_name": "LastUpdatedTimestamp"
              },
              "resource_status": {
                "type": "string",
                "documentation": "<p>Current status of the resource.</p>",
                "serialized_name": "ResourceStatus",
                "enum": [
                  "CREATE_IN_PROGRESS",
                  "CREATE_FAILED",
                  "CREATE_COMPLETE",
                  "DELETE_IN_PROGRESS",
                  "DELETE_FAILED",
                  "DELETE_COMPLETE",
                  "UPDATE_IN_PROGRESS",
                  "UPDATE_FAILED",
                  "UPDATE_COMPLETE"
                ]
              },
              "resource_status_reason": {
                "type": "string",
                "documentation": "<p>Success/failure message associated with the resource.</p>",
                "serialized_name": "ResourceStatusReason"
              },
              "description": {
                "type": "string",
                "documentation": "<p>User defined description associated with the resource.</p>",
                "serialized_name": "Description"
              },
              "metadata": {
                "type": "string",
                "documentation": "<p>The JSON format content of the <code>Metadata</code> attribute declared for the resource. For more information, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-metadata.html\">Metadata Attribute</a> in the AWS CloudFormation User Guide.</p>",
                "serialized_name": "Metadata"
              }
            }
          }
        }
      }
    },
    "describe_stack_resources": {
      "name": "DescribeStackResources",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead. <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.</p> A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.",
      "input": {
        "type": "structure",
        "documentation": "<p>The input for DescribeStackResources action.</p>",
        "members": {
          "stack_name": {
            "type": "string",
            "documentation": "<p>The name or the unique identifier associated with the stack.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p> <p>Default: There is no default value.</p>",
            "serialized_name": "StackName"
          },
          "logical_resource_id": {
            "type": "string",
            "documentation": "<p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p>",
            "serialized_name": "LogicalResourceId"
          },
          "physical_resource_id": {
            "type": "string",
            "documentation": "<p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p>",
            "serialized_name": "PhysicalResourceId"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>The output for a DescribeStackResources action.</p>",
        "members": {
          "stack_resources": {
            "type": "list",
            "documentation": "<p>A list of <code>StackResource</code> structures.</p>",
            "serialized_name": "StackResources",
            "members": {
              "type": "structure",
              "documentation": "<p>The StackResource data type.</p>",
              "members": {
                "stack_name": {
                  "type": "string",
                  "documentation": "<p>The name associated with the stack.</p>",
                  "serialized_name": "StackName"
                },
                "stack_id": {
                  "type": "string",
                  "documentation": "<p>Unique identifier of the stack.</p>",
                  "serialized_name": "StackId"
                },
                "logical_resource_id": {
                  "type": "string",
                  "documentation": "<p>The logical name of the resource specified in the template.</p>",
                  "serialized_name": "LogicalResourceId"
                },
                "physical_resource_id": {
                  "type": "string",
                  "documentation": "<p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p>",
                  "serialized_name": "PhysicalResourceId"
                },
                "resource_type": {
                  "type": "string",
                  "documentation": "<p>Type of the resource. (For more information, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.)</p>",
                  "serialized_name": "ResourceType"
                },
                "timestamp": {
                  "type": "timestamp",
                  "documentation": "<p>Time the status was updated.</p>",
                  "serialized_name": "Timestamp"
                },
                "resource_status": {
                  "type": "string",
                  "documentation": "<p>Current status of the resource.</p>",
                  "serialized_name": "ResourceStatus",
                  "enum": [
                    "CREATE_IN_PROGRESS",
                    "CREATE_FAILED",
                    "CREATE_COMPLETE",
                    "DELETE_IN_PROGRESS",
                    "DELETE_FAILED",
                    "DELETE_COMPLETE",
                    "UPDATE_IN_PROGRESS",
                    "UPDATE_FAILED",
                    "UPDATE_COMPLETE"
                  ]
                },
                "resource_status_reason": {
                  "type": "string",
                  "documentation": "<p>Success/failure message associated with the resource.</p>",
                  "serialized_name": "ResourceStatusReason"
                },
                "description": {
                  "type": "string",
                  "documentation": "<p>User defined description associated with the resource.</p>",
                  "serialized_name": "Description"
                }
              }
            }
          }
        }
      }
    },
    "describe_stacks": {
      "name": "DescribeStacks",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p>The input for DescribeStacks action.</p>",
        "members": {
          "stack_name": {
            "type": "string",
            "documentation": "<p>The name or the unique identifier associated with the stack.</p> <p>Default: There is no default value.</p>",
            "serialized_name": "StackName"
          },
          "next_token": {
            "type": "string",
            "serialized_name": "NextToken"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>The output for a DescribeStacks action.</p>",
        "members": {
          "stacks": {
            "type": "list",
            "documentation": "<p>A list of stack structures.</p>",
            "serialized_name": "Stacks",
            "members": {
              "type": "structure",
              "documentation": "<p>The Stack data type.</p>",
              "members": {
                "stack_id": {
                  "type": "string",
                  "documentation": "<p>Unique identifier of the stack.</p>",
                  "serialized_name": "StackId"
                },
                "stack_name": {
                  "type": "string",
                  "documentation": "<p>The name associated with the stack.</p>",
                  "serialized_name": "StackName"
                },
                "description": {
                  "type": "string",
                  "documentation": "<p>User defined description associated with the stack.</p>",
                  "serialized_name": "Description"
                },
                "parameters": {
                  "type": "list",
                  "documentation": "<p>A list of <code>Parameter</code> structures.</p>",
                  "serialized_name": "Parameters",
                  "members": {
                    "type": "structure",
                    "documentation": "<p>The Parameter data type.</p>",
                    "members": {
                      "parameter_key": {
                        "type": "string",
                        "documentation": "<p>The key associated with the parameter.</p>",
                        "serialized_name": "ParameterKey"
                      },
                      "parameter_value": {
                        "type": "string",
                        "documentation": "<p>The value associated with the parameter.</p>",
                        "serialized_name": "ParameterValue"
                      }
                    }
                  }
                },
                "creation_time": {
                  "type": "timestamp",
                  "documentation": "<p>Time at which the stack was created.</p>",
                  "serialized_name": "CreationTime"
                },
                "last_updated_time": {
                  "type": "timestamp",
                  "documentation": "<p>The time the stack was last updated. This field will only be returned if the stack has been updated at least once.</p>",
                  "serialized_name": "LastUpdatedTime"
                },
                "stack_status": {
                  "type": "string",
                  "documentation": "<p>Current status of the stack.</p>",
                  "serialized_name": "StackStatus",
                  "enum": [
                    "CREATE_IN_PROGRESS",
                    "CREATE_FAILED",
                    "CREATE_COMPLETE",
                    "ROLLBACK_IN_PROGRESS",
                    "ROLLBACK_FAILED",
                    "ROLLBACK_COMPLETE",
                    "DELETE_IN_PROGRESS",
                    "DELETE_FAILED",
                    "DELETE_COMPLETE",
                    "UPDATE_IN_PROGRESS",
                    "UPDATE_COMPLETE_CLEANUP_IN_PROGRESS",
                    "UPDATE_COMPLETE",
                    "UPDATE_ROLLBACK_IN_PROGRESS",
                    "UPDATE_ROLLBACK_FAILED",
                    "UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS",
                    "UPDATE_ROLLBACK_COMPLETE"
                  ]
                },
                "stack_status_reason": {
                  "type": "string",
                  "documentation": "<p>Success/failure message associated with the stack status.</p>",
                  "serialized_name": "StackStatusReason"
                },
                "disable_rollback": {
                  "type": "boolean",
                  "documentation": "<p>Boolean to enable or disable rollback on stack creation failures:</p> <p> <ul> <li> <code>true</code>: disable rollback</li> <li> <code>false</code>: enable rollback</li> </ul> </p>",
                  "serialized_name": "DisableRollback"
                },
                "notification_arns": {
                  "type": "list",
                  "documentation": "<p>SNS topic ARNs to which stack related events are published.</p>",
                  "serialized_name": "NotificationARNs",
                  "members": {
                    "type": "string"
                  }
                },
                "timeout_in_minutes": {
                  "type": "integer",
                  "documentation": "<p>The amount of time within which stack creation should complete.</p>",
                  "serialized_name": "TimeoutInMinutes"
                },
                "capabilities": {
                  "type": "list",
                  "documentation": "<p>The capabilities allowed in the stack.</p>",
                  "serialized_name": "Capabilities",
                  "members": {
                    "type": "string",
                    "enum": [
                      "CAPABILITY_IAM"
                    ]
                  }
                },
                "outputs": {
                  "type": "list",
                  "documentation": "<p>A list of output structures.</p>",
                  "serialized_name": "Outputs",
                  "members": {
                    "type": "structure",
                    "documentation": "<p>The Output data type.</p>",
                    "members": {
                      "output_key": {
                        "type": "string",
                        "documentation": "<p>The key associated with the output.</p>",
                        "serialized_name": "OutputKey"
                      },
                      "output_value": {
                        "type": "string",
                        "documentation": "<p>The value associated with the output.</p>",
                        "serialized_name": "OutputValue"
                      },
                      "description": {
                        "type": "string",
                        "documentation": "<p>User defined description associated with the output.</p>",
                        "serialized_name": "Description"
                      }
                    }
                  }
                },
                "tags": {
                  "type": "list",
                  "documentation": "<p>A list of <code>Tag</code>s that specify cost allocation information for the stack.</p>",
                  "serialized_name": "Tags",
                  "members": {
                    "type": "structure",
                    "documentation": "<p>The Tag type is used by <code>CreateStack</code> in the <code>Tags</code> parameter. It allows you to specify a key/value pair that can be used to store information related to cost allocation for an AWS CloudFormation stack.</p>",
                    "members": {
                      "key": {
                        "type": "string",
                        "documentation": "<p><i>Required</i>. A string used to identify this tag. You can specify a maximum of 128 characters for a tag key. Tags owned by Amazon Web Services (AWS) have the reserved prefix: <code>aws:</code>.</p>",
                        "serialized_name": "Key"
                      },
                      "value": {
                        "type": "string",
                        "documentation": "<p><i>Required</i>. A string containing the value for this tag. You can specify a maximum of 256 characters for a tag value.</p>",
                        "serialized_name": "Value"
                      }
                    }
                  }
                }
              }
            }
          },
          "next_token": {
            "type": "string",
            "serialized_name": "NextToken"
          }
        }
      }
    },
    "estimate_template_cost": {
      "name": "EstimateTemplateCost",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.</p>",
      "input": {
        "type": "structure",
        "members": {
          "template_body": {
            "type": "string",
            "documentation": "<p>Structure containing the template body. (For more information, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>",
            "serialized_name": "TemplateBody"
          },
          "template_url": {
            "type": "string",
            "documentation": "<p>Location of file containing the template body. The URL must point to a template located in an S3 bucket in the same region as the stack. For more information, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>",
            "serialized_name": "TemplateURL"
          },
          "parameters": {
            "type": "list",
            "documentation": "<p>A list of <code>Parameter</code> structures that specify input parameters.</p>",
            "serialized_name": "Parameters",
            "members": {
              "type": "structure",
              "documentation": "<p>The Parameter data type.</p>",
              "members": {
                "parameter_key": {
                  "type": "string",
                  "documentation": "<p>The key associated with the parameter.</p>",
                  "serialized_name": "ParameterKey"
                },
                "parameter_value": {
                  "type": "string",
                  "documentation": "<p>The value associated with the parameter.</p>",
                  "serialized_name": "ParameterValue"
                }
              }
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>The output for a EstimateTemplateCost action.</p>",
        "members": {
          "url": {
            "type": "string",
            "documentation": "<p>An AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.</p>",
            "serialized_name": "Url"
          }
        }
      }
    },
    "get_template": {
      "name": "GetTemplate",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Returns the template body for a specified stack name. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> If the template does not exist, a <code>ValidationError</code> is returned.",
      "input": {
        "type": "structure",
        "documentation": "<p>The input for a GetTemplate action.</p>",
        "members": {
          "stack_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The name or the unique identifier associated with the stack.</p>",
            "serialized_name": "StackName"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>The output for GetTemplate action.</p>",
        "members": {
          "template_body": {
            "type": "string",
            "documentation": "<p>Structure containing the template body. (For more information, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/\">AWS CloudFormation User Guide</a>.)</p>",
            "serialized_name": "TemplateBody"
          }
        }
      }
    },
    "list_stack_resources": {
      "name": "ListStackResources",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p>The input for ListStackResource action.</p>",
        "members": {
          "stack_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The name or the unique identifier associated with the stack.</p> <p>Default: There is no default value.</p>",
            "serialized_name": "StackName"
          },
          "next_token": {
            "type": "string",
            "documentation": "<p>String that identifies the start of the next list of stack resource summaries, if there is one.</p> <p>Default: There is no default value.</p>",
            "serialized_name": "NextToken"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>The output for a ListStackResources action.</p>",
        "members": {
          "stack_resource_summaries": {
            "type": "list",
            "documentation": "<p>A list of <code>StackResourceSummary</code> structures.</p>",
            "serialized_name": "StackResourceSummaries",
            "members": {
              "type": "structure",
              "documentation": "<p>Contains high-level information about the specified stack resource.</p>",
              "members": {
                "logical_resource_id": {
                  "type": "string",
                  "documentation": "<p>The logical name of the resource specified in the template.</p>",
                  "serialized_name": "LogicalResourceId"
                },
                "physical_resource_id": {
                  "type": "string",
                  "documentation": "<p>The name or unique identifier that corresponds to a physical instance ID of the resource.</p>",
                  "serialized_name": "PhysicalResourceId"
                },
                "resource_type": {
                  "type": "string",
                  "documentation": "<p>Type of the resource. (For more information, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.)</p>",
                  "serialized_name": "ResourceType"
                },
                "last_updated_timestamp": {
                  "type": "timestamp",
                  "documentation": "<p>Time the status was updated.</p>",
                  "serialized_name": "LastUpdatedTimestamp"
                },
                "resource_status": {
                  "type": "string",
                  "documentation": "<p>Current status of the resource.</p>",
                  "serialized_name": "ResourceStatus",
                  "enum": [
                    "CREATE_IN_PROGRESS",
                    "CREATE_FAILED",
                    "CREATE_COMPLETE",
                    "DELETE_IN_PROGRESS",
                    "DELETE_FAILED",
                    "DELETE_COMPLETE",
                    "UPDATE_IN_PROGRESS",
                    "UPDATE_FAILED",
                    "UPDATE_COMPLETE"
                  ]
                },
                "resource_status_reason": {
                  "type": "string",
                  "documentation": "<p>Success/failure message associated with the resource.</p>",
                  "serialized_name": "ResourceStatusReason"
                }
              }
            }
          },
          "next_token": {
            "type": "string",
            "documentation": "<p>String that identifies the start of the next list of events, if there is one.</p>",
            "serialized_name": "NextToken"
          }
        }
      }
    },
    "list_stacks": {
      "name": "ListStacks",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).</p>",
      "input": {
        "type": "structure",
        "documentation": "<p>The input for ListStacks action.</p>",
        "members": {
          "next_token": {
            "type": "string",
            "documentation": "<p>String that identifies the start of the next list of stacks, if there is one.</p> <p>Default: There is no default value.</p>",
            "serialized_name": "NextToken"
          },
          "stack_status_filter": {
            "type": "list",
            "documentation": "<p>Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the Stack data type.</p>",
            "serialized_name": "StackStatusFilter",
            "members": {
              "type": "string",
              "enum": [
                "CREATE_IN_PROGRESS",
                "CREATE_FAILED",
                "CREATE_COMPLETE",
                "ROLLBACK_IN_PROGRESS",
                "ROLLBACK_FAILED",
                "ROLLBACK_COMPLETE",
                "DELETE_IN_PROGRESS",
                "DELETE_FAILED",
                "DELETE_COMPLETE",
                "UPDATE_IN_PROGRESS",
                "UPDATE_COMPLETE_CLEANUP_IN_PROGRESS",
                "UPDATE_COMPLETE",
                "UPDATE_ROLLBACK_IN_PROGRESS",
                "UPDATE_ROLLBACK_FAILED",
                "UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS",
                "UPDATE_ROLLBACK_COMPLETE"
              ]
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>The output for ListStacks action.</p>",
        "members": {
          "stack_summaries": {
            "type": "list",
            "documentation": "<p>A list of <code>StackSummary</code> structures containing information about the specified stacks.</p>",
            "serialized_name": "StackSummaries",
            "members": {
              "type": "structure",
              "documentation": "<p>The StackSummary Data Type</p>",
              "members": {
                "stack_id": {
                  "type": "string",
                  "documentation": "<p>Unique stack identifier.</p>",
                  "serialized_name": "StackId"
                },
                "stack_name": {
                  "type": "string",
                  "documentation": "<p>The name associated with the stack.</p>",
                  "serialized_name": "StackName"
                },
                "template_description": {
                  "type": "string",
                  "documentation": "<p>The template description of the template used to create the stack.</p>",
                  "serialized_name": "TemplateDescription"
                },
                "creation_time": {
                  "type": "timestamp",
                  "documentation": "<p>The time the stack was created.</p>",
                  "serialized_name": "CreationTime"
                },
                "last_updated_time": {
                  "type": "timestamp",
                  "documentation": "<p>The time the stack was last updated. This field will only be returned if the stack has been updated at least once.</p>",
                  "serialized_name": "LastUpdatedTime"
                },
                "deletion_time": {
                  "type": "timestamp",
                  "documentation": "<p>The time the stack was deleted.</p>",
                  "serialized_name": "DeletionTime"
                },
                "stack_status": {
                  "type": "string",
                  "documentation": "<p>The current status of the stack.</p>",
                  "serialized_name": "StackStatus",
                  "enum": [
                    "CREATE_IN_PROGRESS",
                    "CREATE_FAILED",
                    "CREATE_COMPLETE",
                    "ROLLBACK_IN_PROGRESS",
                    "ROLLBACK_FAILED",
                    "ROLLBACK_COMPLETE",
                    "DELETE_IN_PROGRESS",
                    "DELETE_FAILED",
                    "DELETE_COMPLETE",
                    "UPDATE_IN_PROGRESS",
                    "UPDATE_COMPLETE_CLEANUP_IN_PROGRESS",
                    "UPDATE_COMPLETE",
                    "UPDATE_ROLLBACK_IN_PROGRESS",
                    "UPDATE_ROLLBACK_FAILED",
                    "UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS",
                    "UPDATE_ROLLBACK_COMPLETE"
                  ]
                },
                "stack_status_reason": {
                  "type": "string",
                  "documentation": "<p>Success/Failure message associated with the stack status.</p>",
                  "serialized_name": "StackStatusReason"
                }
              }
            }
          },
          "next_token": {
            "type": "string",
            "documentation": "<p>String that identifies the start of the next list of stacks, if there is one.</p>",
            "serialized_name": "NextToken"
          }
        }
      }
    },
    "update_stack": {
      "name": "UpdateStack",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the DescribeStacks action.</p> <p>To get a copy of the template for an existing stack, you can use the GetTemplate action.</p> <p>Tags that were associated with this stack during creation time will still be associated with the stack after an <code>UpdateStack</code> operation.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html\">Updating a Stack</a>.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p>The input for UpdateStack action.</p>",
        "members": {
          "stack_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The name or stack ID of the stack to update.</p> Must contain only alphanumeric characters (case sensitive) and start with an alpha character. Maximum length of the name is 255 characters.",
            "serialized_name": "StackName"
          },
          "template_body": {
            "type": "string",
            "documentation": "<p>Structure containing the template body. (For more information, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>",
            "serialized_name": "TemplateBody"
          },
          "template_url": {
            "type": "string",
            "documentation": "<p>Location of file containing the template body. The URL must point to a template located in an S3 bucket in the same region as the stack. For more information, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>",
            "serialized_name": "TemplateURL"
          },
          "parameters": {
            "type": "list",
            "documentation": "<p>A list of <code>Parameter</code> structures that specify input parameters for the stack.</p>",
            "serialized_name": "Parameters",
            "members": {
              "type": "structure",
              "documentation": "<p>The Parameter data type.</p>",
              "members": {
                "parameter_key": {
                  "type": "string",
                  "documentation": "<p>The key associated with the parameter.</p>",
                  "serialized_name": "ParameterKey"
                },
                "parameter_value": {
                  "type": "string",
                  "documentation": "<p>The value associated with the parameter.</p>",
                  "serialized_name": "ParameterValue"
                }
              }
            }
          },
          "capabilities": {
            "type": "list",
            "documentation": "<p>The list of capabilities that you want to allow in the stack. If your stack contains IAM resources, you must specify the CAPABILITY_IAM value for this parameter; otherwise, this action returns an InsufficientCapabilities error. IAM resources are the following: <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html\">AWS::IAM::AccessKey</a>, <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html\">AWS::IAM::Group</a>, <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html\">AWS::IAM::Policy</a>, <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html\">AWS::IAM::User</a>, and <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html\">AWS::IAM::UserToGroupAddition</a>.</p>",
            "serialized_name": "Capabilities",
            "members": {
              "type": "string",
              "enum": [
                "CAPABILITY_IAM"
              ]
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>The output for a UpdateStack action.</p>",
        "members": {
          "stack_id": {
            "type": "string",
            "documentation": "<p>Unique identifier of the stack.</p>",
            "serialized_name": "StackId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>The template contains resources with capabilities that were not specified in the Capabilities parameter.</p>",
          "members": {
          }
        }
      ]
    },
    "validate_template": {
      "name": "ValidateTemplate",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Validates a specified template.</p>",
      "input": {
        "type": "structure",
        "documentation": "<p>The input for ValidateTemplate action.</p>",
        "members": {
          "template_body": {
            "type": "string",
            "documentation": "<p>String containing the template body. (For more information, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.)</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>",
            "serialized_name": "TemplateBody"
          },
          "template_url": {
            "type": "string",
            "documentation": "<p>Location of file containing the template body. The URL must point to a template (max size: 307,200 bytes) located in an S3 bucket in the same region as the stack. For more information, go to the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide\">AWS CloudFormation User Guide</a>.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>",
            "serialized_name": "TemplateURL"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>The output for ValidateTemplate action.</p>",
        "members": {
          "parameters": {
            "type": "list",
            "documentation": "<p>A list of <code>TemplateParameter</code> structures.</p>",
            "serialized_name": "Parameters",
            "members": {
              "type": "structure",
              "documentation": "<p>The TemplateParameter data type.</p>",
              "members": {
                "parameter_key": {
                  "type": "string",
                  "documentation": "<p>The name associated with the parameter.</p>",
                  "serialized_name": "ParameterKey"
                },
                "default_value": {
                  "type": "string",
                  "documentation": "<p>The default value associated with the parameter.</p>",
                  "serialized_name": "DefaultValue"
                },
                "no_echo": {
                  "type": "boolean",
                  "documentation": "<p>Flag indicating whether the parameter should be displayed as plain text in logs and UIs.</p>",
                  "serialized_name": "NoEcho"
                },
                "description": {
                  "type": "string",
                  "documentation": "<p>User defined description associated with the parameter.</p>",
                  "serialized_name": "Description"
                }
              }
            }
          },
          "description": {
            "type": "string",
            "documentation": "<p>The description found within the template.</p>",
            "serialized_name": "Description"
          },
          "capabilities": {
            "type": "list",
            "documentation": "<p>The capabitilites found within the template. Currently, CAPABILITY_IAM is the only capability detected. If your template contains IAM resources, you must specify the CAPABILITY_IAM value for this parameter when you use the CreateStack or UpdateStack actions with your template; otherwise, those actions return an InsufficientCapabilities error.</p>",
            "serialized_name": "Capabilities",
            "members": {
              "type": "string",
              "enum": [
                "CAPABILITY_IAM"
              ]
            }
          },
          "capabilities_reason": {
            "type": "string",
            "documentation": "<p>The capabilities reason found within the template.</p>",
            "serialized_name": "CapabilitiesReason"
          }
        }
      }
    }
  }
}