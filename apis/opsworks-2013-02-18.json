{
  "version": "2013-02-18",
  "endpoint": "opsworks.%s.amazonaws.com",
  "metadata": {
    "json-target-prefix": "OpsWorks_20130218",
    "json-version": 1.1,
    "service_full_name": "AWS OpsWorks",
    "xmlnamespace": "http://opsworks.amazonaws.com/doc/2013-02-18/"
  },
  "plugins": [
    "Aws::Plugins::GlobalConfiguration",
    "Aws::Plugins::VersionedApiLoader",
    "Aws::Plugins::RegionalEndpoint",
    "Aws::Plugins::EnvironmentCredentials",
    "Aws::Plugins::ContentLength",
    "Aws::Plugins::JsonSerializer",
    "Aws::Plugins::Signers::Version4"
  ],
  "documentation": "<fullname>AWS OpsWorks</fullname> <p>Welcome to the <i>AWS OpsWorks API Reference</i>. This guide provides descriptions, syntax, and usage examples about AWS OpsWorks actions and data types, including common parameters and error codes. </p> <p>AWS OpsWorks is an application management service that provides an integrated experience for overseeing the complete application lifecycle. For information about this product, go to the <a href=\"http://aws.amazon.com/opsworks/\">AWS OpsWorks</a> details page. </p> <p><b>Endpoints</b></p> <p>AWS OpsWorks supports only one endpoint, opsworks.us-east-1.amazonaws.com (HTTPS), so you must connect to that endpoint. You can then use the API to direct AWS OpsWorks to create stacks in any AWS Region.</p> <p><b>Chef Version</b></p> <p>When you call CreateStack, CloneStack, or UpdateStack we recommend you use the <code>ConfigurationManager</code> parameter to specify the Chef version, 0.9 or 11.4. The default value is currently 0.9. However, we expect to change the default value to 11.4 in late August 2013.</p>",
  "operations": {
    "attach_elastic_load_balancer": {
      "name": "AttachElasticLoadBalancer",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Attaches an Elastic Load Balancing instance to a specified layer.</p> You must create the Elastic Load Balancing instance separately, by using the Elastic Load Balancing console, API, or CLI. For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/Welcome.html\"> Elastic Load Balancing Developer Guide</a>.",
      "input": {
        "type": "structure",
        "members": {
          "elastic_load_balancer_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The Elastic Load Balancing instance's name.</p>",
            "serialized_name": "ElasticLoadBalancerName"
          },
          "layer_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The ID of the layer that the Elastic Load Balancing instance is to be attached to.</p>",
            "serialized_name": "LayerId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "clone_stack": {
      "name": "CloneStack",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Creates a clone of a specified stack. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-cloning.html\">Clone a Stack</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "source_stack_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The source stack ID.</p>",
            "serialized_name": "SourceStackId"
          },
          "name": {
            "type": "string",
            "documentation": "<p>The cloned stack name.</p>",
            "serialized_name": "Name"
          },
          "region": {
            "type": "string",
            "documentation": "<p>The cloned stack AWS region, such as \"us-east-1\". For more information about AWS regions, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a>.</p>",
            "serialized_name": "Region"
          },
          "attributes": {
            "type": "map",
            "documentation": "<p>A list of stack attributes and values as key/value pairs to be added to the cloned stack.</p>",
            "serialized_name": "Attributes",
            "keys": {
              "type": "string",
              "enum": [
                "Color"
              ]
            },
            "members": {
              "type": "string"
            }
          },
          "service_role_arn": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack AWS Identity and Access Management (IAM) role, which allows AWS OpsWorks to work with AWS resources on your behalf. You must set this parameter to the Amazon Resource Name (ARN) for an existing IAM role. If you create a stack by using the AWS OpsWorks console, it creates the role for you. You can obtain an existing stack's IAM ARN programmatically by calling DescribePermissions. For more information about IAM ARNs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Using Identifiers</a>.</p> You must set this parameter to a valid service role ARN or the action will fail; there is no default value. You can specify the source stack's service role ARN, if you prefer, but you must do so explicitly.",
            "serialized_name": "ServiceRoleArn"
          },
          "default_instance_profile_arn": {
            "type": "string",
            "documentation": "<p>The ARN of an IAM profile that is the default profile for all of the stack's EC2 instances. For more information about IAM ARNs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Using Identifiers</a>.</p>",
            "serialized_name": "DefaultInstanceProfileArn"
          },
          "default_os": {
            "type": "string",
            "documentation": "<p>The cloned stack default operating system, which must be set to one of the following.</p> <ul> <li>Standard operating systems: <code>Amazon Linux</code> or <code>Ubuntu 12.04 LTS</code> </li> <li>Custom AMIs: <code>Custom</code> </li> </ul> <p>The default option is <code>Amazon Linux</code>. If you set this parameter to <code>Custom</code>, you must use the CreateInstance action's AmiId parameter to specify the custom AMI that you want to use. For more information on the standard operating systems, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-os.html\">Operating Systems</a>For more information on how to use custom AMIs with OpsWorks, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-custom-ami.html\">Using Custom AMIs</a>.</p>",
            "serialized_name": "DefaultOs"
          },
          "hostname_theme": {
            "type": "string",
            "documentation": "<p>The stack's host name theme, with spaces are replaced by underscores. The theme is used to generate host names for the stack's instances. By default, <code>HostnameTheme</code> is set to Layer_Dependent, which creates host names by appending integers to the layer's short name. The other themes are:</p> <ul> <li>Baked_Goods</li> <li>Clouds</li> <li>European_Cities</li> <li>Fruits</li> <li>Greek_Deities</li> <li>Legendary_Creatures_from_Japan</li> <li>Planets_and_Moons</li> <li>Roman_Deities</li> <li>Scottish_Islands</li> <li>US_Cities</li> <li>Wild_Cats</li> </ul> <p>To obtain a generated host name, call <code>GetHostNameSuggestion</code>, which returns a host name based on the current theme.</p>",
            "serialized_name": "HostnameTheme"
          },
          "default_availability_zone": {
            "type": "string",
            "documentation": "<p>The cloned stack's Availability Zone. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a>.</p>",
            "serialized_name": "DefaultAvailabilityZone"
          },
          "custom_json": {
            "type": "string",
            "documentation": "<p>A string that contains user-defined, custom JSON. It is used to override the corresponding default stack configuration JSON values. The string should be in the following format and must escape characters such as '\"'.:</p> <code>\"{\\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\",...}\"</code> <p>For more information on custom JSON, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-json.html\">Use Custom JSON to Modify the Stack Configuration JSON</a></p>",
            "serialized_name": "CustomJson"
          },
          "configuration_manager": {
            "type": "structure",
            "documentation": "<p>The configuration manager. When you clone a stack we recommend that you use the configuration manager to specify the Chef version, 0.9 or 11.4. The default value is currently 0.9. However, we expect to change the default value to 11.4 in late August 2013.</p>",
            "serialized_name": "ConfigurationManager",
            "members": {
              "name": {
                "type": "string",
                "documentation": "<p>The name. This parameter must be set to \"Chef\".</p>",
                "serialized_name": "Name"
              },
              "version": {
                "type": "string",
                "documentation": "<p>The Chef version. This parameter must be set to \"0.9\" or \"11.4\". The default value is \"0.9\". However, we expect to change the default value to \"11.4\" in late August 2013.</p>",
                "serialized_name": "Version"
              }
            }
          },
          "use_custom_cookbooks": {
            "type": "boolean",
            "documentation": "<p>Whether to use custom cookbooks.</p>",
            "serialized_name": "UseCustomCookbooks"
          },
          "custom_cookbooks_source": {
            "type": "structure",
            "documentation": "<p>Contains the information required to retrieve an app or cookbook from a repository. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html\">Creating Apps</a> or <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook.html\">Custom Recipes and Cookbooks</a>.</p>",
            "serialized_name": "CustomCookbooksSource",
            "members": {
              "type": {
                "type": "string",
                "documentation": "<p>The repository type.</p>",
                "serialized_name": "Type",
                "enum": [
                  "git",
                  "svn",
                  "archive",
                  "s3"
                ]
              },
              "url": {
                "type": "string",
                "documentation": "<p>The source URL. </p>",
                "serialized_name": "Url"
              },
              "username": {
                "type": "string",
                "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Username</code> to the appropriate AWS access key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Username</code> to the user name.</li> </ul>",
                "serialized_name": "Username"
              },
              "password": {
                "type": "string",
                "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Password</code> to the appropriate AWS secret key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Password</code> to the password.</li> </ul>",
                "serialized_name": "Password"
              },
              "ssh_key": {
                "type": "string",
                "documentation": "<p>The repository's SSH key.</p>",
                "serialized_name": "SshKey"
              },
              "revision": {
                "type": "string",
                "documentation": "<p>The application's version. AWS OpsWorks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.</p>",
                "serialized_name": "Revision"
              }
            }
          },
          "default_ssh_key_name": {
            "type": "string",
            "documentation": "<p>A default SSH key for the stack instances. You can override this value when you create or update an instance.</p>",
            "serialized_name": "DefaultSshKeyName"
          },
          "clone_permissions": {
            "type": "boolean",
            "documentation": "<p>Whether to clone the source stack's permissions.</p>",
            "serialized_name": "ClonePermissions"
          },
          "clone_app_ids": {
            "type": "list",
            "documentation": "<p>A list of source stack app IDs to be included in the cloned stack.</p>",
            "serialized_name": "CloneAppIds",
            "members": {
              "type": "string"
            }
          },
          "default_root_device_type": {
            "type": "string",
            "documentation": "<p>The default root device type. This value is used by default for all instances in the cloned stack, but you can override it when you create an instance. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device\">Storage for the Root Device</a>.</p>",
            "serialized_name": "DefaultRootDeviceType",
            "enum": [
              "ebs",
              "instance-store"
            ]
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>CloneStack</code> request.</p>",
        "members": {
          "stack_id": {
            "type": "string",
            "documentation": "<p>The cloned stack ID.</p>",
            "serialized_name": "StackId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "create_app": {
      "name": "CreateApp",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Creates an app for a specified stack. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html\">Creating Apps</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack ID.</p>",
            "serialized_name": "StackId"
          },
          "shortname": {
            "type": "string",
            "documentation": "<p>The app's short name.</p>",
            "serialized_name": "Shortname"
          },
          "name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The app name.</p>",
            "serialized_name": "Name"
          },
          "description": {
            "type": "string",
            "documentation": "<p>A description of the app.</p>",
            "serialized_name": "Description"
          },
          "type": {
            "type": "string",
            "required": true,
            "documentation": "<p>The app type. Each supported type is associated with a particular layer. For example, PHP applications are associated with a PHP layer. AWS OpsWorks deploys an application to those instances that are members of the corresponding layer.</p>",
            "serialized_name": "Type",
            "enum": [
              "rails",
              "php",
              "nodejs",
              "static",
              "other"
            ]
          },
          "app_source": {
            "type": "structure",
            "documentation": "<p>A <code>Source</code> object that specifies the app repository.</p>",
            "serialized_name": "AppSource",
            "members": {
              "type": {
                "type": "string",
                "documentation": "<p>The repository type.</p>",
                "serialized_name": "Type",
                "enum": [
                  "git",
                  "svn",
                  "archive",
                  "s3"
                ]
              },
              "url": {
                "type": "string",
                "documentation": "<p>The source URL. </p>",
                "serialized_name": "Url"
              },
              "username": {
                "type": "string",
                "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Username</code> to the appropriate AWS access key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Username</code> to the user name.</li> </ul>",
                "serialized_name": "Username"
              },
              "password": {
                "type": "string",
                "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Password</code> to the appropriate AWS secret key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Password</code> to the password.</li> </ul>",
                "serialized_name": "Password"
              },
              "ssh_key": {
                "type": "string",
                "documentation": "<p>The repository's SSH key.</p>",
                "serialized_name": "SshKey"
              },
              "revision": {
                "type": "string",
                "documentation": "<p>The application's version. AWS OpsWorks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.</p>",
                "serialized_name": "Revision"
              }
            }
          },
          "domains": {
            "type": "list",
            "documentation": "<p>The app virtual host settings, with multiple domains separated by commas. For example: <code>'www.example.com, example.com'</code></p>",
            "serialized_name": "Domains",
            "members": {
              "type": "string"
            }
          },
          "enable_ssl": {
            "type": "boolean",
            "documentation": "<p>Whether to enable SSL for the app.</p>",
            "serialized_name": "EnableSsl"
          },
          "ssl_configuration": {
            "type": "structure",
            "documentation": "<p>An <code>SslConfiguration</code> object with the SSL configuration.</p>",
            "serialized_name": "SslConfiguration",
            "members": {
              "certificate": {
                "type": "string",
                "required": true,
                "documentation": "<p>The contents of the certificate's domain.crt file.</p>",
                "serialized_name": "Certificate"
              },
              "private_key": {
                "type": "string",
                "required": true,
                "documentation": "<p>The private key; the contents of the certificate's domain.kex file.</p>",
                "serialized_name": "PrivateKey"
              },
              "chain": {
                "type": "string",
                "documentation": "<p>Optional. Can be used to specify an intermediate certificate authority key or client authentication.</p>",
                "serialized_name": "Chain"
              }
            }
          },
          "attributes": {
            "type": "map",
            "documentation": "<p>One or more user-defined key/value pairs to be added to the stack attributes bag.</p>",
            "serialized_name": "Attributes",
            "keys": {
              "type": "string",
              "enum": [
                "DocumentRoot",
                "RailsEnv",
                "AutoBundleOnDeploy"
              ]
            },
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>CreateApp</code> request.</p>",
        "members": {
          "app_id": {
            "type": "string",
            "documentation": "<p>The app ID.</p>",
            "serialized_name": "AppId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "create_deployment": {
      "name": "CreateDeployment",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Deploys a stack or app.</p> <ul> <li>App deployment generates a <code>deploy</code> event, which runs the associated recipes and passes them a JSON stack configuration object that includes information about the app. </li> <li>Stack deployment runs the <code>deploy</code> recipes but does not raise an event.</li> </ul> <p>For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-deploying.html\">Deploying Apps</a> and <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-commands.html\">Run Stack Commands</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack ID.</p>",
            "serialized_name": "StackId"
          },
          "app_id": {
            "type": "string",
            "documentation": "<p>The app ID. This parameter is required for app deployments, but not for other deployment commands.</p>",
            "serialized_name": "AppId"
          },
          "instance_ids": {
            "type": "list",
            "documentation": "<p>The instance IDs for the deployment targets.</p>",
            "serialized_name": "InstanceIds",
            "members": {
              "type": "string"
            }
          },
          "command": {
            "type": "structure",
            "required": true,
            "documentation": "<p>A <code>DeploymentCommand</code> object that specifies the deployment command and any associated arguments.</p>",
            "serialized_name": "Command",
            "members": {
              "name": {
                "type": "string",
                "required": true,
                "documentation": "<p>Specifies the deployment operation. You can specify only one command.</p> <p>For stacks, the available commands are:</p> <ul> <li> <code></code>execute_recipes: Execute the recipes that are specified by the <code>Args</code> parameter.</li> <li> <code></code>install_dependencies: Installs the stack's dependencies.</li> <li> <code></code>update_custom_cookbooks: Update the stack's custom cookbooks.</li> <li> <code></code>update_dependencies: Update the stack's dependencies.</li> </ul> <p>For apps, the available commands are:</p> <ul> <li> <code>deploy</code>: Deploy the app.</li> <li> <code>rollback</code> Roll the app back to the previous version. When you update an app, AWS OpsWorks stores the previous version, up to a maximum of five versions. You can use this command to roll an app back as many as four versions.</li> <li> <code>start</code>: Start the app's web or application server.</li> <li> <code>stop</code>: Stop the app's web or application server.</li> <li> <code>restart</code>: Restart the app's web or application server.</li> <li> <code>undeploy</code>: Undeploy the app.</li> </ul>",
                "serialized_name": "Name",
                "enum": [
                  "install_dependencies",
                  "update_dependencies",
                  "update_custom_cookbooks",
                  "execute_recipes",
                  "deploy",
                  "rollback",
                  "start",
                  "stop",
                  "restart",
                  "undeploy"
                ]
              },
              "args": {
                "type": "map",
                "documentation": "<p>An array of command arguments. This parameter is currently used only to specify the list of recipes to be executed by the <code>ExecuteRecipes</code> command.</p>",
                "serialized_name": "Args",
                "keys": {
                  "type": "string"
                },
                "members": {
                  "type": "list",
                  "members": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "comment": {
            "type": "string",
            "documentation": "<p>A user-defined comment.</p>",
            "serialized_name": "Comment"
          },
          "custom_json": {
            "type": "string",
            "documentation": "<p>A string that contains user-defined, custom JSON. It is used to override the corresponding default stack configuration JSON values. The string should be in the following format and must escape characters such as '\"'.:</p> <code>\"{\\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\",...}\"</code> <p>For more information on custom JSON, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-json.html\">Use Custom JSON to Modify the Stack Configuration JSON</a>.</p>",
            "serialized_name": "CustomJson"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>CreateDeployment</code> request.</p>",
        "members": {
          "deployment_id": {
            "type": "string",
            "documentation": "<p>The deployment ID, which can be used with other requests to identify the deployment.</p>",
            "serialized_name": "DeploymentId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "create_instance": {
      "name": "CreateInstance",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Creates an instance in a specified stack. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-add.html\">Adding an Instance to a Layer</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack ID.</p>",
            "serialized_name": "StackId"
          },
          "layer_ids": {
            "type": "list",
            "required": true,
            "documentation": "<p>An array that contains the instance layer IDs.</p>",
            "serialized_name": "LayerIds",
            "members": {
              "type": "string"
            }
          },
          "instance_type": {
            "type": "string",
            "required": true,
            "documentation": "<p>The instance type. AWS OpsWorks supports all instance types except Cluster Compute, Cluster GPU, and High Memory Cluster. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance Families and Types</a>. The parameter values that you use to specify the various types are in the API Name column of the Available Instance Types table.</p>",
            "serialized_name": "InstanceType"
          },
          "auto_scaling_type": {
            "type": "string",
            "documentation": "<p>The instance auto scaling type, which has three possible values:</p> <ul> <li> <b>AlwaysRunning</b>: A 24/7 instance, which is not affected by auto scaling.</li> <li> <b>TimeBasedAutoScaling</b>: A time-based auto scaling instance, which is started and stopped based on a specified schedule. To specify the schedule, call SetTimeBasedAutoScaling.</li> <li> <b>LoadBasedAutoScaling</b>: A load-based auto scaling instance, which is started and stopped based on load metrics. To use load-based auto scaling, you must enable it for the instance layer and configure the thresholds by calling SetLoadBasedAutoScaling.</li> </ul>",
            "serialized_name": "AutoScalingType",
            "enum": [
              "load",
              "timer"
            ]
          },
          "hostname": {
            "type": "string",
            "documentation": "<p>The instance host name.</p>",
            "serialized_name": "Hostname"
          },
          "os": {
            "type": "string",
            "documentation": "<p>The instance's operating system, which must be either <code>Amazon Linux</code> or <code>Ubuntu 12.04 LTS</code>.</p>",
            "serialized_name": "Os"
          },
          "ami_id": {
            "type": "string",
            "documentation": "<p>A custom AMI ID to be used to create the instance. The AMI should be based on one of the standard AWS OpsWorks APIs: Amazon Linux or Ubuntu 12.04 LTS. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances.html\">Instances</a></p>",
            "serialized_name": "AmiId"
          },
          "ssh_key_name": {
            "type": "string",
            "documentation": "<p>The instance SSH key name.</p>",
            "serialized_name": "SshKeyName"
          },
          "availability_zone": {
            "type": "string",
            "documentation": "<p>The instance Availability Zone. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a>.</p>",
            "serialized_name": "AvailabilityZone"
          },
          "architecture": {
            "type": "string",
            "documentation": "<p>The instance architecture. Instance types do not necessarily support both architectures. For a list of the architectures that are supported by the different instance types, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance Families and Types</a>.</p>",
            "serialized_name": "Architecture",
            "enum": [
              "x86_64",
              "i386"
            ]
          },
          "root_device_type": {
            "type": "string",
            "documentation": "<p>The instance root device type. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device\">Storage for the Root Device</a>.</p>",
            "serialized_name": "RootDeviceType",
            "enum": [
              "ebs",
              "instance-store"
            ]
          },
          "install_updates_on_boot": {
            "type": "boolean",
            "documentation": "<p>Whether to install operating system and package updates when the instance boots. The default value is <code>true</code>. To control when updates are installed, set this value to <code>false</code>. You must then update your instances manually by using CreateDeployment to run the <code>update_dependencies</code> stack command or manually running <code>yum</code> (Amazon Linux) or <code>apt-get</code> (Ubuntu) on the instances. </p> We strongly recommend using the default value of <code>true</code>, to ensure that your instances have the latest security updates.",
            "serialized_name": "InstallUpdatesOnBoot"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>CreateInstance</code> request.</p>",
        "members": {
          "instance_id": {
            "type": "string",
            "documentation": "<p>The instance ID.</p>",
            "serialized_name": "InstanceId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "create_layer": {
      "name": "CreateLayer",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Creates a layer. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-create.html\">How to Create a Layer</a>.</p> You should use <b>CreateLayer</b> for non-custom layer types such as PHP App Server only if the stack does not have an existing layer of that type. A stack can have at most one instance of each non-custom layer; if you attempt to create a second instance, <b>CreateLayer</b> fails. A stack can have an arbitrary number of custom layers, so you can call <b>CreateLayer</b> as many times as you like for that layer type.",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The layer stack ID.</p>",
            "serialized_name": "StackId"
          },
          "type": {
            "type": "string",
            "required": true,
            "documentation": "<p>The layer type. A stack cannot have more than one layer of the same type. This parameter must be set to one of the following:</p> <ul> <li>lb: An HAProxy layer</li> <li>web: A Static Web Server layer</li> <li>rails-app: A Rails App Server layer</li> <li>php-app: A PHP App Server layer</li> <li>nodejs-app: A Node.js App Server layer</li> <li>memcached: A Memcached layer</li> <li>db-master: A MySQL layer</li> <li>monitoring-master: A Ganglia layer</li> <li>custom: A custom layer</li> </ul>",
            "serialized_name": "Type",
            "enum": [
              "lb",
              "web",
              "php-app",
              "rails-app",
              "nodejs-app",
              "memcached",
              "db-master",
              "monitoring-master",
              "custom"
            ]
          },
          "name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The layer name, which is used by the console.</p>",
            "serialized_name": "Name"
          },
          "shortname": {
            "type": "string",
            "required": true,
            "documentation": "<p>The layer short name, which is used internally by AWS OpsWorks and by Chef recipes. The short name is also used as the name for the directory where your app files are installed. It can have a maximum of 200 characters, which are limited to the alphanumeric characters, '-', '_', and '.'.</p>",
            "serialized_name": "Shortname"
          },
          "attributes": {
            "type": "map",
            "documentation": "<p>One or more user-defined key/value pairs to be added to the stack attributes bag.</p>",
            "serialized_name": "Attributes",
            "keys": {
              "type": "string",
              "enum": [
                "EnableHaproxyStats",
                "HaproxyStatsUrl",
                "HaproxyStatsUser",
                "HaproxyStatsPassword",
                "HaproxyHealthCheckUrl",
                "HaproxyHealthCheckMethod",
                "MysqlRootPassword",
                "MysqlRootPasswordUbiquitous",
                "GangliaUrl",
                "GangliaUser",
                "GangliaPassword",
                "MemcachedMemory",
                "NodejsVersion",
                "RubyVersion",
                "RubygemsVersion",
                "ManageBundler",
                "BundlerVersion",
                "RailsStack",
                "PassengerVersion"
              ]
            },
            "members": {
              "type": "string"
            }
          },
          "custom_instance_profile_arn": {
            "type": "string",
            "documentation": "<p>The ARN of an IAM profile that to be used for the layer's EC2 instances. For more information about IAM ARNs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Using Identifiers</a>.</p>",
            "serialized_name": "CustomInstanceProfileArn"
          },
          "custom_security_group_ids": {
            "type": "list",
            "documentation": "<p>An array containing the layer custom security group IDs.</p>",
            "serialized_name": "CustomSecurityGroupIds",
            "members": {
              "type": "string"
            }
          },
          "packages": {
            "type": "list",
            "documentation": "<p>An array of <code>Package</code> objects that describe the layer packages.</p>",
            "serialized_name": "Packages",
            "members": {
              "type": "string"
            }
          },
          "volume_configurations": {
            "type": "list",
            "documentation": "<p>A <code>VolumeConfigurations</code> object that describes the layer Amazon EBS volumes.</p>",
            "serialized_name": "VolumeConfigurations",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes an Amazon EBS volume configuration.</p>",
              "members": {
                "mount_point": {
                  "type": "string",
                  "required": true,
                  "documentation": "<p>The volume mount point. For example \"/dev/sdh\".</p>",
                  "serialized_name": "MountPoint"
                },
                "raid_level": {
                  "type": "integer",
                  "documentation": "<p>The volume <a href=\"http://en.wikipedia.org/wiki/Standard_RAID_levels\">RAID level</a>.</p>",
                  "serialized_name": "RaidLevel"
                },
                "number_of_disks": {
                  "type": "integer",
                  "required": true,
                  "documentation": "<p>The number of disks in the volume.</p>",
                  "serialized_name": "NumberOfDisks"
                },
                "size": {
                  "type": "integer",
                  "required": true,
                  "documentation": "<p>The volume size.</p>",
                  "serialized_name": "Size"
                }
              }
            }
          },
          "enable_auto_healing": {
            "type": "boolean",
            "documentation": "<p>Whether to disable auto healing for the layer.</p>",
            "serialized_name": "EnableAutoHealing"
          },
          "auto_assign_elastic_ips": {
            "type": "boolean",
            "documentation": "<p>Whether to automatically assign an <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html\">Elastic IP address</a> to the layer.</p>",
            "serialized_name": "AutoAssignElasticIps"
          },
          "custom_recipes": {
            "type": "structure",
            "documentation": "<p>A <code>LayerCustomRecipes</code> object that specifies the layer custom recipes.</p>",
            "serialized_name": "CustomRecipes",
            "members": {
              "setup": {
                "type": "list",
                "documentation": "<p>An array of custom recipe names to be run following a <code>setup</code> event.</p>",
                "serialized_name": "Setup",
                "members": {
                  "type": "string"
                }
              },
              "configure": {
                "type": "list",
                "documentation": "<p>An array of custom recipe names to be run following a <code>configure</code> event.</p>",
                "serialized_name": "Configure",
                "members": {
                  "type": "string"
                }
              },
              "deploy": {
                "type": "list",
                "documentation": "<p>An array of custom recipe names to be run following a <code>deploy</code> event.</p>",
                "serialized_name": "Deploy",
                "members": {
                  "type": "string"
                }
              },
              "undeploy": {
                "type": "list",
                "documentation": "<p>An array of custom recipe names to be run following a <code>undeploy</code> event.</p>",
                "serialized_name": "Undeploy",
                "members": {
                  "type": "string"
                }
              },
              "shutdown": {
                "type": "list",
                "documentation": "<p>An array of custom recipe names to be run following a <code>shutdown</code> event.</p>",
                "serialized_name": "Shutdown",
                "members": {
                  "type": "string"
                }
              }
            }
          },
          "install_updates_on_boot": {
            "type": "boolean",
            "documentation": "<p>Whether to install operating system and package updates when the instance boots. The default value is <code>true</code>. To control when updates are installed, set this value to <code>false</code>. You must then update your instances manually by using CreateDeployment to run the <code>update_dependencies</code> stack command or manually running <code>yum</code> (Amazon Linux) or <code>apt-get</code> (Ubuntu) on the instances. </p> We strongly recommend using the default value of <code>true</code>, to ensure that your instances have the latest security updates.",
            "serialized_name": "InstallUpdatesOnBoot"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>CreateLayer</code> request.</p>",
        "members": {
          "layer_id": {
            "type": "string",
            "documentation": "<p>The layer ID.</p>",
            "serialized_name": "LayerId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "create_stack": {
      "name": "CreateStack",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Creates a new stack. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-edit.html\">Create a New Stack</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack name.</p>",
            "serialized_name": "Name"
          },
          "region": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack AWS region, such as \"us-east-1\". For more information about Amazon regions, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a>.</p>",
            "serialized_name": "Region"
          },
          "attributes": {
            "type": "map",
            "documentation": "<p>One or more user-defined key/value pairs to be added to the stack attributes bag.</p>",
            "serialized_name": "Attributes",
            "keys": {
              "type": "string",
              "enum": [
                "Color"
              ]
            },
            "members": {
              "type": "string"
            }
          },
          "service_role_arn": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack AWS Identity and Access Management (IAM) role, which allows AWS OpsWorks to work with AWS resources on your behalf. You must set this parameter to the Amazon Resource Name (ARN) for an existing IAM role. For more information about IAM ARNs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Using Identifiers</a>.</p>",
            "serialized_name": "ServiceRoleArn"
          },
          "default_instance_profile_arn": {
            "type": "string",
            "required": true,
            "documentation": "<p>The ARN of an IAM profile that is the default profile for all of the stack's EC2 instances. For more information about IAM ARNs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Using Identifiers</a>.</p>",
            "serialized_name": "DefaultInstanceProfileArn"
          },
          "default_os": {
            "type": "string",
            "documentation": "<p>The stack default operating system, which must be set to one of the following.</p> <ul> <li>Standard operating systems: <code>Amazon Linux</code> or <code>Ubuntu 12.04 LTS</code> </li> <li>Custom AMIs: <code>Custom</code> </li> </ul> <p>The default option is <code>Amazon Linux</code>. If you set this parameter to <code>Custom</code>, you must use the CreateInstance action's AmiId parameter to specify the custom AMI that you want to use. For more information on the standard operating systems, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-os.html\">Operating Systems</a>For more information on how to use custom AMIs with OpsWorks, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-custom-ami.html\">Using Custom AMIs</a>.</p>",
            "serialized_name": "DefaultOs"
          },
          "hostname_theme": {
            "type": "string",
            "documentation": "<p>The stack's host name theme, with spaces are replaced by underscores. The theme is used to generate host names for the stack's instances. By default, <code>HostnameTheme</code> is set to Layer_Dependent, which creates host names by appending integers to the layer's short name. The other themes are:</p> <ul> <li>Baked_Goods</li> <li>Clouds</li> <li>European_Cities</li> <li>Fruits</li> <li>Greek_Deities</li> <li>Legendary_Creatures_from_Japan</li> <li>Planets_and_Moons</li> <li>Roman_Deities</li> <li>Scottish_Islands</li> <li>US_Cities</li> <li>Wild_Cats</li> </ul> <p>To obtain a generated host name, call <code>GetHostNameSuggestion</code>, which returns a host name based on the current theme.</p>",
            "serialized_name": "HostnameTheme"
          },
          "default_availability_zone": {
            "type": "string",
            "documentation": "<p>The stack default Availability Zone. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a>.</p>",
            "serialized_name": "DefaultAvailabilityZone"
          },
          "custom_json": {
            "type": "string",
            "documentation": "<p>A string that contains user-defined, custom JSON. It is used to override the corresponding default stack configuration JSON values. The string should be in the following format and must escape characters such as '\"'.:</p> <code>\"{\\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\",...}\"</code> <p>For more information on custom JSON, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-json.html\">Use Custom JSON to Modify the Stack Configuration JSON</a>.</p>",
            "serialized_name": "CustomJson"
          },
          "configuration_manager": {
            "type": "structure",
            "documentation": "<p>The configuration manager. When you create a stack we recommend that you use the configuration manager to specify the Chef version, 0.9 or 11.4. The default value is currently 0.9. However, we expect to change the default value to 11.4 in late August 2013.</p>",
            "serialized_name": "ConfigurationManager",
            "members": {
              "name": {
                "type": "string",
                "documentation": "<p>The name. This parameter must be set to \"Chef\".</p>",
                "serialized_name": "Name"
              },
              "version": {
                "type": "string",
                "documentation": "<p>The Chef version. This parameter must be set to \"0.9\" or \"11.4\". The default value is \"0.9\". However, we expect to change the default value to \"11.4\" in late August 2013.</p>",
                "serialized_name": "Version"
              }
            }
          },
          "use_custom_cookbooks": {
            "type": "boolean",
            "documentation": "<p>Whether the stack uses custom cookbooks.</p>",
            "serialized_name": "UseCustomCookbooks"
          },
          "custom_cookbooks_source": {
            "type": "structure",
            "documentation": "<p>Contains the information required to retrieve an app or cookbook from a repository. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html\">Creating Apps</a> or <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook.html\">Custom Recipes and Cookbooks</a>.</p>",
            "serialized_name": "CustomCookbooksSource",
            "members": {
              "type": {
                "type": "string",
                "documentation": "<p>The repository type.</p>",
                "serialized_name": "Type",
                "enum": [
                  "git",
                  "svn",
                  "archive",
                  "s3"
                ]
              },
              "url": {
                "type": "string",
                "documentation": "<p>The source URL. </p>",
                "serialized_name": "Url"
              },
              "username": {
                "type": "string",
                "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Username</code> to the appropriate AWS access key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Username</code> to the user name.</li> </ul>",
                "serialized_name": "Username"
              },
              "password": {
                "type": "string",
                "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Password</code> to the appropriate AWS secret key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Password</code> to the password.</li> </ul>",
                "serialized_name": "Password"
              },
              "ssh_key": {
                "type": "string",
                "documentation": "<p>The repository's SSH key.</p>",
                "serialized_name": "SshKey"
              },
              "revision": {
                "type": "string",
                "documentation": "<p>The application's version. AWS OpsWorks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.</p>",
                "serialized_name": "Revision"
              }
            }
          },
          "default_ssh_key_name": {
            "type": "string",
            "documentation": "<p>A default SSH key for the stack instances. You can override this value when you create or update an instance.</p>",
            "serialized_name": "DefaultSshKeyName"
          },
          "default_root_device_type": {
            "type": "string",
            "documentation": "<p>The default root device type. This value is used by default for all instances in the cloned stack, but you can override it when you create an instance. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device\">Storage for the Root Device</a>.</p>",
            "serialized_name": "DefaultRootDeviceType",
            "enum": [
              "ebs",
              "instance-store"
            ]
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>CreateStack</code> request.</p>",
        "members": {
          "stack_id": {
            "type": "string",
            "documentation": "<p>The stack ID, which is an opaque string that you use to identify the stack when performing actions such as <code>DescribeStacks</code>.</p>",
            "serialized_name": "StackId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "create_user_profile": {
      "name": "CreateUserProfile",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Creates a new user profile.</p>",
      "input": {
        "type": "structure",
        "members": {
          "iam_user_arn": {
            "type": "string",
            "required": true,
            "documentation": "<p>The user's IAM ARN.</p>",
            "serialized_name": "IamUserArn"
          },
          "ssh_username": {
            "type": "string",
            "documentation": "<p>The user's SSH user name.</p>",
            "serialized_name": "SshUsername"
          },
          "ssh_public_key": {
            "type": "string",
            "documentation": "<p>The user's public SSH key.</p>",
            "serialized_name": "SshPublicKey"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>CreateUserProfile</code> request.</p>",
        "members": {
          "iam_user_arn": {
            "type": "string",
            "documentation": "<p>The user's IAM ARN.</p>",
            "serialized_name": "IamUserArn"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "delete_app": {
      "name": "DeleteApp",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Deletes a specified app.</p>",
      "input": {
        "type": "structure",
        "members": {
          "app_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The app ID.</p>",
            "serialized_name": "AppId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "delete_instance": {
      "name": "DeleteInstance",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Deletes a specified instance. You must stop an instance before you can delete it. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-delete.html\">Deleting Instances</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "instance_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The instance ID.</p>",
            "serialized_name": "InstanceId"
          },
          "delete_elastic_ip": {
            "type": "boolean",
            "documentation": "<p>Whether to delete the instance Elastic IP address.</p>",
            "serialized_name": "DeleteElasticIp"
          },
          "delete_volumes": {
            "type": "boolean",
            "documentation": "<p>Whether to delete the instance Amazon EBS volumes.</p>",
            "serialized_name": "DeleteVolumes"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "delete_layer": {
      "name": "DeleteLayer",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Deletes a specified layer. You must first stop and then delete all associated instances. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-delete.html\">How to Delete a Layer</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "layer_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The layer ID.</p>",
            "serialized_name": "LayerId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "delete_stack": {
      "name": "DeleteStack",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Deletes a specified stack. You must first delete all instances, layers, and apps. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-shutting.html\">Shut Down a Stack</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack ID.</p>",
            "serialized_name": "StackId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "delete_user_profile": {
      "name": "DeleteUserProfile",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Deletes a user profile.</p>",
      "input": {
        "type": "structure",
        "members": {
          "iam_user_arn": {
            "type": "string",
            "required": true,
            "documentation": "<p>The user's IAM ARN.</p>",
            "serialized_name": "IamUserArn"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_apps": {
      "name": "DescribeApps",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Requests a description of a specified set of apps.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "documentation": "<p>The app stack ID. If you use this parameter, <code>DescribeApps</code> returns a description of the apps in the specified stack.</p>",
            "serialized_name": "StackId"
          },
          "app_ids": {
            "type": "list",
            "documentation": "<p>An array of app IDs for the apps to be described. If you use this parameter, <code>DescribeApps</code> returns a description of the specified apps. Otherwise, it returns a description of every app.</p>",
            "serialized_name": "AppIds",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeApps</code> request.</p>",
        "members": {
          "apps": {
            "type": "list",
            "documentation": "An array of <code>App</code> objects that describe the specified apps.",
            "serialized_name": "Apps",
            "members": {
              "type": "structure",
              "documentation": "<p>A description of the app.</p>",
              "members": {
                "app_id": {
                  "type": "string",
                  "documentation": "<p>The app ID.</p>",
                  "serialized_name": "AppId"
                },
                "stack_id": {
                  "type": "string",
                  "documentation": "<p>The app stack ID.</p>",
                  "serialized_name": "StackId"
                },
                "shortname": {
                  "type": "string",
                  "documentation": "<p>The app's short name.</p>",
                  "serialized_name": "Shortname"
                },
                "name": {
                  "type": "string",
                  "documentation": "<p>The app name.</p>",
                  "serialized_name": "Name"
                },
                "description": {
                  "type": "string",
                  "documentation": "<p>A description of the app.</p>",
                  "serialized_name": "Description"
                },
                "type": {
                  "type": "string",
                  "documentation": "<p>The app type.</p>",
                  "serialized_name": "Type",
                  "enum": [
                    "rails",
                    "php",
                    "nodejs",
                    "static",
                    "other"
                  ]
                },
                "app_source": {
                  "type": "structure",
                  "documentation": "<p>A <code>Source</code> object that describes the app repository.</p>",
                  "serialized_name": "AppSource",
                  "members": {
                    "type": {
                      "type": "string",
                      "documentation": "<p>The repository type.</p>",
                      "serialized_name": "Type",
                      "enum": [
                        "git",
                        "svn",
                        "archive",
                        "s3"
                      ]
                    },
                    "url": {
                      "type": "string",
                      "documentation": "<p>The source URL. </p>",
                      "serialized_name": "Url"
                    },
                    "username": {
                      "type": "string",
                      "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Username</code> to the appropriate AWS access key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Username</code> to the user name.</li> </ul>",
                      "serialized_name": "Username"
                    },
                    "password": {
                      "type": "string",
                      "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Password</code> to the appropriate AWS secret key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Password</code> to the password.</li> </ul>",
                      "serialized_name": "Password"
                    },
                    "ssh_key": {
                      "type": "string",
                      "documentation": "<p>The repository's SSH key.</p>",
                      "serialized_name": "SshKey"
                    },
                    "revision": {
                      "type": "string",
                      "documentation": "<p>The application's version. AWS OpsWorks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.</p>",
                      "serialized_name": "Revision"
                    }
                  }
                },
                "domains": {
                  "type": "list",
                  "documentation": "<p>The app vhost settings, with multiple domains separated by commas. For example: <code>'www.example.com, example.com'</code></p>",
                  "serialized_name": "Domains",
                  "members": {
                    "type": "string"
                  }
                },
                "enable_ssl": {
                  "type": "boolean",
                  "documentation": "<p>Whether to enable SSL for the app.</p>",
                  "serialized_name": "EnableSsl"
                },
                "ssl_configuration": {
                  "type": "structure",
                  "documentation": "<p>An <code>SslConfiguration</code> object with the SSL configuration.</p>",
                  "serialized_name": "SslConfiguration",
                  "members": {
                    "certificate": {
                      "type": "string",
                      "documentation": "<p>The contents of the certificate's domain.crt file.</p>",
                      "serialized_name": "Certificate"
                    },
                    "private_key": {
                      "type": "string",
                      "documentation": "<p>The private key; the contents of the certificate's domain.kex file.</p>",
                      "serialized_name": "PrivateKey"
                    },
                    "chain": {
                      "type": "string",
                      "documentation": "<p>Optional. Can be used to specify an intermediate certificate authority key or client authentication.</p>",
                      "serialized_name": "Chain"
                    }
                  }
                },
                "attributes": {
                  "type": "map",
                  "documentation": "<p>The contents of the stack attributes bag.</p>",
                  "serialized_name": "Attributes",
                  "keys": {
                    "type": "string",
                    "enum": [
                      "DocumentRoot",
                      "RailsEnv",
                      "AutoBundleOnDeploy"
                    ]
                  },
                  "members": {
                    "type": "string"
                  }
                },
                "created_at": {
                  "type": "string",
                  "documentation": "<p>When the app was created.</p>",
                  "serialized_name": "CreatedAt"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_commands": {
      "name": "DescribeCommands",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Describes the results of specified commands.</p>",
      "input": {
        "type": "structure",
        "members": {
          "deployment_id": {
            "type": "string",
            "documentation": "<p>The deployment ID. If you include this parameter, <code>DescribeCommands</code> returns a description of the commands associated with the specified deployment.</p>",
            "serialized_name": "DeploymentId"
          },
          "instance_id": {
            "type": "string",
            "documentation": "<p>The instance ID. If you include this parameter, <code>DescribeCommands</code> returns a description of the commands associated with the specified instance.</p>",
            "serialized_name": "InstanceId"
          },
          "command_ids": {
            "type": "list",
            "documentation": "<p>An array of command IDs. If you include this parameter, <code>DescribeCommands</code> returns a description of the specified commands. Otherwise, it returns a description of every command.</p>",
            "serialized_name": "CommandIds",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeCommands</code> request.</p>",
        "members": {
          "commands": {
            "type": "list",
            "documentation": "<p>An array of <code>Command</code> objects that describe each of the specified commands.</p>",
            "serialized_name": "Commands",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes a command.</p>",
              "members": {
                "command_id": {
                  "type": "string",
                  "documentation": "<p>The command ID.</p>",
                  "serialized_name": "CommandId"
                },
                "instance_id": {
                  "type": "string",
                  "documentation": "<p>The ID of the instance where the command was executed.</p>",
                  "serialized_name": "InstanceId"
                },
                "deployment_id": {
                  "type": "string",
                  "documentation": "<p>The command deployment ID.</p>",
                  "serialized_name": "DeploymentId"
                },
                "created_at": {
                  "type": "string",
                  "documentation": "<p>Date and time when the command was run.</p>",
                  "serialized_name": "CreatedAt"
                },
                "acknowledged_at": {
                  "type": "string",
                  "documentation": "<p>Date and time when the command was acknowledged.</p>",
                  "serialized_name": "AcknowledgedAt"
                },
                "completed_at": {
                  "type": "string",
                  "documentation": "<p>Date when the command completed.</p>",
                  "serialized_name": "CompletedAt"
                },
                "status": {
                  "type": "string",
                  "documentation": "<p>The command status:</p> <ul> <li>failed</li> <li>successful</li> <li>skipped</li> <li>pending</li> </ul>",
                  "serialized_name": "Status"
                },
                "exit_code": {
                  "type": "integer",
                  "documentation": "<p>The command exit code.</p>",
                  "serialized_name": "ExitCode"
                },
                "log_url": {
                  "type": "string",
                  "documentation": "<p>The URL of the command log.</p>",
                  "serialized_name": "LogUrl"
                },
                "type": {
                  "type": "string",
                  "documentation": "<p>The command type:</p> <ul> <li>deploy</li> <li>rollback</li> <li>start</li> <li>stop</li> <li>restart</li> <li>undeploy</li> <li>update_dependencies</li> <li>install_dependencies</li> <li>update_custom_cookbooks</li> <li>execute_recipes</li> </ul>",
                  "serialized_name": "Type"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_deployments": {
      "name": "DescribeDeployments",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Requests a description of a specified set of deployments.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "documentation": "<p>The stack ID. If you include this parameter, <code>DescribeDeployments</code> returns a description of the commands associated with the specified stack.</p>",
            "serialized_name": "StackId"
          },
          "app_id": {
            "type": "string",
            "documentation": "<p>The app ID. If you include this parameter, <code>DescribeDeployments</code> returns a description of the commands associated with the specified app.</p>",
            "serialized_name": "AppId"
          },
          "deployment_ids": {
            "type": "list",
            "documentation": "<p>An array of deployment IDs to be described. If you include this parameter, <code>DescribeDeployments</code> returns a description of the specified deployments. Otherwise, it returns a description of every deployment.</p>",
            "serialized_name": "DeploymentIds",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeDeployments</code> request.</p>",
        "members": {
          "deployments": {
            "type": "list",
            "documentation": "<p>An array of <code>Deployment</code> objects that describe the deployments.</p>",
            "serialized_name": "Deployments",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes a deployment of a stack or app.</p>",
              "members": {
                "deployment_id": {
                  "type": "string",
                  "documentation": "<p>The deployment ID.</p>",
                  "serialized_name": "DeploymentId"
                },
                "stack_id": {
                  "type": "string",
                  "documentation": "<p>The stack ID.</p>",
                  "serialized_name": "StackId"
                },
                "app_id": {
                  "type": "string",
                  "documentation": "<p>The app ID.</p>",
                  "serialized_name": "AppId"
                },
                "created_at": {
                  "type": "string",
                  "documentation": "<p>Date when the deployment was created.</p>",
                  "serialized_name": "CreatedAt"
                },
                "completed_at": {
                  "type": "string",
                  "documentation": "<p>Date when the deployment completed.</p>",
                  "serialized_name": "CompletedAt"
                },
                "duration": {
                  "type": "integer",
                  "documentation": "<p>The deployment duration.</p>",
                  "serialized_name": "Duration"
                },
                "iam_user_arn": {
                  "type": "string",
                  "documentation": "<p>The user's IAM ARN.</p>",
                  "serialized_name": "IamUserArn"
                },
                "comment": {
                  "type": "string",
                  "documentation": "<p>A user-defined comment.</p>",
                  "serialized_name": "Comment"
                },
                "command": {
                  "type": "structure",
                  "documentation": "<p>Used to specify a deployment operation.</p>",
                  "serialized_name": "Command",
                  "members": {
                    "name": {
                      "type": "string",
                      "documentation": "<p>Specifies the deployment operation. You can specify only one command.</p> <p>For stacks, the available commands are:</p> <ul> <li> <code></code>execute_recipes: Execute the recipes that are specified by the <code>Args</code> parameter.</li> <li> <code></code>install_dependencies: Installs the stack's dependencies.</li> <li> <code></code>update_custom_cookbooks: Update the stack's custom cookbooks.</li> <li> <code></code>update_dependencies: Update the stack's dependencies.</li> </ul> <p>For apps, the available commands are:</p> <ul> <li> <code>deploy</code>: Deploy the app.</li> <li> <code>rollback</code> Roll the app back to the previous version. When you update an app, AWS OpsWorks stores the previous version, up to a maximum of five versions. You can use this command to roll an app back as many as four versions.</li> <li> <code>start</code>: Start the app's web or application server.</li> <li> <code>stop</code>: Stop the app's web or application server.</li> <li> <code>restart</code>: Restart the app's web or application server.</li> <li> <code>undeploy</code>: Undeploy the app.</li> </ul>",
                      "serialized_name": "Name",
                      "enum": [
                        "install_dependencies",
                        "update_dependencies",
                        "update_custom_cookbooks",
                        "execute_recipes",
                        "deploy",
                        "rollback",
                        "start",
                        "stop",
                        "restart",
                        "undeploy"
                      ]
                    },
                    "args": {
                      "type": "map",
                      "documentation": "<p>An array of command arguments. This parameter is currently used only to specify the list of recipes to be executed by the <code>ExecuteRecipes</code> command.</p>",
                      "serialized_name": "Args",
                      "keys": {
                        "type": "string"
                      },
                      "members": {
                        "type": "list",
                        "members": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "documentation": "<p>The deployment status:</p> <ul> <li>running</li> <li>successful</li> <li>failed</li> </ul>",
                  "serialized_name": "Status"
                },
                "custom_json": {
                  "type": "string",
                  "documentation": "<p>A string that contains user-defined custom JSON. It is used to override the corresponding default stack configuration JSON values for stack. The string should be in the following format and must escape characters such as '\"'.:</p> <code>\"{\\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\",...}\"</code> <p>For more information on custom JSON, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-json.html\">Use Custom JSON to Modify the Stack Configuration JSON</a>.</p>",
                  "serialized_name": "CustomJson"
                },
                "instance_ids": {
                  "type": "list",
                  "documentation": "<p>The IDs of the target instances.</p>",
                  "serialized_name": "InstanceIds",
                  "members": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_elastic_ips": {
      "name": "DescribeElasticIps",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Describes an instance's <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html\">Elastic IP addresses</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "instance_id": {
            "type": "string",
            "documentation": "<p>The instance ID. If you include this parameter, <code>DescribeElasticIps</code> returns a description of the Elastic IP addresses associated with the specified instance.</p>",
            "serialized_name": "InstanceId"
          },
          "ips": {
            "type": "list",
            "documentation": "<p>An array of Elastic IP addresses to be described. If you include this parameter, <code>DescribeElasticIps</code> returns a description of the specified Elastic IP addresses. Otherwise, it returns a description of every Elastic IP address.</p>",
            "serialized_name": "Ips",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeElasticIps</code> request.</p>",
        "members": {
          "elastic_ips": {
            "type": "list",
            "documentation": "<p>An <code>ElasticIps</code> object that describes the specified Elastic IP addresses.</p>",
            "serialized_name": "ElasticIps",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes an Elastic IP address.</p>",
              "members": {
                "ip": {
                  "type": "string",
                  "documentation": "<p>The IP address</p>",
                  "serialized_name": "Ip"
                },
                "name": {
                  "type": "string",
                  "documentation": "<p>The name.</p>",
                  "serialized_name": "Name"
                },
                "domain": {
                  "type": "string",
                  "documentation": "<p>The domain.</p>",
                  "serialized_name": "Domain"
                },
                "region": {
                  "type": "string",
                  "documentation": "<p>The AWS region. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a>.</p>",
                  "serialized_name": "Region"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_elastic_load_balancers": {
      "name": "DescribeElasticLoadBalancers",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Describes a stack's Elastic Load Balancing instances.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "documentation": "<p>A stack ID. The action describes the Elastic Load Balancing instances for the stack.</p>",
            "serialized_name": "StackId"
          },
          "layer_ids": {
            "type": "list",
            "documentation": "<p>A list of layer IDs. The action describes the Elastic Load Balancing instances for the specified layers.</p>",
            "serialized_name": "LayerIds",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeElasticLoadBalancers</code> request.</p>",
        "members": {
          "elastic_load_balancers": {
            "type": "list",
            "documentation": "<p>A list of <code>ElasticLoadBalancer</code> objects that describe the specified Elastic Load Balancing instances.</p>",
            "serialized_name": "ElasticLoadBalancers",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes an Elastic Load Balancing instance.</p>",
              "members": {
                "elastic_load_balancer_name": {
                  "type": "string",
                  "documentation": "<p>The Elastic Load Balancing instance's name.</p>",
                  "serialized_name": "ElasticLoadBalancerName"
                },
                "region": {
                  "type": "string",
                  "documentation": "<p>The instance's AWS region.</p>",
                  "serialized_name": "Region"
                },
                "dns_name": {
                  "type": "string",
                  "documentation": "<p>The instance's public DNS name.</p>",
                  "serialized_name": "DnsName"
                },
                "stack_id": {
                  "type": "string",
                  "documentation": "<p>The ID of the stack that the instance is associated with.</p>",
                  "serialized_name": "StackId"
                },
                "layer_id": {
                  "type": "string",
                  "documentation": "<p>The ID of the layer that the instance is attached to.</p>",
                  "serialized_name": "LayerId"
                },
                "vpc_id": {
                  "type": "string",
                  "documentation": "<p>The VPC ID.</p>",
                  "serialized_name": "VpcId"
                },
                "availability_zones": {
                  "type": "list",
                  "documentation": "<p>The instance's Availability Zones.</p>",
                  "serialized_name": "AvailabilityZones",
                  "members": {
                    "type": "string"
                  }
                },
                "ec_2_instance_ids": {
                  "type": "list",
                  "documentation": "<p>A list of the EC2 instances that the Elastic Load Balancing instance is managing traffic for.</p>",
                  "serialized_name": "Ec2InstanceIds",
                  "members": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_instances": {
      "name": "DescribeInstances",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Requests a description of a set of instances associated with a specified ID or IDs.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "documentation": "<p>A stack ID. If you use this parameter, <code>DescribeInstances</code> returns descriptions of the instances associated with the specified stack.</p>",
            "serialized_name": "StackId"
          },
          "layer_id": {
            "type": "string",
            "documentation": "<p>A layer ID. If you use this parameter, <code>DescribeInstances</code> returns descriptions of the instances associated with the specified layer.</p>",
            "serialized_name": "LayerId"
          },
          "instance_ids": {
            "type": "list",
            "documentation": "<p>An array of instance IDs to be described. If you use this parameter, <code>DescribeInstances</code> returns a description of the specified instances. Otherwise, it returns a description of every instance.</p>",
            "serialized_name": "InstanceIds",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeInstances</code> request.</p>",
        "members": {
          "instances": {
            "type": "list",
            "documentation": "<p>An array of <code>Instance</code> objects that describe the instances.</p>",
            "serialized_name": "Instances",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes an instance.</p>",
              "members": {
                "instance_id": {
                  "type": "string",
                  "documentation": "<p>The instance ID.</p>",
                  "serialized_name": "InstanceId"
                },
                "ec2_instance_id": {
                  "type": "string",
                  "documentation": "<p>The ID of the associated Amazon EC2 instance.</p>",
                  "serialized_name": "Ec2InstanceId"
                },
                "hostname": {
                  "type": "string",
                  "documentation": "<p>The instance host name.</p>",
                  "serialized_name": "Hostname"
                },
                "stack_id": {
                  "type": "string",
                  "documentation": "<p>The stack ID.</p>",
                  "serialized_name": "StackId"
                },
                "layer_ids": {
                  "type": "list",
                  "documentation": "<p>An array containing the instance layer IDs.</p>",
                  "serialized_name": "LayerIds",
                  "members": {
                    "type": "string"
                  }
                },
                "security_group_ids": {
                  "type": "list",
                  "documentation": "<p>An array containing the instance security group IDs.</p>",
                  "serialized_name": "SecurityGroupIds",
                  "members": {
                    "type": "string"
                  }
                },
                "instance_type": {
                  "type": "string",
                  "documentation": "<p>The instance type. AWS OpsWorks supports all instance types except Cluster Compute, Cluster GPU, and High Memory Cluster. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance Families and Types</a>. The parameter values that specify the various types are in the API Name column of the Available Instance Types table.</p>",
                  "serialized_name": "InstanceType"
                },
                "instance_profile_arn": {
                  "type": "string",
                  "documentation": "<p>The ARN of the instance's IAM profile. For more information about IAM ARNs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Using Identifiers</a>.</p>",
                  "serialized_name": "InstanceProfileArn"
                },
                "status": {
                  "type": "string",
                  "documentation": "<p>The instance status:</p> <ul> <li>requested</li> <li>booting</li> <li>running_setup</li> <li>online</li> <li>setup_failed</li> <li>start_failed</li> <li>terminating</li> <li>terminated</li> <li>stopped</li> <li>connection_lost</li> </ul>",
                  "serialized_name": "Status"
                },
                "os": {
                  "type": "string",
                  "documentation": "<p>The instance operating system.</p>",
                  "serialized_name": "Os"
                },
                "ami_id": {
                  "type": "string",
                  "documentation": "<p>A custom AMI ID to be used to create the instance. The AMI should be based on one of the standard AWS OpsWorks APIs: Amazon Linux or Ubuntu 12.04 LTS. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances.html\">Instances</a></p>",
                  "serialized_name": "AmiId"
                },
                "availability_zone": {
                  "type": "string",
                  "documentation": "<p>The instance Availability Zone. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a>.</p>",
                  "serialized_name": "AvailabilityZone"
                },
                "public_dns": {
                  "type": "string",
                  "documentation": "<p>The instance public DNS name.</p>",
                  "serialized_name": "PublicDns"
                },
                "private_dns": {
                  "type": "string",
                  "documentation": "<p>The instance private DNS name.</p>",
                  "serialized_name": "PrivateDns"
                },
                "public_ip": {
                  "type": "string",
                  "documentation": "<p>The instance public IP address.</p>",
                  "serialized_name": "PublicIp"
                },
                "private_ip": {
                  "type": "string",
                  "documentation": "<p>The instance private IP address.</p>",
                  "serialized_name": "PrivateIp"
                },
                "elastic_ip": {
                  "type": "string",
                  "documentation": "<p>The instance <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html\">Elastic IP address </a>.</p>",
                  "serialized_name": "ElasticIp"
                },
                "auto_scaling_type": {
                  "type": "string",
                  "documentation": "<p>The instance's auto scaling type, which has three possible values:</p> <ul> <li> <b>AlwaysRunning</b>: A 24/7 instance, which is not affected by auto scaling.</li> <li> <b>TimeBasedAutoScaling</b>: A time-based auto scaling instance, which is started and stopped based on a specified schedule.</li> <li> <b>LoadBasedAutoScaling</b>: A load-based auto scaling instance, which is started and stopped based on load metrics.</li> </ul>",
                  "serialized_name": "AutoScalingType",
                  "enum": [
                    "load",
                    "timer"
                  ]
                },
                "ssh_key_name": {
                  "type": "string",
                  "documentation": "<p>The instance SSH key name.</p>",
                  "serialized_name": "SshKeyName"
                },
                "ssh_host_rsa_key_fingerprint": {
                  "type": "string",
                  "documentation": "<p>The SSH key's RSA fingerprint.</p>",
                  "serialized_name": "SshHostRsaKeyFingerprint"
                },
                "ssh_host_dsa_key_fingerprint": {
                  "type": "string",
                  "documentation": "<p>The SSH key's DSA fingerprint.</p>",
                  "serialized_name": "SshHostDsaKeyFingerprint"
                },
                "created_at": {
                  "type": "string",
                  "documentation": "<p>The time that the instance was created.</p>",
                  "serialized_name": "CreatedAt"
                },
                "last_service_error_id": {
                  "type": "string",
                  "documentation": "<p>The ID of the last service error. For more information, call DescribeServiceErrors.</p>",
                  "serialized_name": "LastServiceErrorId"
                },
                "architecture": {
                  "type": "string",
                  "documentation": "<p>The instance architecture, \"i386\" or \"x86_64\".</p>",
                  "serialized_name": "Architecture",
                  "enum": [
                    "x86_64",
                    "i386"
                  ]
                },
                "root_device_type": {
                  "type": "string",
                  "documentation": "<p>The instance root device type. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device\">Storage for the Root Device</a>.</p>",
                  "serialized_name": "RootDeviceType",
                  "enum": [
                    "ebs",
                    "instance-store"
                  ]
                },
                "root_device_volume_id": {
                  "type": "string",
                  "documentation": "<p>The root device volume ID.</p>",
                  "serialized_name": "RootDeviceVolumeId"
                },
                "install_updates_on_boot": {
                  "type": "boolean",
                  "documentation": "<p>Whether to install operating system and package updates when the instance boots. The default value is <code>true</code>. If this value is set to <code>false</code>, you must then update your instances manually by using CreateDeployment to run the <code>update_dependencies</code> stack command or manually running <code>yum</code> (Amazon Linux) or <code>apt-get</code> (Ubuntu) on the instances. </p> We strongly recommend using the default value of <code>true</code>, to ensure that your instances have the latest security updates.",
                  "serialized_name": "InstallUpdatesOnBoot"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_layers": {
      "name": "DescribeLayers",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Requests a description of one or more layers in a specified stack.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack ID.</p>",
            "serialized_name": "StackId"
          },
          "layer_ids": {
            "type": "list",
            "documentation": "<p>An array of layer IDs that specify the layers to be described. If you omit this parameter, <code>DescribeLayers</code> returns a description of every layer in the specified stack.</p>",
            "serialized_name": "LayerIds",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeLayers</code> request.</p>",
        "members": {
          "layers": {
            "type": "list",
            "documentation": "<p>An array of <code>Layer</code> objects that describe the layers.</p>",
            "serialized_name": "Layers",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes a layer.</p>",
              "members": {
                "stack_id": {
                  "type": "string",
                  "documentation": "<p>The layer stack ID.</p>",
                  "serialized_name": "StackId"
                },
                "layer_id": {
                  "type": "string",
                  "documentation": "<p>The layer ID.</p>",
                  "serialized_name": "LayerId"
                },
                "type": {
                  "type": "string",
                  "documentation": "<p>The layer type, which must be one of the following:</p> <ul> <li>Custom</li> <li>GangliaMonitoringMaster</li> <li>HaProxy</li> <li>MemcachedServer</li> <li>MySqlMaster</li> <li>NodeJsAppServer</li> <li>PhpAppServer</li> <li>RailsAppServer</li> <li>WebServer</li> </ul>",
                  "serialized_name": "Type",
                  "enum": [
                    "lb",
                    "web",
                    "php-app",
                    "rails-app",
                    "nodejs-app",
                    "memcached",
                    "db-master",
                    "monitoring-master",
                    "custom"
                  ]
                },
                "name": {
                  "type": "string",
                  "documentation": "<p>The layer name.</p>",
                  "serialized_name": "Name"
                },
                "shortname": {
                  "type": "string",
                  "documentation": "<p>The layer short name.</p>",
                  "serialized_name": "Shortname"
                },
                "attributes": {
                  "type": "map",
                  "documentation": "<p>The layer attributes.</p>",
                  "serialized_name": "Attributes",
                  "keys": {
                    "type": "string",
                    "enum": [
                      "EnableHaproxyStats",
                      "HaproxyStatsUrl",
                      "HaproxyStatsUser",
                      "HaproxyStatsPassword",
                      "HaproxyHealthCheckUrl",
                      "HaproxyHealthCheckMethod",
                      "MysqlRootPassword",
                      "MysqlRootPasswordUbiquitous",
                      "GangliaUrl",
                      "GangliaUser",
                      "GangliaPassword",
                      "MemcachedMemory",
                      "NodejsVersion",
                      "RubyVersion",
                      "RubygemsVersion",
                      "ManageBundler",
                      "BundlerVersion",
                      "RailsStack",
                      "PassengerVersion"
                    ]
                  },
                  "members": {
                    "type": "string"
                  }
                },
                "custom_instance_profile_arn": {
                  "type": "string",
                  "documentation": "<p>The ARN of the default IAM profile to be used for the layer's EC2 instances. For more information about IAM ARNs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Using Identifiers</a>.</p>",
                  "serialized_name": "CustomInstanceProfileArn"
                },
                "custom_security_group_ids": {
                  "type": "list",
                  "documentation": "<p>An array containing the layer's custom security group IDs.</p>",
                  "serialized_name": "CustomSecurityGroupIds",
                  "members": {
                    "type": "string"
                  }
                },
                "default_security_group_names": {
                  "type": "list",
                  "documentation": "<p>An array containing the layer's security group names.</p>",
                  "serialized_name": "DefaultSecurityGroupNames",
                  "members": {
                    "type": "string"
                  }
                },
                "packages": {
                  "type": "list",
                  "documentation": "<p>An array of <code>Package</code> objects that describe the layer's packages.</p>",
                  "serialized_name": "Packages",
                  "members": {
                    "type": "string"
                  }
                },
                "volume_configurations": {
                  "type": "list",
                  "documentation": "<p>A <code>VolumeConfigurations</code> object that describes the layer's Amazon EBS volumes.</p>",
                  "serialized_name": "VolumeConfigurations",
                  "members": {
                    "type": "structure",
                    "documentation": "<p>Describes an Amazon EBS volume configuration.</p>",
                    "members": {
                      "mount_point": {
                        "type": "string",
                        "documentation": "<p>The volume mount point. For example \"/dev/sdh\".</p>",
                        "serialized_name": "MountPoint"
                      },
                      "raid_level": {
                        "type": "integer",
                        "documentation": "<p>The volume <a href=\"http://en.wikipedia.org/wiki/Standard_RAID_levels\">RAID level</a>.</p>",
                        "serialized_name": "RaidLevel"
                      },
                      "number_of_disks": {
                        "type": "integer",
                        "documentation": "<p>The number of disks in the volume.</p>",
                        "serialized_name": "NumberOfDisks"
                      },
                      "size": {
                        "type": "integer",
                        "documentation": "<p>The volume size.</p>",
                        "serialized_name": "Size"
                      }
                    }
                  }
                },
                "enable_auto_healing": {
                  "type": "boolean",
                  "documentation": "<p>Whether auto healing is disabled for the layer.</p>",
                  "serialized_name": "EnableAutoHealing"
                },
                "auto_assign_elastic_ips": {
                  "type": "boolean",
                  "documentation": "<p>Whether the layer has an automatically assigned <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html\">Elastic IP address</a>.</p>",
                  "serialized_name": "AutoAssignElasticIps"
                },
                "default_recipes": {
                  "type": "structure",
                  "documentation": "<p>AWS OpsWorks supports five life<?oxy_delete author=\"witsoej\" timestamp=\"20130319T132659-0700\" content=\"-\">cycle events, <b>setup</b>, <b>configuration</b>, <b>deploy</b>, <b>undeploy</b>, and <b>shutdown</b>. For each layer, AWS OpsWorks runs a set of standard recipes for each event. In addition, you can provide custom recipes for any or all layers and events. AWS OpsWorks runs custom event recipes after the standard recipes. <code>LayerCustomRecipes</code> specifies the custom recipes for a particular layer to be run in response to each of the five events. </p> <p>To specify a recipe, use the cookbook's directory name in the repository followed by two colons and the recipe name, which is the recipe's file name without the .rb extension. For example: phpapp2::dbsetup specifies the dbsetup.rb recipe in the repository's phpapp2 folder. </p>",
                  "serialized_name": "DefaultRecipes",
                  "members": {
                    "setup": {
                      "type": "list",
                      "documentation": "<p>An array of custom recipe names to be run following a <code>setup</code> event.</p>",
                      "serialized_name": "Setup",
                      "members": {
                        "type": "string"
                      }
                    },
                    "configure": {
                      "type": "list",
                      "documentation": "<p>An array of custom recipe names to be run following a <code>configure</code> event.</p>",
                      "serialized_name": "Configure",
                      "members": {
                        "type": "string"
                      }
                    },
                    "deploy": {
                      "type": "list",
                      "documentation": "<p>An array of custom recipe names to be run following a <code>deploy</code> event.</p>",
                      "serialized_name": "Deploy",
                      "members": {
                        "type": "string"
                      }
                    },
                    "undeploy": {
                      "type": "list",
                      "documentation": "<p>An array of custom recipe names to be run following a <code>undeploy</code> event.</p>",
                      "serialized_name": "Undeploy",
                      "members": {
                        "type": "string"
                      }
                    },
                    "shutdown": {
                      "type": "list",
                      "documentation": "<p>An array of custom recipe names to be run following a <code>shutdown</code> event.</p>",
                      "serialized_name": "Shutdown",
                      "members": {
                        "type": "string"
                      }
                    }
                  }
                },
                "custom_recipes": {
                  "type": "structure",
                  "documentation": "<p>A <code>LayerCustomRecipes</code> object that specifies the layer's custom recipes.</p>",
                  "serialized_name": "CustomRecipes",
                  "members": {
                    "setup": {
                      "type": "list",
                      "documentation": "<p>An array of custom recipe names to be run following a <code>setup</code> event.</p>",
                      "serialized_name": "Setup",
                      "members": {
                        "type": "string"
                      }
                    },
                    "configure": {
                      "type": "list",
                      "documentation": "<p>An array of custom recipe names to be run following a <code>configure</code> event.</p>",
                      "serialized_name": "Configure",
                      "members": {
                        "type": "string"
                      }
                    },
                    "deploy": {
                      "type": "list",
                      "documentation": "<p>An array of custom recipe names to be run following a <code>deploy</code> event.</p>",
                      "serialized_name": "Deploy",
                      "members": {
                        "type": "string"
                      }
                    },
                    "undeploy": {
                      "type": "list",
                      "documentation": "<p>An array of custom recipe names to be run following a <code>undeploy</code> event.</p>",
                      "serialized_name": "Undeploy",
                      "members": {
                        "type": "string"
                      }
                    },
                    "shutdown": {
                      "type": "list",
                      "documentation": "<p>An array of custom recipe names to be run following a <code>shutdown</code> event.</p>",
                      "serialized_name": "Shutdown",
                      "members": {
                        "type": "string"
                      }
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "documentation": "<p>Date when the layer was created.</p>",
                  "serialized_name": "CreatedAt"
                },
                "install_updates_on_boot": {
                  "type": "boolean",
                  "documentation": "<p>Whether to install operating system and package updates when the instance boots. The default value is <code>true</code>. If this value is set to <code>false</code>, you must then update your instances manually by using CreateDeployment to run the <code>update_dependencies</code> stack command or manually running <code>yum</code> (Amazon Linux) or <code>apt-get</code> (Ubuntu) on the instances. </p> We strongly recommend using the default value of <code>true</code>, to ensure that your instances have the latest security updates.",
                  "serialized_name": "InstallUpdatesOnBoot"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_load_based_auto_scaling": {
      "name": "DescribeLoadBasedAutoScaling",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Describes load-based auto scaling configurations for specified layers.</p>",
      "input": {
        "type": "structure",
        "members": {
          "layer_ids": {
            "type": "list",
            "required": true,
            "documentation": "<p>An array of layer IDs.</p>",
            "serialized_name": "LayerIds",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeLoadBasedAutoScaling</code> request.</p>",
        "members": {
          "load_based_auto_scaling_configurations": {
            "type": "list",
            "documentation": "<p>An array of <code>LoadBasedAutoScalingConfiguration</code> objects that describe each layer's configuration.</p>",
            "serialized_name": "LoadBasedAutoScalingConfigurations",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes a layer's load-based auto scaling configuration.</p>",
              "members": {
                "layer_id": {
                  "type": "string",
                  "documentation": "<p>The layer ID.</p>",
                  "serialized_name": "LayerId"
                },
                "enable": {
                  "type": "boolean",
                  "documentation": "<p>Whether load-based auto scaling is enabled for the layer.</p>",
                  "serialized_name": "Enable"
                },
                "up_scaling": {
                  "type": "structure",
                  "documentation": "<p>A <code>LoadBasedAutoscalingInstruction</code> object that describes the upscaling configuration, which defines how and when AWS OpsWorks increases the number of instances.</p>",
                  "serialized_name": "UpScaling",
                  "members": {
                    "instance_count": {
                      "type": "integer",
                      "documentation": "<p>The number of instances to add or remove when the load exceeds a threshold.</p>",
                      "serialized_name": "InstanceCount"
                    },
                    "thresholds_wait_time": {
                      "type": "integer",
                      "documentation": "<p>The amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.</p>",
                      "serialized_name": "ThresholdsWaitTime"
                    },
                    "ignore_metrics_time": {
                      "type": "integer",
                      "documentation": "<p>The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks should ignore metrics and not raise any additional scaling events. For example, AWS OpsWorks adds new instances following an upscaling event but the instances won't start reducing the load until they have been booted and configured. There is no point in raising additional scaling events during that operation, which typically takes several minutes. <code>IgnoreMetricsTime</code> allows you to direct AWS OpsWorks to not raise any scaling events long enough to get the new instances online.</p>",
                      "serialized_name": "IgnoreMetricsTime"
                    },
                    "cpu_threshold": {
                      "type": "float",
                      "documentation": "<p>The CPU utilization threshold, as a percent of the available CPU.</p>",
                      "serialized_name": "CpuThreshold"
                    },
                    "memory_threshold": {
                      "type": "float",
                      "documentation": "<p>The memory utilization threshold, as a percent of the available memory.</p>",
                      "serialized_name": "MemoryThreshold"
                    },
                    "load_threshold": {
                      "type": "float",
                      "documentation": "<p>The load threshold. For more information about how load is computed, see <a href=\"http://en.wikipedia.org/wiki/Load_%28computing%29\">Load (computing)</a>.</p>",
                      "serialized_name": "LoadThreshold"
                    }
                  }
                },
                "down_scaling": {
                  "type": "structure",
                  "documentation": "<p>A <code>LoadBasedAutoscalingInstruction</code> object that describes the downscaling configuration, which defines how and when AWS OpsWorks reduces the number of instances.</p>",
                  "serialized_name": "DownScaling",
                  "members": {
                    "instance_count": {
                      "type": "integer",
                      "documentation": "<p>The number of instances to add or remove when the load exceeds a threshold.</p>",
                      "serialized_name": "InstanceCount"
                    },
                    "thresholds_wait_time": {
                      "type": "integer",
                      "documentation": "<p>The amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.</p>",
                      "serialized_name": "ThresholdsWaitTime"
                    },
                    "ignore_metrics_time": {
                      "type": "integer",
                      "documentation": "<p>The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks should ignore metrics and not raise any additional scaling events. For example, AWS OpsWorks adds new instances following an upscaling event but the instances won't start reducing the load until they have been booted and configured. There is no point in raising additional scaling events during that operation, which typically takes several minutes. <code>IgnoreMetricsTime</code> allows you to direct AWS OpsWorks to not raise any scaling events long enough to get the new instances online.</p>",
                      "serialized_name": "IgnoreMetricsTime"
                    },
                    "cpu_threshold": {
                      "type": "float",
                      "documentation": "<p>The CPU utilization threshold, as a percent of the available CPU.</p>",
                      "serialized_name": "CpuThreshold"
                    },
                    "memory_threshold": {
                      "type": "float",
                      "documentation": "<p>The memory utilization threshold, as a percent of the available memory.</p>",
                      "serialized_name": "MemoryThreshold"
                    },
                    "load_threshold": {
                      "type": "float",
                      "documentation": "<p>The load threshold. For more information about how load is computed, see <a href=\"http://en.wikipedia.org/wiki/Load_%28computing%29\">Load (computing)</a>.</p>",
                      "serialized_name": "LoadThreshold"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_permissions": {
      "name": "DescribePermissions",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Describes the permissions for a specified stack.</p>",
      "input": {
        "type": "structure",
        "members": {
          "iam_user_arn": {
            "type": "string",
            "required": true,
            "documentation": "<p>The user's IAM ARN. For more information about IAM ARNs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Using Identifiers</a>.</p>",
            "serialized_name": "IamUserArn"
          },
          "stack_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack ID.</p>",
            "serialized_name": "StackId"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribePermissions</code> request.</p>",
        "members": {
          "permissions": {
            "type": "list",
            "documentation": "<p>An array of <code>Permission</code> objects that describe the stack permissions.</p> <ul> <li>If the request object contains only a stack ID, the array contains a <code>Permission</code> object with permissions for each of the stack IAM ARNs.</li> <li>If the request object contains only an IAM ARN, the array contains a <code>Permission</code> object with permissions for each of the user's stack IDs.</li> <li>If the request contains a stack ID and an IAM ARN, the array contains a single <code>Permission</code> object with permissions for the specified stack and IAM ARN.</li> </ul>",
            "serialized_name": "Permissions",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes stack or user permissions.</p>",
              "members": {
                "stack_id": {
                  "type": "string",
                  "documentation": "<p>A stack ID.</p>",
                  "serialized_name": "StackId"
                },
                "iam_user_arn": {
                  "type": "string",
                  "documentation": "<p>The Amazon Resource Name (ARN) for an AWS Identity and Access Management (IAM) role. For more information about IAM ARNs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Using Identifiers</a>.</p>",
                  "serialized_name": "IamUserArn"
                },
                "allow_ssh": {
                  "type": "boolean",
                  "documentation": "<p>Whether the user can use SSH.</p>",
                  "serialized_name": "AllowSsh"
                },
                "allow_sudo": {
                  "type": "boolean",
                  "documentation": "<p>Whether the user can use <b>sudo</b>.</p>",
                  "serialized_name": "AllowSudo"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_raid_arrays": {
      "name": "DescribeRaidArrays",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Describe an instance's RAID arrays.</p>",
      "input": {
        "type": "structure",
        "members": {
          "instance_id": {
            "type": "string",
            "documentation": "<p>The instance ID. If you use this parameter, <code>DescribeRaidArrays</code> returns descriptions of the RAID arrays associated with the specified instance. </p>",
            "serialized_name": "InstanceId"
          },
          "raid_array_ids": {
            "type": "list",
            "documentation": "<p>An array of RAID array IDs. If you use this parameter, <code>DescribeRaidArrays</code> returns descriptions of the specified arrays. Otherwise, it returns a description of every array.</p>",
            "serialized_name": "RaidArrayIds",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeRaidArrays</code> request.</p>",
        "members": {
          "raid_arrays": {
            "type": "list",
            "documentation": "<p>A <code>RaidArrays</code> object that describes the specified RAID arrays.</p>",
            "serialized_name": "RaidArrays",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes an instance's RAID array.</p>",
              "members": {
                "raid_array_id": {
                  "type": "string",
                  "documentation": "<p>The array ID.</p>",
                  "serialized_name": "RaidArrayId"
                },
                "instance_id": {
                  "type": "string",
                  "documentation": "<p>The instance ID.</p>",
                  "serialized_name": "InstanceId"
                },
                "name": {
                  "type": "string",
                  "documentation": "<p>The array name.</p>",
                  "serialized_name": "Name"
                },
                "raid_level": {
                  "type": "integer",
                  "documentation": "<p>The <a href=\"http://en.wikipedia.org/wiki/Standard_RAID_levels\">RAID level</a>.</p>",
                  "serialized_name": "RaidLevel"
                },
                "number_of_disks": {
                  "type": "integer",
                  "documentation": "<p>The number of disks in the array.</p>",
                  "serialized_name": "NumberOfDisks"
                },
                "size": {
                  "type": "integer",
                  "documentation": "<p>The array's size.</p>",
                  "serialized_name": "Size"
                },
                "device": {
                  "type": "string",
                  "documentation": "<p>The array's Linux device. For example /dev/mdadm0.</p>",
                  "serialized_name": "Device"
                },
                "mount_point": {
                  "type": "string",
                  "documentation": "<p>The array's mount point.</p>",
                  "serialized_name": "MountPoint"
                },
                "availability_zone": {
                  "type": "string",
                  "documentation": "<p>The array's Availability Zone. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a>.</p>",
                  "serialized_name": "AvailabilityZone"
                },
                "created_at": {
                  "type": "string",
                  "documentation": "<p>When the RAID array was created.</p>",
                  "serialized_name": "CreatedAt"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_service_errors": {
      "name": "DescribeServiceErrors",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Describes AWS OpsWorks service errors.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "documentation": "<p>The stack ID. If you use this parameter, <code>DescribeServiceErrors</code> returns descriptions of the errors associated with the specified stack.</p>",
            "serialized_name": "StackId"
          },
          "instance_id": {
            "type": "string",
            "documentation": "<p>The instance ID. If you use this parameter, <code>DescribeServiceErrors</code> returns descriptions of the errors associated with the specified instance.</p>",
            "serialized_name": "InstanceId"
          },
          "service_error_ids": {
            "type": "list",
            "documentation": "<p>An array of service error IDs. If you use this parameter, <code>DescribeServiceErrors</code> returns descriptions of the specified errors. Otherwise, it returns a description of every error.</p>",
            "serialized_name": "ServiceErrorIds",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeServiceErrors</code> request.</p>",
        "members": {
          "service_errors": {
            "type": "list",
            "documentation": "<p>An array of <code>ServiceError</code> objects that describe the specified service errors.</p>",
            "serialized_name": "ServiceErrors",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes an AWS OpsWorks service error.</p>",
              "members": {
                "service_error_id": {
                  "type": "string",
                  "documentation": "<p>The error ID.</p>",
                  "serialized_name": "ServiceErrorId"
                },
                "stack_id": {
                  "type": "string",
                  "documentation": "<p>The stack ID.</p>",
                  "serialized_name": "StackId"
                },
                "instance_id": {
                  "type": "string",
                  "documentation": "<p>The instance ID.</p>",
                  "serialized_name": "InstanceId"
                },
                "type": {
                  "type": "string",
                  "documentation": "<p>The error type.</p>",
                  "serialized_name": "Type"
                },
                "message": {
                  "type": "string",
                  "documentation": "<p>A message that describes the error.</p>",
                  "serialized_name": "Message"
                },
                "created_at": {
                  "type": "string",
                  "documentation": "<p>When the error occurred.</p>",
                  "serialized_name": "CreatedAt"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_stacks": {
      "name": "DescribeStacks",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Requests a description of one or more stacks.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_ids": {
            "type": "list",
            "documentation": "<p>An array of stack IDs that specify the stacks to be described. If you omit this parameter, <code>DescribeStacks</code> returns a description of every stack.</p>",
            "serialized_name": "StackIds",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeStacks</code> request.</p>",
        "members": {
          "stacks": {
            "type": "list",
            "documentation": "<p>An array of <code>Stack</code> objects that describe the stacks.</p>",
            "serialized_name": "Stacks",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes a stack.</p>",
              "members": {
                "stack_id": {
                  "type": "string",
                  "documentation": "<p>The stack ID.</p>",
                  "serialized_name": "StackId"
                },
                "name": {
                  "type": "string",
                  "documentation": "<p>The stack name.</p>",
                  "serialized_name": "Name"
                },
                "region": {
                  "type": "string",
                  "documentation": "<p>The stack AWS region, such as \"us-east-1\". For more information about AWS regions, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a>.</p>",
                  "serialized_name": "Region"
                },
                "attributes": {
                  "type": "map",
                  "documentation": "<p>The contents of the stack's attributes bag.</p>",
                  "serialized_name": "Attributes",
                  "keys": {
                    "type": "string",
                    "enum": [
                      "Color"
                    ]
                  },
                  "members": {
                    "type": "string"
                  }
                },
                "service_role_arn": {
                  "type": "string",
                  "documentation": "<p>The stack AWS Identity and Access Management (IAM) role.</p>",
                  "serialized_name": "ServiceRoleArn"
                },
                "default_instance_profile_arn": {
                  "type": "string",
                  "documentation": "<p>The ARN of an IAM profile that is the default profile for all of the stack's EC2 instances. For more information about IAM ARNs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Using Identifiers</a>.</p>",
                  "serialized_name": "DefaultInstanceProfileArn"
                },
                "default_os": {
                  "type": "string",
                  "documentation": "<p>The stack default operating system, which must be set to one of the following.</p> <ul> <li>Standard operating systems: <code>Amazon Linux</code> or <code>Ubuntu</code> 12.04 LTS\"</li> <li>Custom AMIs: <code>Custom</code> </li> </ul> <p>The default option is <code>Amazon Linux</code>. If you set this parameter to <code>Custom</code>, you must use the CreateInstance action's AmiId parameter to specify the custom AMI that you want to use. For more information on the standard operating systems, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-os.html\">Operating Systems</a>For more information on how to use custom AMIs with OpsWorks, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-custom-ami.html\">Using Custom AMIs</a>.</p>",
                  "serialized_name": "DefaultOs"
                },
                "hostname_theme": {
                  "type": "string",
                  "documentation": "<p>The stack host name theme, with spaces replaced by underscores.</p>",
                  "serialized_name": "HostnameTheme"
                },
                "default_availability_zone": {
                  "type": "string",
                  "documentation": "<p>The stack's default Availability Zone. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a>.</p>",
                  "serialized_name": "DefaultAvailabilityZone"
                },
                "custom_json": {
                  "type": "string",
                  "documentation": "<p>A string that contains user-defined, custom JSON. It is used to override the corresponding default stack configuration JSON values. The string should be in the following format and must escape characters such as '\"'.:</p> <code>\"{\\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\",...}\"</code> <p>For more information on custom JSON, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-json.html\">Use Custom JSON to Modify the Stack Configuration JSON</a>.</p>",
                  "serialized_name": "CustomJson"
                },
                "configuration_manager": {
                  "type": "structure",
                  "documentation": "<p>The configuration manager.</p>",
                  "serialized_name": "ConfigurationManager",
                  "members": {
                    "name": {
                      "type": "string",
                      "documentation": "<p>The name. This parameter must be set to \"Chef\".</p>",
                      "serialized_name": "Name"
                    },
                    "version": {
                      "type": "string",
                      "documentation": "<p>The Chef version. This parameter must be set to \"0.9\" or \"11.4\". The default value is \"0.9\". However, we expect to change the default value to \"11.4\" in late August 2013.</p>",
                      "serialized_name": "Version"
                    }
                  }
                },
                "use_custom_cookbooks": {
                  "type": "boolean",
                  "documentation": "<p>Whether the stack uses custom cookbooks.</p>",
                  "serialized_name": "UseCustomCookbooks"
                },
                "custom_cookbooks_source": {
                  "type": "structure",
                  "documentation": "<p>Contains the information required to retrieve an app or cookbook from a repository. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html\">Creating Apps</a> or <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook.html\">Custom Recipes and Cookbooks</a>.</p>",
                  "serialized_name": "CustomCookbooksSource",
                  "members": {
                    "type": {
                      "type": "string",
                      "documentation": "<p>The repository type.</p>",
                      "serialized_name": "Type",
                      "enum": [
                        "git",
                        "svn",
                        "archive",
                        "s3"
                      ]
                    },
                    "url": {
                      "type": "string",
                      "documentation": "<p>The source URL. </p>",
                      "serialized_name": "Url"
                    },
                    "username": {
                      "type": "string",
                      "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Username</code> to the appropriate AWS access key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Username</code> to the user name.</li> </ul>",
                      "serialized_name": "Username"
                    },
                    "password": {
                      "type": "string",
                      "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Password</code> to the appropriate AWS secret key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Password</code> to the password.</li> </ul>",
                      "serialized_name": "Password"
                    },
                    "ssh_key": {
                      "type": "string",
                      "documentation": "<p>The repository's SSH key.</p>",
                      "serialized_name": "SshKey"
                    },
                    "revision": {
                      "type": "string",
                      "documentation": "<p>The application's version. AWS OpsWorks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.</p>",
                      "serialized_name": "Revision"
                    }
                  }
                },
                "default_ssh_key_name": {
                  "type": "string",
                  "documentation": "<p>A default SSH key for the stack's instances. You can override this value when you create or update an instance.</p>",
                  "serialized_name": "DefaultSshKeyName"
                },
                "created_at": {
                  "type": "string",
                  "documentation": "<p>Date when the stack was created.</p>",
                  "serialized_name": "CreatedAt"
                },
                "default_root_device_type": {
                  "type": "string",
                  "documentation": "<p>The default root device type. This value is used by default for all instances in the cloned stack, but you can override it when you create an instance. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device\">Storage for the Root Device</a>.</p>",
                  "serialized_name": "DefaultRootDeviceType",
                  "enum": [
                    "ebs",
                    "instance-store"
                  ]
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_time_based_auto_scaling": {
      "name": "DescribeTimeBasedAutoScaling",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Describes time-based auto scaling configurations for specified instances.</p>",
      "input": {
        "type": "structure",
        "members": {
          "instance_ids": {
            "type": "list",
            "required": true,
            "documentation": "<p>An array of instance IDs.</p>",
            "serialized_name": "InstanceIds",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeTimeBasedAutoScaling</code> request.</p>",
        "members": {
          "time_based_auto_scaling_configurations": {
            "type": "list",
            "documentation": "<p>An array of <code>TimeBasedAutoScalingConfiguration</code> objects that describe the configuration for the specified instances.</p>",
            "serialized_name": "TimeBasedAutoScalingConfigurations",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes an instance's time-based auto scaling configuration.</p>",
              "members": {
                "instance_id": {
                  "type": "string",
                  "documentation": "<p>The instance ID.</p>",
                  "serialized_name": "InstanceId"
                },
                "auto_scaling_schedule": {
                  "type": "structure",
                  "documentation": "<p>A <code>WeeklyAutoScalingSchedule</code> object with the instance schedule.</p>",
                  "serialized_name": "AutoScalingSchedule",
                  "members": {
                    "monday": {
                      "type": "map",
                      "documentation": "<p>The schedule for Monday.</p>",
                      "serialized_name": "Monday",
                      "keys": {
                        "type": "string"
                      },
                      "members": {
                        "type": "string"
                      }
                    },
                    "tuesday": {
                      "type": "map",
                      "documentation": "<p>The schedule for Tuesday.</p>",
                      "serialized_name": "Tuesday",
                      "keys": {
                        "type": "string"
                      },
                      "members": {
                        "type": "string"
                      }
                    },
                    "wednesday": {
                      "type": "map",
                      "documentation": "<p>The schedule for Wednesday.</p>",
                      "serialized_name": "Wednesday",
                      "keys": {
                        "type": "string"
                      },
                      "members": {
                        "type": "string"
                      }
                    },
                    "thursday": {
                      "type": "map",
                      "documentation": "<p>The schedule for Thursday.</p>",
                      "serialized_name": "Thursday",
                      "keys": {
                        "type": "string"
                      },
                      "members": {
                        "type": "string"
                      }
                    },
                    "friday": {
                      "type": "map",
                      "documentation": "<p>The schedule for Friday.</p>",
                      "serialized_name": "Friday",
                      "keys": {
                        "type": "string"
                      },
                      "members": {
                        "type": "string"
                      }
                    },
                    "saturday": {
                      "type": "map",
                      "documentation": "<p>The schedule for Saturday.</p>",
                      "serialized_name": "Saturday",
                      "keys": {
                        "type": "string"
                      },
                      "members": {
                        "type": "string"
                      }
                    },
                    "sunday": {
                      "type": "map",
                      "documentation": "<p>The schedule for Sunday.</p>",
                      "serialized_name": "Sunday",
                      "keys": {
                        "type": "string"
                      },
                      "members": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_user_profiles": {
      "name": "DescribeUserProfiles",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Describe specified users.</p>",
      "input": {
        "type": "structure",
        "members": {
          "iam_user_arns": {
            "type": "list",
            "required": true,
            "documentation": "<p>An array of IAM user ARNs that identify the users to be described. </p>",
            "serialized_name": "IamUserArns",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeUserProfiles</code> request.</p>",
        "members": {
          "user_profiles": {
            "type": "list",
            "documentation": "<p>A <code>Users</code> object that describes the specified users.</p>",
            "serialized_name": "UserProfiles",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes a user's SSH information.</p>",
              "members": {
                "iam_user_arn": {
                  "type": "string",
                  "documentation": "<p>The user IAM ARN.</p>",
                  "serialized_name": "IamUserArn"
                },
                "name": {
                  "type": "string",
                  "documentation": "<p>The user name.</p>",
                  "serialized_name": "Name"
                },
                "ssh_username": {
                  "type": "string",
                  "documentation": "<p>The user's SSH user name.</p>",
                  "serialized_name": "SshUsername"
                },
                "ssh_public_key": {
                  "type": "string",
                  "documentation": "<p>The user's SSH public key.</p>",
                  "serialized_name": "SshPublicKey"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "describe_volumes": {
      "name": "DescribeVolumes",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Describes an instance's Amazon EBS volumes.</p>",
      "input": {
        "type": "structure",
        "members": {
          "instance_id": {
            "type": "string",
            "documentation": "<p>The instance ID. If you use this parameter, <code>DescribeVolumes</code> returns descriptions of the volumes associated with the specified instance.</p>",
            "serialized_name": "InstanceId"
          },
          "raid_array_id": {
            "type": "string",
            "documentation": "<p>The RAID array ID. If you use this parameter, <code>DescribeVolumes</code> returns descriptions of the volumes associated with the specified RAID array.</p>",
            "serialized_name": "RaidArrayId"
          },
          "volume_ids": {
            "type": "list",
            "documentation": "<p>Am array of volume IDs. If you use this parameter, <code>DescribeVolumes</code> returns descriptions of the specified volumes. Otherwise, it returns a description of every volume.</p>",
            "serialized_name": "VolumeIds",
            "members": {
              "type": "string"
            }
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>DescribeVolumes</code> request.</p>",
        "members": {
          "volumes": {
            "type": "list",
            "documentation": "<p>An array of volume IDs.</p>",
            "serialized_name": "Volumes",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes an instance's Amazon EBS volume.</p>",
              "members": {
                "volume_id": {
                  "type": "string",
                  "documentation": "<p>The volume ID.</p>",
                  "serialized_name": "VolumeId"
                },
                "ec2_volume_id": {
                  "type": "string",
                  "documentation": "<p>The Amazon EC2 volume ID.</p>",
                  "serialized_name": "Ec2VolumeId"
                },
                "name": {
                  "type": "string",
                  "documentation": "<p>The volume name.</p>",
                  "serialized_name": "Name"
                },
                "raid_array_id": {
                  "type": "string",
                  "documentation": "<p>The RAID array ID.</p>",
                  "serialized_name": "RaidArrayId"
                },
                "instance_id": {
                  "type": "string",
                  "documentation": "<p>The instance ID.</p>",
                  "serialized_name": "InstanceId"
                },
                "status": {
                  "type": "string",
                  "documentation": "<p>The value returned by <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVolumes.html\">DescribeVolumes</a>.</p>",
                  "serialized_name": "Status"
                },
                "size": {
                  "type": "integer",
                  "documentation": "<p>The volume size.</p>",
                  "serialized_name": "Size"
                },
                "device": {
                  "type": "string",
                  "documentation": "<p>The device name.</p>",
                  "serialized_name": "Device"
                },
                "mount_point": {
                  "type": "string",
                  "documentation": "<p>The volume mount point. For example \"/dev/sdh\".</p>",
                  "serialized_name": "MountPoint"
                },
                "region": {
                  "type": "string",
                  "documentation": "<p>The AWS region. For more information about AWS regions, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a>.</p>",
                  "serialized_name": "Region"
                },
                "availability_zone": {
                  "type": "string",
                  "documentation": "<p>The volume Availability Zone. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a>.</p>",
                  "serialized_name": "AvailabilityZone"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "detach_elastic_load_balancer": {
      "name": "DetachElasticLoadBalancer",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Detaches a specified Elastic Load Balancing instance from it's layer.</p>",
      "input": {
        "type": "structure",
        "members": {
          "elastic_load_balancer_name": {
            "type": "string",
            "required": true,
            "documentation": "<p>The Elastic Load Balancing instance's name.</p>",
            "serialized_name": "ElasticLoadBalancerName"
          },
          "layer_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The ID of the layer that the Elastic Load Balancing instance is attached to.</p>",
            "serialized_name": "LayerId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "get_hostname_suggestion": {
      "name": "GetHostnameSuggestion",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Gets a generated host name for the specified layer, based on the current host name theme.</p>",
      "input": {
        "type": "structure",
        "members": {
          "layer_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The layer ID.</p>",
            "serialized_name": "LayerId"
          }
        }
      },
      "output": {
        "type": "structure",
        "documentation": "<p>Contains the response to a <code>GetHostnameSuggestion</code> request.</p>",
        "members": {
          "layer_id": {
            "type": "string",
            "documentation": "<p>The layer ID.</p>",
            "serialized_name": "LayerId"
          },
          "hostname": {
            "type": "string",
            "documentation": "<p>The generated host name.</p>",
            "serialized_name": "Hostname"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "reboot_instance": {
      "name": "RebootInstance",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Reboots a specified instance. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-starting.html\">Starting, Stopping, and Rebooting Instances</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "instance_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The instance ID.</p>",
            "serialized_name": "InstanceId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "set_load_based_auto_scaling": {
      "name": "SetLoadBasedAutoScaling",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Specify the load-based auto scaling configuration for a specified layer. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-autoscaling.html\">Managing Load with Time-based and Load-based Instances</a>.</p> To use load-based auto scaling, you must create a set of load-based auto scaling instances. Load-based auto scaling operates only on the instances from that set, so you must ensure that you have created enough instances to handle the maximum anticipated load.",
      "input": {
        "type": "structure",
        "members": {
          "layer_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The layer ID.</p>",
            "serialized_name": "LayerId"
          },
          "enable": {
            "type": "boolean",
            "documentation": "<p>Enables load-based auto scaling for the layer.</p>",
            "serialized_name": "Enable"
          },
          "up_scaling": {
            "type": "structure",
            "documentation": "<p>An <code>AutoScalingThresholds</code> object with the upscaling threshold configuration. If the load exceeds these thresholds for a specified amount of time, AWS OpsWorks starts a specified number of instances.</p>",
            "serialized_name": "UpScaling",
            "members": {
              "instance_count": {
                "type": "integer",
                "documentation": "<p>The number of instances to add or remove when the load exceeds a threshold.</p>",
                "serialized_name": "InstanceCount"
              },
              "thresholds_wait_time": {
                "type": "integer",
                "documentation": "<p>The amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.</p>",
                "serialized_name": "ThresholdsWaitTime"
              },
              "ignore_metrics_time": {
                "type": "integer",
                "documentation": "<p>The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks should ignore metrics and not raise any additional scaling events. For example, AWS OpsWorks adds new instances following an upscaling event but the instances won't start reducing the load until they have been booted and configured. There is no point in raising additional scaling events during that operation, which typically takes several minutes. <code>IgnoreMetricsTime</code> allows you to direct AWS OpsWorks to not raise any scaling events long enough to get the new instances online.</p>",
                "serialized_name": "IgnoreMetricsTime"
              },
              "cpu_threshold": {
                "type": "float",
                "documentation": "<p>The CPU utilization threshold, as a percent of the available CPU.</p>",
                "serialized_name": "CpuThreshold"
              },
              "memory_threshold": {
                "type": "float",
                "documentation": "<p>The memory utilization threshold, as a percent of the available memory.</p>",
                "serialized_name": "MemoryThreshold"
              },
              "load_threshold": {
                "type": "float",
                "documentation": "<p>The load threshold. For more information about how load is computed, see <a href=\"http://en.wikipedia.org/wiki/Load_%28computing%29\">Load (computing)</a>.</p>",
                "serialized_name": "LoadThreshold"
              }
            }
          },
          "down_scaling": {
            "type": "structure",
            "documentation": "<p>An <code>AutoScalingThresholds</code> object with the downscaling threshold configuration. If the load falls below these thresholds for a specified amount of time, AWS OpsWorks stops a specified number of instances.</p>",
            "serialized_name": "DownScaling",
            "members": {
              "instance_count": {
                "type": "integer",
                "documentation": "<p>The number of instances to add or remove when the load exceeds a threshold.</p>",
                "serialized_name": "InstanceCount"
              },
              "thresholds_wait_time": {
                "type": "integer",
                "documentation": "<p>The amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.</p>",
                "serialized_name": "ThresholdsWaitTime"
              },
              "ignore_metrics_time": {
                "type": "integer",
                "documentation": "<p>The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks should ignore metrics and not raise any additional scaling events. For example, AWS OpsWorks adds new instances following an upscaling event but the instances won't start reducing the load until they have been booted and configured. There is no point in raising additional scaling events during that operation, which typically takes several minutes. <code>IgnoreMetricsTime</code> allows you to direct AWS OpsWorks to not raise any scaling events long enough to get the new instances online.</p>",
                "serialized_name": "IgnoreMetricsTime"
              },
              "cpu_threshold": {
                "type": "float",
                "documentation": "<p>The CPU utilization threshold, as a percent of the available CPU.</p>",
                "serialized_name": "CpuThreshold"
              },
              "memory_threshold": {
                "type": "float",
                "documentation": "<p>The memory utilization threshold, as a percent of the available memory.</p>",
                "serialized_name": "MemoryThreshold"
              },
              "load_threshold": {
                "type": "float",
                "documentation": "<p>The load threshold. For more information about how load is computed, see <a href=\"http://en.wikipedia.org/wiki/Load_%28computing%29\">Load (computing)</a>.</p>",
                "serialized_name": "LoadThreshold"
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "set_permission": {
      "name": "SetPermission",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Specifies a stack's permissions. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingsecurity.html\">Security and Permissions</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack ID.</p>",
            "serialized_name": "StackId"
          },
          "iam_user_arn": {
            "type": "string",
            "required": true,
            "documentation": "<p>The user's IAM ARN.</p>",
            "serialized_name": "IamUserArn"
          },
          "allow_ssh": {
            "type": "boolean",
            "documentation": "<p>The user is allowed to use SSH to communicate with the instance.</p>",
            "serialized_name": "AllowSsh"
          },
          "allow_sudo": {
            "type": "boolean",
            "documentation": "<p>The user is allowed to use <b>sudo</b> to elevate privileges.</p>",
            "serialized_name": "AllowSudo"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "set_time_based_auto_scaling": {
      "name": "SetTimeBasedAutoScaling",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Specify the time-based auto scaling configuration for a specified instance. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-autoscaling.html\">Managing Load with Time-based and Load-based Instances</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "instance_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The instance ID.</p>",
            "serialized_name": "InstanceId"
          },
          "auto_scaling_schedule": {
            "type": "structure",
            "documentation": "<p>An <code>AutoScalingSchedule</code> with the instance schedule.</p>",
            "serialized_name": "AutoScalingSchedule",
            "members": {
              "monday": {
                "type": "map",
                "documentation": "<p>The schedule for Monday.</p>",
                "serialized_name": "Monday",
                "keys": {
                  "type": "string"
                },
                "members": {
                  "type": "string"
                }
              },
              "tuesday": {
                "type": "map",
                "documentation": "<p>The schedule for Tuesday.</p>",
                "serialized_name": "Tuesday",
                "keys": {
                  "type": "string"
                },
                "members": {
                  "type": "string"
                }
              },
              "wednesday": {
                "type": "map",
                "documentation": "<p>The schedule for Wednesday.</p>",
                "serialized_name": "Wednesday",
                "keys": {
                  "type": "string"
                },
                "members": {
                  "type": "string"
                }
              },
              "thursday": {
                "type": "map",
                "documentation": "<p>The schedule for Thursday.</p>",
                "serialized_name": "Thursday",
                "keys": {
                  "type": "string"
                },
                "members": {
                  "type": "string"
                }
              },
              "friday": {
                "type": "map",
                "documentation": "<p>The schedule for Friday.</p>",
                "serialized_name": "Friday",
                "keys": {
                  "type": "string"
                },
                "members": {
                  "type": "string"
                }
              },
              "saturday": {
                "type": "map",
                "documentation": "<p>The schedule for Saturday.</p>",
                "serialized_name": "Saturday",
                "keys": {
                  "type": "string"
                },
                "members": {
                  "type": "string"
                }
              },
              "sunday": {
                "type": "map",
                "documentation": "<p>The schedule for Sunday.</p>",
                "serialized_name": "Sunday",
                "keys": {
                  "type": "string"
                },
                "members": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "start_instance": {
      "name": "StartInstance",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Starts a specified instance. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-starting.html\">Starting, Stopping, and Rebooting Instances</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "instance_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The instance ID.</p>",
            "serialized_name": "InstanceId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "start_stack": {
      "name": "StartStack",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Starts stack's instances. </p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack ID.</p>",
            "serialized_name": "StackId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "stop_instance": {
      "name": "StopInstance",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Stops a specified instance. When you stop a standard instance, the data disappears and must be reinstalled when you restart the instance. You can stop an Amazon EBS-backed instance without losing data. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-starting.html\">Starting, Stopping, and Rebooting Instances</a>.</p>",
      "input": {
        "type": "structure",
        "members": {
          "instance_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The instance ID.</p>",
            "serialized_name": "InstanceId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "stop_stack": {
      "name": "StopStack",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Stops a specified stack.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack ID.</p>",
            "serialized_name": "StackId"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "update_app": {
      "name": "UpdateApp",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Updates a specified app.</p>",
      "input": {
        "type": "structure",
        "members": {
          "app_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The app ID.</p>",
            "serialized_name": "AppId"
          },
          "name": {
            "type": "string",
            "documentation": "<p>The app name.</p>",
            "serialized_name": "Name"
          },
          "description": {
            "type": "string",
            "documentation": "<p>A description of the app.</p>",
            "serialized_name": "Description"
          },
          "type": {
            "type": "string",
            "documentation": "<p>The app type.</p>",
            "serialized_name": "Type",
            "enum": [
              "rails",
              "php",
              "nodejs",
              "static",
              "other"
            ]
          },
          "app_source": {
            "type": "structure",
            "documentation": "<p>A <code>Source</code> object that specifies the app repository.</p>",
            "serialized_name": "AppSource",
            "members": {
              "type": {
                "type": "string",
                "documentation": "<p>The repository type.</p>",
                "serialized_name": "Type",
                "enum": [
                  "git",
                  "svn",
                  "archive",
                  "s3"
                ]
              },
              "url": {
                "type": "string",
                "documentation": "<p>The source URL. </p>",
                "serialized_name": "Url"
              },
              "username": {
                "type": "string",
                "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Username</code> to the appropriate AWS access key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Username</code> to the user name.</li> </ul>",
                "serialized_name": "Username"
              },
              "password": {
                "type": "string",
                "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Password</code> to the appropriate AWS secret key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Password</code> to the password.</li> </ul>",
                "serialized_name": "Password"
              },
              "ssh_key": {
                "type": "string",
                "documentation": "<p>The repository's SSH key.</p>",
                "serialized_name": "SshKey"
              },
              "revision": {
                "type": "string",
                "documentation": "<p>The application's version. AWS OpsWorks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.</p>",
                "serialized_name": "Revision"
              }
            }
          },
          "domains": {
            "type": "list",
            "documentation": "<p>The app's virtual host settings, with multiple domains separated by commas. For example: <code>'www.example.com, example.com'</code></p>",
            "serialized_name": "Domains",
            "members": {
              "type": "string"
            }
          },
          "enable_ssl": {
            "type": "boolean",
            "documentation": "<p>Whether SSL is enabled for the app.</p>",
            "serialized_name": "EnableSsl"
          },
          "ssl_configuration": {
            "type": "structure",
            "documentation": "<p>An <code>SslConfiguration</code> object with the SSL configuration.</p>",
            "serialized_name": "SslConfiguration",
            "members": {
              "certificate": {
                "type": "string",
                "required": true,
                "documentation": "<p>The contents of the certificate's domain.crt file.</p>",
                "serialized_name": "Certificate"
              },
              "private_key": {
                "type": "string",
                "required": true,
                "documentation": "<p>The private key; the contents of the certificate's domain.kex file.</p>",
                "serialized_name": "PrivateKey"
              },
              "chain": {
                "type": "string",
                "documentation": "<p>Optional. Can be used to specify an intermediate certificate authority key or client authentication.</p>",
                "serialized_name": "Chain"
              }
            }
          },
          "attributes": {
            "type": "map",
            "documentation": "<p>One or more user-defined key/value pairs to be added to the stack attributes bag.</p>",
            "serialized_name": "Attributes",
            "keys": {
              "type": "string",
              "enum": [
                "DocumentRoot",
                "RailsEnv",
                "AutoBundleOnDeploy"
              ]
            },
            "members": {
              "type": "string"
            }
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "update_instance": {
      "name": "UpdateInstance",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Updates a specified instance.</p>",
      "input": {
        "type": "structure",
        "members": {
          "instance_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The instance ID.</p>",
            "serialized_name": "InstanceId"
          },
          "layer_ids": {
            "type": "list",
            "documentation": "<p>The instance's layer IDs.</p>",
            "serialized_name": "LayerIds",
            "members": {
              "type": "string"
            }
          },
          "instance_type": {
            "type": "string",
            "documentation": "<p>The instance type. AWS OpsWorks supports all instance types except Cluster Compute, Cluster GPU, and High Memory Cluster. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance Families and Types</a>. The parameter values that you use to specify the various types are in the API Name column of the Available Instance Types table.</p>",
            "serialized_name": "InstanceType"
          },
          "auto_scaling_type": {
            "type": "string",
            "documentation": "<p>The instance's auto scaling type, which has three possible values:</p> <ul> <li> <b>AlwaysRunning</b>: A 24/7 instance, which is not affected by auto scaling.</li> <li> <b>TimeBasedAutoScaling</b>: A time-based auto scaling instance, which is started and stopped based on a specified schedule.</li> <li> <b>LoadBasedAutoScaling</b>: A load-based auto scaling instance, which is started and stopped based on load metrics.</li> </ul>",
            "serialized_name": "AutoScalingType",
            "enum": [
              "load",
              "timer"
            ]
          },
          "hostname": {
            "type": "string",
            "documentation": "<p>The instance host name.</p>",
            "serialized_name": "Hostname"
          },
          "os": {
            "type": "string",
            "documentation": "<p>The instance operating system.</p>",
            "serialized_name": "Os"
          },
          "ami_id": {
            "type": "string",
            "documentation": "<p>A custom AMI ID to be used to create the instance. The AMI should be based on one of the standard AWS OpsWorks APIs: Amazon Linux or Ubuntu 12.04 LTS. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances.html\">Instances</a></p>",
            "serialized_name": "AmiId"
          },
          "ssh_key_name": {
            "type": "string",
            "documentation": "<p>The instance SSH key name.</p>",
            "serialized_name": "SshKeyName"
          },
          "architecture": {
            "type": "string",
            "documentation": "<p>The instance architecture. Instance types do not necessarily support both architectures. For a list of the architectures that are supported by the different instance types, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance Families and Types</a>.</p>",
            "serialized_name": "Architecture",
            "enum": [
              "x86_64",
              "i386"
            ]
          },
          "install_updates_on_boot": {
            "type": "boolean",
            "documentation": "<p>Whether to install operating system and package updates when the instance boots. The default value is <code>true</code>. To control when updates are installed, set this value to <code>false</code>. You must then update your instances manually by using CreateDeployment to run the <code>update_dependencies</code> stack command or manually running <code>yum</code> (Amazon Linux) or <code>apt-get</code> (Ubuntu) on the instances. </p> We strongly recommend using the default value of <code>true</code>, to ensure that your instances have the latest security updates.",
            "serialized_name": "InstallUpdatesOnBoot"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "update_layer": {
      "name": "UpdateLayer",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Updates a specified layer.</p>",
      "input": {
        "type": "structure",
        "members": {
          "layer_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The layer ID.</p>",
            "serialized_name": "LayerId"
          },
          "name": {
            "type": "string",
            "documentation": "<p>The layer name, which is used by the console.</p>",
            "serialized_name": "Name"
          },
          "shortname": {
            "type": "string",
            "documentation": "<p>The layer short name, which is used internally by AWS OpsWorksand by Chef. The short name is also used as the name for the directory where your app files are installed. It can have a maximum of 200 characters and must be in the following format: /\\A[a-z0-9\\-\\_\\.]+\\Z/.</p>",
            "serialized_name": "Shortname"
          },
          "attributes": {
            "type": "map",
            "documentation": "<p>One or more user-defined key/value pairs to be added to the stack attributes bag.</p>",
            "serialized_name": "Attributes",
            "keys": {
              "type": "string",
              "enum": [
                "EnableHaproxyStats",
                "HaproxyStatsUrl",
                "HaproxyStatsUser",
                "HaproxyStatsPassword",
                "HaproxyHealthCheckUrl",
                "HaproxyHealthCheckMethod",
                "MysqlRootPassword",
                "MysqlRootPasswordUbiquitous",
                "GangliaUrl",
                "GangliaUser",
                "GangliaPassword",
                "MemcachedMemory",
                "NodejsVersion",
                "RubyVersion",
                "RubygemsVersion",
                "ManageBundler",
                "BundlerVersion",
                "RailsStack",
                "PassengerVersion"
              ]
            },
            "members": {
              "type": "string"
            }
          },
          "custom_instance_profile_arn": {
            "type": "string",
            "documentation": "<p>The ARN of an IAM profile to be used for all of the layer's EC2 instances. For more information about IAM ARNs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Using Identifiers</a>.</p>",
            "serialized_name": "CustomInstanceProfileArn"
          },
          "custom_security_group_ids": {
            "type": "list",
            "documentation": "<p>An array containing the layer's custom security group IDs.</p>",
            "serialized_name": "CustomSecurityGroupIds",
            "members": {
              "type": "string"
            }
          },
          "packages": {
            "type": "list",
            "documentation": "<p>An array of <code>Package</code> objects that describe the layer's packages.</p>",
            "serialized_name": "Packages",
            "members": {
              "type": "string"
            }
          },
          "volume_configurations": {
            "type": "list",
            "documentation": "<p>A <code>VolumeConfigurations</code> object that describes the layer's Amazon EBS volumes.</p>",
            "serialized_name": "VolumeConfigurations",
            "members": {
              "type": "structure",
              "documentation": "<p>Describes an Amazon EBS volume configuration.</p>",
              "members": {
                "mount_point": {
                  "type": "string",
                  "required": true,
                  "documentation": "<p>The volume mount point. For example \"/dev/sdh\".</p>",
                  "serialized_name": "MountPoint"
                },
                "raid_level": {
                  "type": "integer",
                  "documentation": "<p>The volume <a href=\"http://en.wikipedia.org/wiki/Standard_RAID_levels\">RAID level</a>.</p>",
                  "serialized_name": "RaidLevel"
                },
                "number_of_disks": {
                  "type": "integer",
                  "required": true,
                  "documentation": "<p>The number of disks in the volume.</p>",
                  "serialized_name": "NumberOfDisks"
                },
                "size": {
                  "type": "integer",
                  "required": true,
                  "documentation": "<p>The volume size.</p>",
                  "serialized_name": "Size"
                }
              }
            }
          },
          "enable_auto_healing": {
            "type": "boolean",
            "documentation": "<p>Whether to disable auto healing for the layer.</p>",
            "serialized_name": "EnableAutoHealing"
          },
          "auto_assign_elastic_ips": {
            "type": "boolean",
            "documentation": "<p>Whether to automatically assign an <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html\">Elastic IP address</a> to the layer.</p>",
            "serialized_name": "AutoAssignElasticIps"
          },
          "custom_recipes": {
            "type": "structure",
            "documentation": "<p>A <code>LayerCustomRecipes</code> object that specifies the layer's custom recipes.</p>",
            "serialized_name": "CustomRecipes",
            "members": {
              "setup": {
                "type": "list",
                "documentation": "<p>An array of custom recipe names to be run following a <code>setup</code> event.</p>",
                "serialized_name": "Setup",
                "members": {
                  "type": "string"
                }
              },
              "configure": {
                "type": "list",
                "documentation": "<p>An array of custom recipe names to be run following a <code>configure</code> event.</p>",
                "serialized_name": "Configure",
                "members": {
                  "type": "string"
                }
              },
              "deploy": {
                "type": "list",
                "documentation": "<p>An array of custom recipe names to be run following a <code>deploy</code> event.</p>",
                "serialized_name": "Deploy",
                "members": {
                  "type": "string"
                }
              },
              "undeploy": {
                "type": "list",
                "documentation": "<p>An array of custom recipe names to be run following a <code>undeploy</code> event.</p>",
                "serialized_name": "Undeploy",
                "members": {
                  "type": "string"
                }
              },
              "shutdown": {
                "type": "list",
                "documentation": "<p>An array of custom recipe names to be run following a <code>shutdown</code> event.</p>",
                "serialized_name": "Shutdown",
                "members": {
                  "type": "string"
                }
              }
            }
          },
          "install_updates_on_boot": {
            "type": "boolean",
            "documentation": "<p>Whether to install operating system and package updates when the instance boots. The default value is <code>true</code>. To control when updates are installed, set this value to <code>false</code>. You must then update your instances manually by using CreateDeployment to run the <code>update_dependencies</code> stack command or manually running <code>yum</code> (Amazon Linux) or <code>apt-get</code> (Ubuntu) on the instances. </p> We strongly recommend using the default value of <code>true</code>, to ensure that your instances have the latest security updates.",
            "serialized_name": "InstallUpdatesOnBoot"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "update_stack": {
      "name": "UpdateStack",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Updates a specified stack.</p>",
      "input": {
        "type": "structure",
        "members": {
          "stack_id": {
            "type": "string",
            "required": true,
            "documentation": "<p>The stack ID.</p>",
            "serialized_name": "StackId"
          },
          "name": {
            "type": "string",
            "documentation": "<p>The stack's new name.</p>",
            "serialized_name": "Name"
          },
          "attributes": {
            "type": "map",
            "documentation": "<p>One or more user-defined key/value pairs to be added to the stack attributes bag.</p>",
            "serialized_name": "Attributes",
            "keys": {
              "type": "string",
              "enum": [
                "Color"
              ]
            },
            "members": {
              "type": "string"
            }
          },
          "service_role_arn": {
            "type": "string",
            "documentation": "<p>The stack AWS Identity and Access Management (IAM) role, which allows AWS OpsWorks to work with AWS resources on your behalf. You must set this parameter to the Amazon Resource Name (ARN) for an existing IAM role. For more information about IAM ARNs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Using Identifiers</a>.</p> You must set this parameter to a valid service role ARN or the action will fail; there is no default value. You can specify the stack's current service role ARN, if you prefer, but you must do so explicitly.",
            "serialized_name": "ServiceRoleArn"
          },
          "default_instance_profile_arn": {
            "type": "string",
            "documentation": "<p>The ARN of an IAM profile that is the default profile for all of the stack's EC2 instances. For more information about IAM ARNs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Using Identifiers</a>.</p>",
            "serialized_name": "DefaultInstanceProfileArn"
          },
          "default_os": {
            "type": "string",
            "documentation": "<p>The stack default operating system, which must be set to one of the following.</p> <ul> <li>Standard operating systems: <code>Amazon Linux</code> or <code>Ubuntu 12.04 LTS</code> </li> <li>Custom AMIs: <code>Custom</code> </li> </ul> <p>The default option is <code>Amazon Linux</code>. If you set this parameter to <code>Custom</code>, you must use the CreateInstance action's AmiId parameter to specify the custom AMI that you want to use. For more information on the standard operating systems, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-os.html\">Operating Systems</a>For more information on how to use custom AMIs with OpsWorks, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-custom-ami.html\">Using Custom AMIs</a>.</p>",
            "serialized_name": "DefaultOs"
          },
          "hostname_theme": {
            "type": "string",
            "documentation": "<p>The stack's new host name theme, with spaces are replaced by underscores. The theme is used to generate host names for the stack's instances. By default, <code>HostnameTheme</code> is set to Layer_Dependent, which creates host names by appending integers to the layer's short name. The other themes are:</p> <ul> <li>Baked_Goods</li> <li>Clouds</li> <li>European_Cities</li> <li>Fruits</li> <li>Greek_Deities</li> <li>Legendary_Creatures_from_Japan</li> <li>Planets_and_Moons</li> <li>Roman_Deities</li> <li>Scottish_Islands</li> <li>US_Cities</li> <li>Wild_Cats</li> </ul> <p>To obtain a generated host name, call <code>GetHostNameSuggestion</code>, which returns a host name based on the current theme.</p>",
            "serialized_name": "HostnameTheme"
          },
          "default_availability_zone": {
            "type": "string",
            "documentation": "<p>The stack new default Availability Zone. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a>.</p>",
            "serialized_name": "DefaultAvailabilityZone"
          },
          "custom_json": {
            "type": "string",
            "documentation": "<p>A string that contains user-defined, custom JSON. It is used to override the corresponding default stack configuration JSON values. The string should be in the following format and must escape characters such as '\"'.:</p> <code>\"{\\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\",...}\"</code> <p>For more information on custom JSON, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-json.html\">Use Custom JSON to Modify the Stack Configuration JSON</a>.</p>",
            "serialized_name": "CustomJson"
          },
          "configuration_manager": {
            "type": "structure",
            "documentation": "<p>The configuration manager. When you update a stack you can optionally use the configuration manager to specify the Chef version, 0.9 or 11.4. If you omit this parameter, AWS OpsWorks does not change the Chef version. </p>",
            "serialized_name": "ConfigurationManager",
            "members": {
              "name": {
                "type": "string",
                "documentation": "<p>The name. This parameter must be set to \"Chef\".</p>",
                "serialized_name": "Name"
              },
              "version": {
                "type": "string",
                "documentation": "<p>The Chef version. This parameter must be set to \"0.9\" or \"11.4\". The default value is \"0.9\". However, we expect to change the default value to \"11.4\" in late August 2013.</p>",
                "serialized_name": "Version"
              }
            }
          },
          "use_custom_cookbooks": {
            "type": "boolean",
            "documentation": "<p>Whether the stack uses custom cookbooks.</p>",
            "serialized_name": "UseCustomCookbooks"
          },
          "custom_cookbooks_source": {
            "type": "structure",
            "documentation": "<p>Contains the information required to retrieve an app or cookbook from a repository. For more information, see <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html\">Creating Apps</a> or <a href=\"http://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook.html\">Custom Recipes and Cookbooks</a>.</p>",
            "serialized_name": "CustomCookbooksSource",
            "members": {
              "type": {
                "type": "string",
                "documentation": "<p>The repository type.</p>",
                "serialized_name": "Type",
                "enum": [
                  "git",
                  "svn",
                  "archive",
                  "s3"
                ]
              },
              "url": {
                "type": "string",
                "documentation": "<p>The source URL. </p>",
                "serialized_name": "Url"
              },
              "username": {
                "type": "string",
                "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Username</code> to the appropriate AWS access key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Username</code> to the user name.</li> </ul>",
                "serialized_name": "Username"
              },
              "password": {
                "type": "string",
                "documentation": "<p>This parameter depends on the repository type. </p> <ul> <li>For Amazon S3 bundles, set <code>Password</code> to the appropriate AWS secret key.</li> <li>For HTTP bundles, Git repositories, and Subversion repositories, set <code>Password</code> to the password.</li> </ul>",
                "serialized_name": "Password"
              },
              "ssh_key": {
                "type": "string",
                "documentation": "<p>The repository's SSH key.</p>",
                "serialized_name": "SshKey"
              },
              "revision": {
                "type": "string",
                "documentation": "<p>The application's version. AWS OpsWorks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.</p>",
                "serialized_name": "Revision"
              }
            }
          },
          "default_ssh_key_name": {
            "type": "string",
            "documentation": "<p>A default SSH key for the stack instances. You can override this value when you create or update an instance.</p>",
            "serialized_name": "DefaultSshKeyName"
          },
          "default_root_device_type": {
            "type": "string",
            "documentation": "<p>The default root device type. This value is used by default for all instances in the cloned stack, but you can override it when you create an instance. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device\">Storage for the Root Device</a>.</p>",
            "serialized_name": "DefaultRootDeviceType",
            "enum": [
              "ebs",
              "instance-store"
            ]
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    },
    "update_user_profile": {
      "name": "UpdateUserProfile",
      "http_method": "POST",
      "http_path": "/",
      "documentation": "<p>Updates a specified user profile.</p>",
      "input": {
        "type": "structure",
        "members": {
          "iam_user_arn": {
            "type": "string",
            "required": true,
            "documentation": "<p>The user IAM ARN.</p>",
            "serialized_name": "IamUserArn"
          },
          "ssh_username": {
            "type": "string",
            "documentation": "<p>The user's new SSH user name.</p>",
            "serialized_name": "SshUsername"
          },
          "ssh_public_key": {
            "type": "string",
            "documentation": "<p>The user's new SSH public key.</p>",
            "serialized_name": "SshPublicKey"
          }
        }
      },
      "errors": [
        {
          "type": "structure",
          "documentation": "<p>Indicates that a request was invalid.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        },
        {
          "type": "structure",
          "documentation": "<p>Indicates that a resource was not found.</p>",
          "members": {
            "message": {
              "type": "string",
              "documentation": "<p>The exception message.</p>",
              "serialized_name": "message"
            }
          }
        }
      ]
    }
  }
}