{
  "operations": {
    "AddRoleToInstanceProfile": "<p>Adds the specified role to the specified instance profile. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p>",
    "AddUserToGroup": "<p>Adds the specified user to the specified group.</p>",
    "ChangePassword": "<p>Changes the password of the IAM user calling <code>ChangePassword</code>. The root account password is not affected by this action. For information about modifying passwords, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\">Managing Passwords</a> in the <i>Using IAM</i> guide.</p>",
    "CreateAccessKey": "<p>Creates a new AWS secret access key and corresponding AWS access key ID for the specified user. The default status for new keys is <code>Active</code>.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can use this API to manage root credentials even if the AWS account has no associated users.</p> <p>For information about limits on the number of keys you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide.</p> <important>To ensure the security of your AWS account, the secret access key is accessible only during key and user creation. You must save the key (for example, in a text file) if you want to be able to access it again. If a secret key is lost, you can delete the access keys for the associated user and then create new keys.</important>",
    "CreateAccountAlias": "<p>This action creates an alias for your AWS account. For information about using an AWS account alias, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\">Using an Alias for Your AWS Account ID</a> in the <i>Using IAM</i> guide.</p>",
    "CreateGroup": "<p>Creates a new group.</p> <p>For information about the number of groups you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
    "CreateInstanceProfile": "<p>Creates a new instance profile. For information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p> <p>For information about the number of instance profiles you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
    "CreateLoginProfile": "<p>Creates a password for the specified user, giving the user the ability to access AWS services through the AWS Management Console. For more information about managing passwords, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\">Managing Passwords</a> in the <i>Using IAM</i> guide.</p>",
    "CreateRole": "<p>Creates a new role for your AWS account. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>. For information about limitations on role names and the number of roles you can create, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide.</p> <p>The example policy grants permission to an EC2 instance to assume the role. The policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.</p>",
    "CreateSAMLProvider": "<p>Creates an IAM entity to describe an identity provider (IdP) that supports SAML 2.0.</p> <p>The SAML provider that you create with this operation can be used as a principal in a role's trust policy to establish a trust relationship between AWS and a SAML identity provider. You can create an IAM role that supports Web-based single sign-on (SSO) to the AWS Management Console or one that supports API access to AWS. </p> <p>When you create the SAML provider, you upload an a SAML metadata document that you get from your IdP and that includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP. </p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/STSMgmtConsole-SAML.html\">Giving Console Access Using SAML</a> and <a href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html\">Creating Temporary Security Credentials for SAML Federation</a> in the <i>Using Temporary Credentials</i> guide. </p>",
    "CreateUser": "<p>Creates a new user for your AWS account.</p> <p>For information about limitations on the number of users you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
    "CreateVirtualMFADevice": "<p>Creates a new virtual MFA device for the AWS account. After creating the virtual MFA, use <a href=\"http://docs.aws.amazon.com/IAM/latest/APIReference/API_EnableMFADevice.html\">EnableMFADevice</a> to attach the MFA device to an IAM user. For more information about creating and working with virtual MFA devices, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html\">Using a Virtual MFA Device</a> in the <i>Using IAM</i> guide.</p> <p>For information about limits on the number of MFA devices you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on Entities</a> in the <i>Using IAM</i> guide.</p> <important>The seed information contained in the QR code and the Base32 string should be treated like any other secret access information, such as your AWS access keys or your passwords. After you provision your virtual device, you should ensure that the information is destroyed following secure procedures.</important>",
    "DeactivateMFADevice": "<p>Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.</p>",
    "DeleteAccessKey": "<p>Deletes the access key associated with the specified user.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can use this API to manage root credentials even if the AWS account has no associated users.</p>",
    "DeleteAccountAlias": "<p>Deletes the specified AWS account alias. For information about using an AWS account alias, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\">Using an Alias for Your AWS Account ID</a> in the <i>Using IAM</i> guide.</p>",
    "DeleteAccountPasswordPolicy": "<p>Deletes the password policy for the AWS account.</p>",
    "DeleteGroup": "<p>Deletes the specified group. The group must not contain any users or have any attached policies.</p>",
    "DeleteGroupPolicy": "<p>Deletes the specified policy that is associated with the specified group.</p>",
    "DeleteInstanceProfile": "<p>Deletes the specified instance profile. The instance profile must not have an associated role.</p> <important>Make sure you do not have any Amazon EC2 instances running with the instance profile you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance.</important> <p>For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p>",
    "DeleteLoginProfile": "<p>Deletes the password for the specified user, which terminates the user's ability to access AWS services through the AWS Management Console.</p> <important>Deleting a user's password does not prevent a user from accessing IAM through the command line interface or the API. To prevent all user access you must also either make the access key inactive or delete it. For more information about making keys inactive or deleting them, see <a>UpdateAccessKey</a> and <a>DeleteAccessKey</a>. </important>",
    "DeleteRole": "<p>Deletes the specified role. The role must not have any policies attached. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>.</p> <important>Make sure you do not have any Amazon EC2 instances running with the role you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance.</important>",
    "DeleteRolePolicy": "<p>Deletes the specified policy associated with the specified role.</p>",
    "DeleteSAMLProvider": "<p>Deletes a SAML provider.</p> <p>Deleting the provider does not update any roles that reference the SAML provider as a principal in their trust policies. Any attempt to assume a role that references a SAML provider that has been deleted will fail. </p>",
    "DeleteServerCertificate": "<p>Deletes the specified server certificate.</p> <important>If you are using a server certificate with Elastic Load Balancing, deleting the certificate could have implications for your application. If Elastic Load Balancing doesn't detect the deletion of bound certificates, it may continue to use the certificates. This could cause Elastic Load Balancing to stop accepting traffic. We recommend that you remove the reference to the certificate from Elastic Load Balancing before using this command to delete the certificate. For more information, go to <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_DeleteLoadBalancerListeners.html\" target=\"blank\">DeleteLoadBalancerListeners</a> in the <i>Elastic Load Balancing API Reference</i>.</important>",
    "DeleteSigningCertificate": "<p>Deletes the specified signing certificate associated with the specified user.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can use this API to manage root credentials even if the AWS account has no associated users.</p>",
    "DeleteUser": "<p>Deletes the specified user. The user must not belong to any groups, have any keys or signing certificates, or have any attached policies.</p>",
    "DeleteUserPolicy": "<p>Deletes the specified policy associated with the specified user.</p>",
    "DeleteVirtualMFADevice": "<p>Deletes a virtual MFA device.</p>",
    "EnableMFADevice": "<p>Enables the specified MFA device and associates it with the specified user name. When enabled, the MFA device is required for every subsequent login by the user name associated with the device.</p>",
    "GenerateCredentialReport": "<p>Generates a credential report for the AWS account. For more information about the credential report, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\">Getting Credential Reports</a> in the <i>Using IAM</i> guide.</p>",
    "GetAccountPasswordPolicy": "<p>Retrieves the password policy for the AWS account. For more information about using a password policy, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\">Managing an IAM Password Policy</a>.</p>",
    "GetAccountSummary": "<p>Retrieves account level information about account entity usage and IAM quotas.</p> <p>For information about limitations on IAM entities, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
    "GetCredentialReport": "<p>Retrieves a credential report for the AWS account. For more information about the credential report, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\">Getting Credential Reports</a> in the <i>Using IAM</i> guide.</p>",
    "GetGroup": "<p>Returns a list of users that are in the specified group. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
    "GetGroupPolicy": "<p>Retrieves the specified policy document for the specified group. The returned policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.</p>",
    "GetInstanceProfile": "<p>Retrieves information about the specified instance profile, including the instance profile's path, GUID, ARN, and role. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>. For more information about ARNs, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs\">ARNs</a>.</p>",
    "GetLoginProfile": "<p>Retrieves the user name and password-creation date for the specified user. If the user has not been assigned a password, the action returns a 404 (<code>NoSuchEntity</code>) error. </p>",
    "GetRole": "<p>Retrieves information about the specified role, including the role's path, GUID, ARN, and the policy granting permission to assume the role. For more information about ARNs, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs\">ARNs</a>. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>.</p> <p>The returned policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.</p>",
    "GetRolePolicy": "<p>Retrieves the specified policy document for the specified role. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>.</p> <p>The returned policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.</p>",
    "GetSAMLProvider": "<p>Returns the SAML provider metadocument that was uploaded when the provider was created or updated.</p>",
    "GetServerCertificate": "<p>Retrieves information about the specified server certificate.</p>",
    "GetUser": "<p>Retrieves information about the specified user, including the user's path, unique ID, and ARN.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request.</p>",
    "GetUserPolicy": "<p>Retrieves the specified policy document for the specified user. The returned policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.</p>",
    "ListAccessKeys": "<p>Returns information about the access key IDs associated with the specified user. If there are none, the action returns an empty list.</p> <p>Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>If the <code>UserName</code> field is not specified, the UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, this API can be used to manage root credentials even if the AWS account has no associated users.</p>",
    "ListAccountAliases": "<p>Lists the account aliases associated with the account. For information about using an AWS account alias, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\">Using an Alias for Your AWS Account ID</a> in the <i>Using IAM</i> guide.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
    "ListGroupPolicies": "<p>Lists the names of the policies associated with the specified group. If there are none, the action returns an empty list.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
    "ListGroups": "<p>Lists the groups that have the specified path prefix.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
    "ListGroupsForUser": "<p>Lists the groups the specified user belongs to.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
    "ListInstanceProfiles": "<p>Lists the instance profiles that have the specified path prefix. If there are none, the action returns an empty list. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
    "ListInstanceProfilesForRole": "<p>Lists the instance profiles that have the specified associated role. If there are none, the action returns an empty list. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
    "ListMFADevices": "<p>Lists the MFA devices. If the request includes the user name, then this action lists all the MFA devices associated with the specified user name. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
    "ListRolePolicies": "<p>Lists the names of the policies associated with the specified role. If there are none, the action returns an empty list.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
    "ListRoles": "<p>Lists the roles that have the specified path prefix. If there are none, the action returns an empty list. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>The returned policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.</p>",
    "ListSAMLProviders": "<p>Lists the SAML providers in the account.</p>",
    "ListServerCertificates": "<p>Lists the server certificates that have the specified path prefix. If none exist, the action returns an empty list.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
    "ListSigningCertificates": "<p>Returns information about the signing certificates associated with the specified user. If there are none, the action returns an empty list.</p> <p>Although each user is limited to a small number of signing certificates, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, this API can be used to manage root credentials even if the AWS account has no associated users.</p>",
    "ListUserPolicies": "<p>Lists the names of the policies associated with the specified user. If there are none, the action returns an empty list.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
    "ListUsers": "<p>Lists the users that have the specified path prefix. If there are none, the action returns an empty list.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
    "ListVirtualMFADevices": "<p> Lists the virtual MFA devices under the AWS account by assignment status. If you do not specify an assignment status, the action returns a list of all virtual MFA devices. Assignment status can be <code>Assigned</code>, <code>Unassigned</code>, or <code>Any</code>. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
    "PutGroupPolicy": "<p>Adds (or updates) a policy document associated with the specified group. For information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html\">Overview of Policies</a> in the <i>Using IAM</i> guide.</p> <p>For information about limits on the number of policies you can associate with a group, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
    "PutRolePolicy": "<p>Adds (or updates) a policy document associated with the specified role. For information about policies, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html\">Overview of Policies</a> in the <i>Using IAM</i> guide.</p> <p>For information about limits on the policies you can associate with a role, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
    "PutUserPolicy": "<p>Adds (or updates) a policy document associated with the specified user. For information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html\">Overview of Policies</a> in the <i>Using IAM</i> guide.</p> <p>For information about limits on the number of policies you can associate with a user, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
    "RemoveRoleFromInstanceProfile": "<p>Removes the specified role from the specified instance profile.</p> <important>Make sure you do not have any Amazon EC2 instances running with the role you are about to remove from the instance profile. Removing a role from an instance profile that is associated with a running instance will break any applications running on the instance.</important> <p>For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>.</p>",
    "RemoveUserFromGroup": "<p>Removes the specified user from the specified group.</p>",
    "ResyncMFADevice": "<p>Synchronizes the specified MFA device with AWS servers.</p>",
    "UpdateAccessKey": "<p>Changes the status of the specified access key from Active to Inactive, or vice versa. This action can be used to disable a user's key as part of a key rotation work flow.</p> <p>If the <code>UserName</code> field is not specified, the UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, this API can be used to manage root credentials even if the AWS account has no associated users.</p> <p>For information about rotating keys, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html\">Managing Keys and Certificates</a> in the <i>Using IAM </i> guide.</p>",
    "UpdateAccountPasswordPolicy": "<p>Updates the password policy settings for the AWS account.</p> <p>For more information about using a password policy, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\">Managing an IAM Password Policy</a> in the <i>Using IAM</i> guide.</p>",
    "UpdateAssumeRolePolicy": "<p>Updates the policy that grants an entity permission to assume a role. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>.</p>",
    "UpdateGroup": "<p>Updates the name and/or the path of the specified group.</p> <important> You should understand the implications of changing a group's path or name. For more information, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html\">Renaming Users and Groups</a> in the <i>Using IAM</i> guide. </important>",
    "UpdateLoginProfile": "<p>Changes the password for the specified user.</p>",
    "UpdateSAMLProvider": "<p>Updates the metadata document for an existing SAML provider.</p>",
    "UpdateServerCertificate": "<p>Updates the name and/or the path of the specified server certificate.</p> <important> You should understand the implications of changing a server certificate's path or name. For more information, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingServerCerts.html\">Managing Server Certificates</a> in the <i>Using IAM</i> guide. </important>",
    "UpdateSigningCertificate": "<p>Changes the status of the specified signing certificate from active to disabled, or vice versa. This action can be used to disable a user's signing certificate as part of a certificate rotation work flow.</p> <p>If the <code>UserName</code> field is not specified, the UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, this API can be used to manage root credentials even if the AWS account has no associated users.</p> <p>For information about rotating certificates, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html\">Managing Keys and Certificates</a> in the <i>Using IAM</i> guide.</p>",
    "UpdateUser": "<p>Updates the name and/or the path of the specified user.</p> <important> You should understand the implications of changing a user's path or name. For more information, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html\">Renaming Users and Groups</a> in the <i>Using IAM</i> guide. </important>",
    "UploadServerCertificate": "<p>Uploads a server certificate entity for the AWS account. The server certificate entity includes a public key certificate, a private key, and an optional certificate chain, which should all be PEM-encoded.</p> <p>For information about the number of server certificates you can upload, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
    "UploadSigningCertificate": "<p>Uploads an X.509 signing certificate and associates it with the specified user. Some AWS services use X.509 signing certificates to validate requests that are signed with a corresponding private key. When you upload the certificate, its default status is <code>Active</code>.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, this API can be used to manage root credentials even if the AWS account has no associated users.</p>"
  },
  "service": "<fullname>AWS Identity and Access Management</fullname> <p>AWS Identity and Access Management (IAM) is a web service that you can use to manage users and user permissions under your AWS account. This guide provides descriptions of the IAM API. For general information about IAM, see <a href=\"http://aws.amazon.com/iam/\">AWS Identity and Access Management (IAM)</a>. For the user guide for IAM, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/\">Using IAM</a>. </p> <p>We recommend that you use the AWS SDKs to make programmatic API calls to IAM. However, you can also use the IAM Query API to make direct calls to the IAM web service. To learn more about the IAM Query API, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>Using IAM</i> guide. IAM supports GET and POST requests for all actions. That is, the API does not require you to use GET for some actions and POST for others. However, GET requests are subject to the limitation size of a URL. Therefore, for operations that require larger sizes, use a POST request. </p> <p><b>Signing Requests</b></p> <p>Requests must be signed using an access key ID and a secret access key. We strongly recommend that you do not use your AWS account access key ID and secret access key for everyday work with IAM. You can use the access key ID and secret access key for an IAM user or you can use the AWS Security Token Service to generate temporary security credentials and use those to sign requests. </p> <p>To sign requests, we recommend that you use <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>. If you have an existing application that uses Signature Version 2, you do not have to update it to use Signature Version 4. However, some operations now require Signature Version 4. The documentation for operations that require version 4 indicate this requirement. </p> <p><b>Recording API requests</b></p> <p> IAM supports AWS CloudTrail, which is a service that records AWS calls for your AWS account and delivers log files to an Amazon S3 bucket. By using information collected by CloudTrail, you can determine what requests were successfully made to IAM, who made the request, when it was made, and so on. To learn more about CloudTrail, including how to turn it on and find your log files, see the <a href=\"http://docs.aws.amazon.com/awscloudtrail/latest/userguide/whatisawscloudtrail.html\">AWS CloudTrail User Guide</a>. </p> <p><b>Additional Resources</b></p> <p>For more information, see the following:</p> <ul> <li> <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html\">AWS Security Credentials</a>. This topic provides general information about the types of credentials used for accessing AWS.</li> <li> <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAMBestPractices.html\">IAM Best Practices</a>. This topic presents a list of suggestions for using the IAM service to help secure your AWS resources.</li> <li> <a href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/\">AWS Security Token Service</a>. This guide describes how to create and use temporary security credentials.</li> <li> <a href=\"http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\">Signing AWS API Requests</a>. This set of topics walk you through the process of signing a request using an access key ID and secret access key.</li> </ul>",
  "shapes": {
    "AccessKey": {
      "base": "<p>The AccessKey data type contains information about an AWS access key.</p> <p> This data type is used as a response element in the actions <a>CreateAccessKey</a> and <a>ListAccessKeys</a>. </p>",
      "refs": {
        "CreateAccessKeyResponse$AccessKey": "<p>Information about the access key.</p>"
      }
    },
    "AccessKeyMetadata": {
      "base": "<p>The AccessKey data type contains information about an AWS access key, without its secret key.</p> <p> This data type is used as a response element in the action <a>ListAccessKeys</a>. </p>",
      "refs": {
        "accessKeyMetadataListType$member": null
      }
    },
    "AddRoleToInstanceProfileRequest": {
      "base": null,
      "refs": {
      }
    },
    "AddUserToGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "BootstrapDatum": {
      "base": null,
      "refs": {
        "VirtualMFADevice$Base32StringSeed": "<p>The Base32 seed defined as specified in <a href=\"http://www.ietf.org/rfc/rfc3548.txt\">RFC3548</a>. The <code>Base32StringSeed</code> is Base64-encoded.</p>",
        "VirtualMFADevice$QRCodePNG": "<p>A QR code PNG image that encodes <i>otpauth://totp/$virtualMFADeviceName@$AccountName? secret=$Base32String</i> where $virtualMFADeviceName is one of the create call arguments, AccountName is the user name if set (accountId otherwise), and Base32String is the seed in Base32 format. The <code>Base32String</code> is Base64-encoded.</p>"
      }
    },
    "ChangePasswordRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAccessKeyRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAccessKeyResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>CreateAccessKey</a> action.</p>",
      "refs": {
      }
    },
    "CreateAccountAliasRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateGroupResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>CreateGroup</a> action.</p>",
      "refs": {
      }
    },
    "CreateInstanceProfileRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateInstanceProfileResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>CreateInstanceProfile</a> action.</p>",
      "refs": {
      }
    },
    "CreateLoginProfileRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateLoginProfileResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>CreateLoginProfile</a> action.</p>",
      "refs": {
      }
    },
    "CreateRoleRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateRoleResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>CreateRole</a> action.</p>",
      "refs": {
      }
    },
    "CreateSAMLProviderRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateSAMLProviderResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>CreateSAMLProvider</a> action.</p>",
      "refs": {
      }
    },
    "CreateUserRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateUserResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>CreateUser</a> action.</p>",
      "refs": {
      }
    },
    "CreateVirtualMFADeviceRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateVirtualMFADeviceResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>CreateVirtualMFADevice</a> action.</p>",
      "refs": {
      }
    },
    "CredentialReportExpiredException": {
      "base": "<p>The request was rejected because the most recent credential report has expired. To generate a new credential report, use <a>GenerateCredentialReport</a>. For more information about credential report expiration, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\">Getting Credential Reports</a> in the <i>Using IAM</i> guide.</p>",
      "refs": {
      }
    },
    "CredentialReportNotPresentException": {
      "base": "<p>The request was rejected because the credential report does not exist. To generate a credential report, use <a>GenerateCredentialReport</a>.</p>",
      "refs": {
      }
    },
    "CredentialReportNotReadyException": {
      "base": "<p>The request was rejected because the credential report is still being generated.</p>",
      "refs": {
      }
    },
    "DeactivateMFADeviceRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAccessKeyRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAccountAliasRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteConflictException": {
      "base": "<p>The request was rejected because it attempted to delete a resource that has attached subordinate entities. The error message describes these entities.</p>",
      "refs": {
      }
    },
    "DeleteGroupPolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteInstanceProfileRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteLoginProfileRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteRolePolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteRoleRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteSAMLProviderRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteServerCertificateRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteSigningCertificateRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteUserPolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteUserRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteVirtualMFADeviceRequest": {
      "base": null,
      "refs": {
      }
    },
    "DuplicateCertificateException": {
      "base": "<p>The request was rejected because the same certificate is associated to another user under the account.</p>",
      "refs": {
      }
    },
    "EnableMFADeviceRequest": {
      "base": null,
      "refs": {
      }
    },
    "EntityAlreadyExistsException": {
      "base": "<p>The request was rejected because it attempted to create a resource that already exists.</p>",
      "refs": {
      }
    },
    "EntityTemporarilyUnmodifiableException": {
      "base": "<p>The request was rejected because it referenced an entity that is temporarily unmodifiable, such as a user name that was deleted and then recreated. The error indicates that the request is likely to succeed if you try again after waiting several minutes. The error message describes the entity.</p>",
      "refs": {
      }
    },
    "GenerateCredentialReportResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GenerateCredentialReport</a> action.</p>",
      "refs": {
      }
    },
    "GetAccountPasswordPolicyResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GetAccountPasswordPolicy</a> action.</p>",
      "refs": {
      }
    },
    "GetAccountSummaryResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GetAccountSummary</a> action.</p>",
      "refs": {
      }
    },
    "GetCredentialReportResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GetCredentialReport</a> action.</p>",
      "refs": {
      }
    },
    "GetGroupPolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetGroupPolicyResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GetGroupPolicy</a> action.</p>",
      "refs": {
      }
    },
    "GetGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetGroupResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GetGroup</a> action.</p>",
      "refs": {
      }
    },
    "GetInstanceProfileRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetInstanceProfileResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GetInstanceProfile</a> action.</p>",
      "refs": {
      }
    },
    "GetLoginProfileRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetLoginProfileResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GetLoginProfile</a> action.</p>",
      "refs": {
      }
    },
    "GetRolePolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetRolePolicyResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GetRolePolicy</a> action.</p>",
      "refs": {
      }
    },
    "GetRoleRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetRoleResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GetRole</a> action.</p>",
      "refs": {
      }
    },
    "GetSAMLProviderRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetSAMLProviderResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GetSAMLProvider</a> action.</p>",
      "refs": {
      }
    },
    "GetServerCertificateRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetServerCertificateResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GetServerCertificate</a> action.</p>",
      "refs": {
      }
    },
    "GetUserPolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetUserPolicyResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GetUserPolicy</a> action.</p>",
      "refs": {
      }
    },
    "GetUserRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetUserResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>GetUser</a> action.</p>",
      "refs": {
      }
    },
    "Group": {
      "base": "<p>The Group data type contains information about a group.</p> <p> This data type is used as a response element in the following actions:</p> <ul> <li><a>CreateGroup</a></li> <li><a>GetGroup</a></li> <li><a>ListGroups</a></li> </ul>",
      "refs": {
        "CreateGroupResponse$Group": "<p>Information about the group.</p>",
        "GetGroupResponse$Group": "<p>Information about the group.</p>",
        "groupListType$member": null
      }
    },
    "InstanceProfile": {
      "base": "<p>The InstanceProfile data type contains information about an instance profile.</p> <p> This data type is used as a response element in the following actions:</p> <ul> <li><p><a>CreateInstanceProfile</a></p></li> <li><p><a>GetInstanceProfile</a></p></li> <li><p><a>ListInstanceProfiles</a></p></li> <li><p><a>ListInstanceProfilesForRole</a></p></li> </ul>",
      "refs": {
        "CreateInstanceProfileResponse$InstanceProfile": "<p>Information about the instance profile.</p>",
        "GetInstanceProfileResponse$InstanceProfile": "<p>Information about the instance profile.</p>",
        "instanceProfileListType$member": null
      }
    },
    "InvalidAuthenticationCodeException": {
      "base": "<p>The request was rejected because the authentication code was not recognized. The error message describes the specific error.</p>",
      "refs": {
      }
    },
    "InvalidCertificateException": {
      "base": "<p>The request was rejected because the certificate is invalid.</p>",
      "refs": {
      }
    },
    "InvalidInputException": {
      "base": null,
      "refs": {
      }
    },
    "InvalidUserTypeException": {
      "base": "<p>The request was rejected because the type of user for the transaction was incorrect.</p>",
      "refs": {
      }
    },
    "KeyPairMismatchException": {
      "base": "<p>The request was rejected because the public key certificate and the private key do not match.</p>",
      "refs": {
      }
    },
    "LimitExceededException": {
      "base": "<p>The request was rejected because it attempted to create resources beyond the current AWS account limits. The error message describes the limit exceeded.</p>",
      "refs": {
      }
    },
    "ListAccessKeysRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAccessKeysResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListAccessKeys</a> action.</p>",
      "refs": {
      }
    },
    "ListAccountAliasesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAccountAliasesResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListAccountAliases</a> action.</p>",
      "refs": {
      }
    },
    "ListGroupPoliciesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListGroupPoliciesResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListGroupPolicies</a> action.</p>",
      "refs": {
      }
    },
    "ListGroupsForUserRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListGroupsForUserResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListGroupsForUser</a> action.</p>",
      "refs": {
      }
    },
    "ListGroupsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListGroupsResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListGroups</a> action.</p>",
      "refs": {
      }
    },
    "ListInstanceProfilesForRoleRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListInstanceProfilesForRoleResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListInstanceProfilesForRole</a> action.</p>",
      "refs": {
      }
    },
    "ListInstanceProfilesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListInstanceProfilesResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListInstanceProfiles</a> action.</p>",
      "refs": {
      }
    },
    "ListMFADevicesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListMFADevicesResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListMFADevices</a> action.</p>",
      "refs": {
      }
    },
    "ListRolePoliciesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListRolePoliciesResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListRolePolicies</a> action.</p>",
      "refs": {
      }
    },
    "ListRolesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListRolesResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListRoles</a> action.</p>",
      "refs": {
      }
    },
    "ListSAMLProvidersRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListSAMLProvidersResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListSAMLProviders</a> action.</p>",
      "refs": {
      }
    },
    "ListServerCertificatesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListServerCertificatesResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListServerCertificates</a> action.</p>",
      "refs": {
      }
    },
    "ListSigningCertificatesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListSigningCertificatesResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListSigningCertificates</a> action.</p>",
      "refs": {
      }
    },
    "ListUserPoliciesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListUserPoliciesResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListUserPolicies</a> action.</p>",
      "refs": {
      }
    },
    "ListUsersRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListUsersResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListUsers</a> action.</p>",
      "refs": {
      }
    },
    "ListVirtualMFADevicesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListVirtualMFADevicesResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>ListVirtualMFADevices</a> action.</p>",
      "refs": {
      }
    },
    "LoginProfile": {
      "base": "<p>The LoginProfile data type contains the user name and password create date for a user.</p> <p> This data type is used as a response element in the actions <a>CreateLoginProfile</a> and <a>GetLoginProfile</a>. </p>",
      "refs": {
        "CreateLoginProfileResponse$LoginProfile": "<p>The user name and password create date.</p>",
        "GetLoginProfileResponse$LoginProfile": "<p>User name and password create date for the user.</p>"
      }
    },
    "MFADevice": {
      "base": "<p>The <code>MFADevice</code> data type contains information about an MFA device.</p> <p> This data type is used as a response element in the action <a>ListMFADevices</a>. </p>",
      "refs": {
        "mfaDeviceListType$member": null
      }
    },
    "MalformedCertificateException": {
      "base": "<p>The request was rejected because the certificate was malformed or expired. The error message describes the specific error.</p>",
      "refs": {
      }
    },
    "MalformedPolicyDocumentException": {
      "base": "<p>The request was rejected because the policy document was malformed. The error message describes the specific error.</p>",
      "refs": {
      }
    },
    "NoSuchEntityException": {
      "base": "<p>The request was rejected because it referenced an entity that does not exist. The error message describes the entity.</p>",
      "refs": {
      }
    },
    "PasswordPolicy": {
      "base": "<p>The PasswordPolicy data type contains information about the account password policy.</p> <p> This data type is used as a response element in the action <a>GetAccountPasswordPolicy</a>. </p>",
      "refs": {
        "GetAccountPasswordPolicyResponse$PasswordPolicy": null
      }
    },
    "PasswordPolicyViolationException": {
      "base": "<p>The request was rejected because the provided password did not meet the requirements imposed by the account password policy.</p>",
      "refs": {
      }
    },
    "PutGroupPolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "PutRolePolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "PutUserPolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveRoleFromInstanceProfileRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveUserFromGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "ReportContentType": {
      "base": null,
      "refs": {
        "GetCredentialReportResponse$Content": "<p>Contains the credential report. The report is Base64-encoded.</p>"
      }
    },
    "ReportFormatType": {
      "base": null,
      "refs": {
        "GetCredentialReportResponse$ReportFormat": "<p>The format (MIME type) of the credential report.</p>"
      }
    },
    "ReportStateDescriptionType": {
      "base": null,
      "refs": {
        "GenerateCredentialReportResponse$Description": "<p>Information about the credential report.</p>"
      }
    },
    "ReportStateType": {
      "base": null,
      "refs": {
        "GenerateCredentialReportResponse$State": "<p>Information about the state of a credential report.</p>"
      }
    },
    "ResyncMFADeviceRequest": {
      "base": null,
      "refs": {
      }
    },
    "Role": {
      "base": "<p>The Role data type contains information about a role.</p> <p> This data type is used as a response element in the following actions:</p> <ul> <li><p><a>CreateRole</a></p></li> <li><p><a>GetRole</a></p></li> <li><p><a>ListRoles</a></p></li> </ul>",
      "refs": {
        "CreateRoleResponse$Role": "<p>Information about the role.</p>",
        "GetRoleResponse$Role": "<p>Information about the role.</p>",
        "roleListType$member": null
      }
    },
    "SAMLMetadataDocumentType": {
      "base": null,
      "refs": {
        "CreateSAMLProviderRequest$SAMLMetadataDocument": "<p>An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP. </p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html\">Creating Temporary Security Credentials for SAML Federation</a> in the <i>Using Temporary Security Credentials</i> guide. </p>",
        "GetSAMLProviderResponse$SAMLMetadataDocument": "<p>The XML metadata document that includes information about an identity provider.</p>",
        "UpdateSAMLProviderRequest$SAMLMetadataDocument": "<p>An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP. </p>"
      }
    },
    "SAMLProviderListEntry": {
      "base": "<p>The list of SAML providers for this account.</p>",
      "refs": {
        "SAMLProviderListType$member": null
      }
    },
    "SAMLProviderListType": {
      "base": null,
      "refs": {
        "ListSAMLProvidersResponse$SAMLProviderList": "<p>The list of SAML providers for this account.</p>"
      }
    },
    "SAMLProviderNameType": {
      "base": null,
      "refs": {
        "CreateSAMLProviderRequest$Name": "<p>The name of the provider to create.</p>"
      }
    },
    "ServerCertificate": {
      "base": "<p>The ServerCertificate data type contains information about a server certificate.</p> <p>This data type is used as a response element in the action <a>GetServerCertificate</a>.</p>",
      "refs": {
        "GetServerCertificateResponse$ServerCertificate": "<p>Information about the server certificate.</p>"
      }
    },
    "ServerCertificateMetadata": {
      "base": "<p>ServerCertificateMetadata contains information about a server certificate without its certificate body, certificate chain, and private key.</p> <p>This data type is used as a response element in the action <a>UploadServerCertificate</a> and <a>ListServerCertificates</a>.</p>",
      "refs": {
        "ServerCertificate$ServerCertificateMetadata": "<p>The meta information of the server certificate, such as its name, path, ID, and ARN.</p>",
        "UploadServerCertificateResponse$ServerCertificateMetadata": "<p>The meta information of the uploaded server certificate without its certificate body, certificate chain, and private key.</p>",
        "serverCertificateMetadataListType$member": null
      }
    },
    "SigningCertificate": {
      "base": "<p>The SigningCertificate data type contains information about an X.509 signing certificate.</p> <p> This data type is used as a response element in the actions <a>UploadSigningCertificate</a> and <a>ListSigningCertificates</a>. </p>",
      "refs": {
        "UploadSigningCertificateResponse$Certificate": "<p>Information about the certificate.</p>",
        "certificateListType$member": null
      }
    },
    "UpdateAccessKeyRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAccountPasswordPolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAssumeRolePolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateLoginProfileRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateSAMLProviderRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateSAMLProviderResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>UpdateSAMLProvider</a> action.</p>",
      "refs": {
      }
    },
    "UpdateServerCertificateRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateSigningCertificateRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateUserRequest": {
      "base": null,
      "refs": {
      }
    },
    "UploadServerCertificateRequest": {
      "base": null,
      "refs": {
      }
    },
    "UploadServerCertificateResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>UploadServerCertificate</a> action.</p>",
      "refs": {
      }
    },
    "UploadSigningCertificateRequest": {
      "base": null,
      "refs": {
      }
    },
    "UploadSigningCertificateResponse": {
      "base": "<p>Contains the result of a successful invocation of the <a>UploadSigningCertificate</a> action.</p>",
      "refs": {
      }
    },
    "User": {
      "base": "<p>The User data type contains information about a user.</p> <p> This data type is used as a response element in the following actions:</p> <ul> <li><p><a>CreateUser</a></p></li> <li><p><a>GetUser</a></p></li> <li><p><a>ListUsers</a></p></li> </ul>",
      "refs": {
        "CreateUserResponse$User": "<p>Information about the user.</p>",
        "GetUserResponse$User": "<p>Information about the user.</p>",
        "VirtualMFADevice$User": null,
        "userListType$member": null
      }
    },
    "VirtualMFADevice": {
      "base": "<p>The <code>VirtualMFADevice</code> data type contains information about a virtual MFA device.</p>",
      "refs": {
        "CreateVirtualMFADeviceResponse$VirtualMFADevice": "<p>A newly created virtual MFA device.</p>",
        "virtualMFADeviceListType$member": null
      }
    },
    "accessKeyIdType": {
      "base": null,
      "refs": {
        "AccessKey$AccessKeyId": "<p>The ID for this access key.</p>",
        "AccessKeyMetadata$AccessKeyId": "<p>The ID for this access key.</p>",
        "DeleteAccessKeyRequest$AccessKeyId": "<p>The access key ID for the access key ID and secret access key you want to delete.</p>",
        "UpdateAccessKeyRequest$AccessKeyId": "<p>The access key ID of the secret access key you want to update.</p>"
      }
    },
    "accessKeyMetadataListType": {
      "base": "<p>The accessKeyMetadataListType data type contains a list of access key metadata.</p> <p> This data type is used as a response element in the action <a>ListAccessKeys</a>. </p>",
      "refs": {
        "ListAccessKeysResponse$AccessKeyMetadata": "<p>A list of access key metadata.</p>"
      }
    },
    "accessKeySecretType": {
      "base": null,
      "refs": {
        "AccessKey$SecretAccessKey": "<p>The secret key used to sign requests.</p>"
      }
    },
    "accountAliasListType": {
      "base": null,
      "refs": {
        "ListAccountAliasesResponse$AccountAliases": "<p>A list of aliases associated with the account.</p>"
      }
    },
    "accountAliasType": {
      "base": null,
      "refs": {
        "CreateAccountAliasRequest$AccountAlias": "<p>Name of the account alias to create.</p>",
        "DeleteAccountAliasRequest$AccountAlias": "<p>Name of the account alias to delete.</p>",
        "accountAliasListType$member": null
      }
    },
    "arnType": {
      "base": null,
      "refs": {
        "CreateSAMLProviderResponse$SAMLProviderArn": "<p>The Amazon Resource Name (ARN) of the SAML provider.</p>",
        "DeleteSAMLProviderRequest$SAMLProviderArn": "<p>The Amazon Resource Name (ARN) of the SAML provider to delete.</p>",
        "GetSAMLProviderRequest$SAMLProviderArn": "<p>The Amazon Resource Name (ARN) of the SAML provider to get information about.</p>",
        "Group$Arn": "<p>The Amazon Resource Name (ARN) specifying the group. For more information about ARNs and how to use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
        "InstanceProfile$Arn": "<p>The Amazon Resource Name (ARN) specifying the instance profile. For more information about ARNs and how to use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
        "Role$Arn": "<p>The Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
        "SAMLProviderListEntry$Arn": "<p>The Amazon Resource Name (ARN) of the SAML provider.</p>",
        "ServerCertificateMetadata$Arn": "<p>The Amazon Resource Name (ARN) specifying the server certificate. For more information about ARNs and how to use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
        "UpdateSAMLProviderRequest$SAMLProviderArn": "<p>The Amazon Resource Name (ARN) of the SAML provider to update.</p>",
        "UpdateSAMLProviderResponse$SAMLProviderArn": "<p>The Amazon Resource Name (ARN) of the SAML provider that was updated.</p>",
        "User$Arn": "<p>The Amazon Resource Name (ARN) specifying the user. For more information about ARNs and how to use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>"
      }
    },
    "assignmentStatusType": {
      "base": null,
      "refs": {
        "ListVirtualMFADevicesRequest$AssignmentStatus": "<p>The status (unassigned or assigned) of the devices to list. If you do not specify an <code>AssignmentStatus</code>, the action defaults to <code>Any</code> which lists both assigned and unassigned virtual MFA devices. </p>"
      }
    },
    "authenticationCodeType": {
      "base": null,
      "refs": {
        "EnableMFADeviceRequest$AuthenticationCode1": "<p>An authentication code emitted by the device.</p>",
        "EnableMFADeviceRequest$AuthenticationCode2": "<p>A subsequent authentication code emitted by the device.</p>",
        "ResyncMFADeviceRequest$AuthenticationCode1": "<p>An authentication code emitted by the device.</p>",
        "ResyncMFADeviceRequest$AuthenticationCode2": "<p>A subsequent authentication code emitted by the device.</p>"
      }
    },
    "booleanObjectType": {
      "base": null,
      "refs": {
        "PasswordPolicy$HardExpiry": "<p>Specifies whether IAM users are prevented from setting a new password after their password has expired.</p>",
        "UpdateAccountPasswordPolicyRequest$HardExpiry": "<p>Prevents IAM users from setting a new password after their password has expired.</p> <p>Default value: false</p>",
        "UpdateLoginProfileRequest$PasswordResetRequired": "<p>Require the specified user to set a new password on next sign-in.</p>"
      }
    },
    "booleanType": {
      "base": null,
      "refs": {
        "CreateLoginProfileRequest$PasswordResetRequired": "<p>Specifies whether the user is required to set a new password on next sign-in.</p>",
        "GetGroupResponse$IsTruncated": "<p>A flag that indicates whether there are more user names to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more user names in the list.</p>",
        "ListAccessKeysResponse$IsTruncated": "<p>A flag that indicates whether there are more keys to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more keys in the list.</p>",
        "ListAccountAliasesResponse$IsTruncated": "<p>A flag that indicates whether there are more account aliases to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more account aliases in the list.</p>",
        "ListGroupPoliciesResponse$IsTruncated": "<p>A flag that indicates whether there are more policy names to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more policy names in the list.</p>",
        "ListGroupsForUserResponse$IsTruncated": "<p>A flag that indicates whether there are more groups to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more groups in the list.</p>",
        "ListGroupsResponse$IsTruncated": "<p>A flag that indicates whether there are more groups to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more groups in the list.</p>",
        "ListInstanceProfilesForRoleResponse$IsTruncated": "<p>A flag that indicates whether there are more instance profiles to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more instance profiles in the list.</p>",
        "ListInstanceProfilesResponse$IsTruncated": "<p>A flag that indicates whether there are more instance profiles to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more instance profiles in the list.</p>",
        "ListMFADevicesResponse$IsTruncated": "<p>A flag that indicates whether there are more MFA devices to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more MFA devices in the list.</p>",
        "ListRolePoliciesResponse$IsTruncated": "<p>A flag that indicates whether there are more policy names to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more policy names in the list.</p>",
        "ListRolesResponse$IsTruncated": "<p>A flag that indicates whether there are more roles to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more roles in the list.</p>",
        "ListServerCertificatesResponse$IsTruncated": "<p>A flag that indicates whether there are more server certificates to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more server certificates in the list.</p>",
        "ListSigningCertificatesResponse$IsTruncated": "<p>A flag that indicates whether there are more certificate IDs to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more certificates in the list.</p>",
        "ListUserPoliciesResponse$IsTruncated": "<p>A flag that indicates whether there are more policy names to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more policy names in the list.</p>",
        "ListUsersResponse$IsTruncated": "<p>A flag that indicates whether there are more user names to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more users in the list.</p>",
        "ListVirtualMFADevicesResponse$IsTruncated": "<p>A flag that indicates whether there are more items to list. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items the list.</p>",
        "LoginProfile$PasswordResetRequired": "<p>Specifies whether the user is required to set a new password on next sign-in.</p>",
        "PasswordPolicy$RequireSymbols": "<p>Specifies whether to require symbols for IAM user passwords.</p>",
        "PasswordPolicy$RequireNumbers": "<p>Specifies whether to require numbers for IAM user passwords.</p>",
        "PasswordPolicy$RequireUppercaseCharacters": "<p>Specifies whether to require uppercase characters for IAM user passwords.</p>",
        "PasswordPolicy$RequireLowercaseCharacters": "<p>Specifies whether to require lowercase characters for IAM user passwords.</p>",
        "PasswordPolicy$AllowUsersToChangePassword": "<p>Specifies whether IAM users are allowed to change their own password.</p>",
        "PasswordPolicy$ExpirePasswords": "<p>Specifies whether IAM users are required to change their password after a specified number of days.</p>",
        "UpdateAccountPasswordPolicyRequest$RequireSymbols": "Specifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters: ! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | ' Default value: false",
        "UpdateAccountPasswordPolicyRequest$RequireNumbers": "<p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p> <p>Default value: false</p>",
        "UpdateAccountPasswordPolicyRequest$RequireUppercaseCharacters": "<p>Specifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).</p> <p>Default value: false</p>",
        "UpdateAccountPasswordPolicyRequest$RequireLowercaseCharacters": "<p>Specifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).</p> <p>Default value: false</p>",
        "UpdateAccountPasswordPolicyRequest$AllowUsersToChangePassword": "<p>Allows all IAM users in your account to use the AWS Management Console to change their own passwords. For more information, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/HowToPwdIAMUser.html\">Letting IAM Users Change Their Own Passwords</a> in the <i>Using IAM</i> guide.</p> <p>Default value: false</p>"
      }
    },
    "certificateBodyType": {
      "base": null,
      "refs": {
        "ServerCertificate$CertificateBody": "<p>The contents of the public key certificate.</p>",
        "SigningCertificate$CertificateBody": "<p>The contents of the signing certificate.</p>",
        "UploadServerCertificateRequest$CertificateBody": "<p>The contents of the public key certificate in PEM-encoded format.</p>",
        "UploadSigningCertificateRequest$CertificateBody": "<p>The contents of the signing certificate.</p>"
      }
    },
    "certificateChainType": {
      "base": null,
      "refs": {
        "ServerCertificate$CertificateChain": "<p>The contents of the public key certificate chain.</p>",
        "UploadServerCertificateRequest$CertificateChain": "<p>The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain.</p>"
      }
    },
    "certificateIdType": {
      "base": null,
      "refs": {
        "DeleteSigningCertificateRequest$CertificateId": "<p>ID of the signing certificate to delete.</p>",
        "SigningCertificate$CertificateId": "<p>The ID for the signing certificate.</p>",
        "UpdateSigningCertificateRequest$CertificateId": "<p>The ID of the signing certificate you want to update.</p>"
      }
    },
    "certificateListType": {
      "base": "<p>The certificateListType data type contains a list of signing certificates.</p> <p> This data type is used as a response element in the action <a>ListSigningCertificates</a>. </p>",
      "refs": {
        "ListSigningCertificatesResponse$Certificates": "<p>A list of the user's signing certificate information.</p>"
      }
    },
    "credentialReportExpiredExceptionMessage": {
      "base": null,
      "refs": {
        "CredentialReportExpiredException$message": null
      }
    },
    "credentialReportNotPresentExceptionMessage": {
      "base": null,
      "refs": {
        "CredentialReportNotPresentException$message": null
      }
    },
    "credentialReportNotReadyExceptionMessage": {
      "base": null,
      "refs": {
        "CredentialReportNotReadyException$message": null
      }
    },
    "dateType": {
      "base": null,
      "refs": {
        "AccessKey$CreateDate": "<p>The date when the access key was created.</p>",
        "AccessKeyMetadata$CreateDate": "<p>The date when the access key was created.</p>",
        "GetCredentialReportResponse$GeneratedTime": "<p>The time and date when the credential report was created, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>.</p>",
        "GetSAMLProviderResponse$CreateDate": "<p>The date and time when the SAML provider was created.</p>",
        "GetSAMLProviderResponse$ValidUntil": "<p>The expiration date and time for the SAML provider.</p>",
        "Group$CreateDate": "<p>The date when the group was created.</p>",
        "InstanceProfile$CreateDate": "<p>The date when the instance profile was created.</p>",
        "LoginProfile$CreateDate": "<p>The date when the password for the user was created.</p>",
        "MFADevice$EnableDate": "<p>The date when the MFA device was enabled for the user.</p>",
        "Role$CreateDate": "<p>The date when the role was created.</p>",
        "SAMLProviderListEntry$ValidUntil": "<p>The expiration date and time for the SAML provider.</p>",
        "SAMLProviderListEntry$CreateDate": "<p>The date and time when the SAML provider was created.</p>",
        "ServerCertificateMetadata$UploadDate": "<p>The date when the server certificate was uploaded.</p>",
        "ServerCertificateMetadata$Expiration": "<p>The date on which the certificate is set to expire.</p>",
        "SigningCertificate$UploadDate": "<p>The date when the signing certificate was uploaded.</p>",
        "User$CreateDate": "<p>The date when the user was created.</p>",
        "VirtualMFADevice$EnableDate": null
      }
    },
    "deleteConflictMessage": {
      "base": null,
      "refs": {
        "DeleteConflictException$message": null
      }
    },
    "duplicateCertificateMessage": {
      "base": null,
      "refs": {
        "DuplicateCertificateException$message": null
      }
    },
    "entityAlreadyExistsMessage": {
      "base": null,
      "refs": {
        "EntityAlreadyExistsException$message": null
      }
    },
    "entityTemporarilyUnmodifiableMessage": {
      "base": null,
      "refs": {
        "EntityTemporarilyUnmodifiableException$message": null
      }
    },
    "existingUserNameType": {
      "base": null,
      "refs": {
        "AddUserToGroupRequest$UserName": "<p>Name of the user to add.</p>",
        "CreateAccessKeyRequest$UserName": "<p>The user name that the new key will belong to.</p>",
        "DeactivateMFADeviceRequest$UserName": "<p>Name of the user whose MFA device you want to deactivate.</p>",
        "DeleteAccessKeyRequest$UserName": "<p>Name of the user whose key you want to delete.</p>",
        "DeleteSigningCertificateRequest$UserName": "<p>Name of the user the signing certificate belongs to.</p>",
        "DeleteUserPolicyRequest$UserName": "<p>Name of the user the policy is associated with.</p>",
        "DeleteUserRequest$UserName": "<p>Name of the user to delete.</p>",
        "EnableMFADeviceRequest$UserName": "<p>Name of the user for whom you want to enable the MFA device.</p>",
        "GetUserPolicyRequest$UserName": "<p>Name of the user who the policy is associated with.</p>",
        "GetUserPolicyResponse$UserName": "<p>The user the policy is associated with.</p>",
        "GetUserRequest$UserName": "<p>Name of the user to get information about.</p> <p>This parameter is optional. If it is not included, it defaults to the user making the request.</p>",
        "ListAccessKeysRequest$UserName": "<p>Name of the user.</p>",
        "ListGroupsForUserRequest$UserName": "<p>The name of the user to list groups for.</p>",
        "ListMFADevicesRequest$UserName": "<p>Name of the user whose MFA devices you want to list.</p>",
        "ListSigningCertificatesRequest$UserName": "<p>The name of the user.</p>",
        "ListUserPoliciesRequest$UserName": "<p>The name of the user to list policies for.</p>",
        "PutUserPolicyRequest$UserName": "<p>Name of the user to associate the policy with.</p>",
        "RemoveUserFromGroupRequest$UserName": "<p>Name of the user to remove.</p>",
        "ResyncMFADeviceRequest$UserName": "<p>Name of the user whose MFA device you want to resynchronize.</p>",
        "UpdateAccessKeyRequest$UserName": "<p>Name of the user whose key you want to update.</p>",
        "UpdateSigningCertificateRequest$UserName": "<p>Name of the user the signing certificate belongs to.</p>",
        "UpdateUserRequest$UserName": "<p>Name of the user to update. If you're changing the name of the user, this is the original user name.</p>",
        "UploadSigningCertificateRequest$UserName": "<p>Name of the user the signing certificate is for.</p>"
      }
    },
    "groupListType": {
      "base": "<p>The groupListType data type contains a list of groups.</p> <p> This data type is used as a response element in the action <a>ListGroups</a>. </p>",
      "refs": {
        "ListGroupsForUserResponse$Groups": "<p>A list of groups.</p>",
        "ListGroupsResponse$Groups": "<p>A list of groups.</p>"
      }
    },
    "groupNameType": {
      "base": null,
      "refs": {
        "AddUserToGroupRequest$GroupName": "<p>Name of the group to update.</p>",
        "CreateGroupRequest$GroupName": "<p>Name of the group to create. Do not include the path in this value.</p>",
        "DeleteGroupPolicyRequest$GroupName": "<p>Name of the group the policy is associated with.</p>",
        "DeleteGroupRequest$GroupName": "<p>Name of the group to delete.</p>",
        "GetGroupPolicyRequest$GroupName": "<p>Name of the group the policy is associated with.</p>",
        "GetGroupPolicyResponse$GroupName": "<p>The group the policy is associated with.</p>",
        "GetGroupRequest$GroupName": "<p>Name of the group.</p>",
        "Group$GroupName": "<p>The name that identifies the group.</p>",
        "ListGroupPoliciesRequest$GroupName": "<p>The name of the group to list policies for.</p>",
        "PutGroupPolicyRequest$GroupName": "<p>Name of the group to associate the policy with.</p>",
        "RemoveUserFromGroupRequest$GroupName": "<p>Name of the group to update.</p>",
        "UpdateGroupRequest$GroupName": "<p>Name of the group to update. If you're changing the name of the group, this is the original name.</p>",
        "UpdateGroupRequest$NewGroupName": "<p>New name for the group. Only include this if changing the group's name.</p>"
      }
    },
    "idType": {
      "base": null,
      "refs": {
        "Group$GroupId": "<p>The stable and unique string identifying the group. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
        "InstanceProfile$InstanceProfileId": "<p>The stable and unique string identifying the instance profile. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
        "Role$RoleId": "<p>The stable and unique string identifying the role. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
        "ServerCertificateMetadata$ServerCertificateId": "<p>The stable and unique string identifying the server certificate. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
        "User$UserId": "<p>The stable and unique string identifying the user. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>"
      }
    },
    "instanceProfileListType": {
      "base": "<p>The instanceProfileListType data type contains a list of instance profiles.</p> <p> This data type is used as a response element in the actions <a>ListInstanceProfiles</a> and <a>ListInstanceProfilesForRole</a>. </p>",
      "refs": {
        "ListInstanceProfilesForRoleResponse$InstanceProfiles": "<p>A list of instance profiles.</p>",
        "ListInstanceProfilesResponse$InstanceProfiles": "<p>A list of instance profiles.</p>"
      }
    },
    "instanceProfileNameType": {
      "base": null,
      "refs": {
        "AddRoleToInstanceProfileRequest$InstanceProfileName": "<p>Name of the instance profile to update.</p>",
        "CreateInstanceProfileRequest$InstanceProfileName": "<p>Name of the instance profile to create.</p>",
        "DeleteInstanceProfileRequest$InstanceProfileName": "<p>Name of the instance profile to delete.</p>",
        "GetInstanceProfileRequest$InstanceProfileName": "<p>Name of the instance profile to get information about.</p>",
        "InstanceProfile$InstanceProfileName": "<p>The name identifying the instance profile.</p>",
        "RemoveRoleFromInstanceProfileRequest$InstanceProfileName": "<p>Name of the instance profile to update.</p>"
      }
    },
    "invalidAuthenticationCodeMessage": {
      "base": null,
      "refs": {
        "InvalidAuthenticationCodeException$message": null
      }
    },
    "invalidCertificateMessage": {
      "base": null,
      "refs": {
        "InvalidCertificateException$message": null
      }
    },
    "invalidInputMessage": {
      "base": null,
      "refs": {
        "InvalidInputException$message": null
      }
    },
    "invalidUserTypeMessage": {
      "base": null,
      "refs": {
        "InvalidUserTypeException$message": null
      }
    },
    "keyPairMismatchMessage": {
      "base": null,
      "refs": {
        "KeyPairMismatchException$message": null
      }
    },
    "limitExceededMessage": {
      "base": null,
      "refs": {
        "LimitExceededException$message": null
      }
    },
    "malformedCertificateMessage": {
      "base": null,
      "refs": {
        "MalformedCertificateException$message": null
      }
    },
    "malformedPolicyDocumentMessage": {
      "base": null,
      "refs": {
        "MalformedPolicyDocumentException$message": null
      }
    },
    "markerType": {
      "base": null,
      "refs": {
        "GetGroupRequest$Marker": "<p>Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "GetGroupResponse$Marker": "<p>If IsTruncated is <code>true</code>, then this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListAccessKeysRequest$Marker": "<p>Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListAccessKeysResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListAccountAliasesRequest$Marker": "<p>Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListAccountAliasesResponse$Marker": "<p>Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListGroupPoliciesRequest$Marker": "<p>Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListGroupPoliciesResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListGroupsForUserRequest$Marker": "<p>Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListGroupsForUserResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListGroupsRequest$Marker": "<p>Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListGroupsResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListInstanceProfilesForRoleRequest$Marker": "<p>Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListInstanceProfilesForRoleResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListInstanceProfilesRequest$Marker": "<p>Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListInstanceProfilesResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListMFADevicesRequest$Marker": "<p>Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListMFADevicesResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListRolePoliciesRequest$Marker": "<p>Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListRolePoliciesResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListRolesRequest$Marker": "<p>Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListRolesResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListServerCertificatesRequest$Marker": "<p>Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListServerCertificatesResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListSigningCertificatesRequest$Marker": "<p>Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListSigningCertificatesResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListUserPoliciesRequest$Marker": "<p>Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListUserPoliciesResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListUsersRequest$Marker": "<p>Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListUsersResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>",
        "ListVirtualMFADevicesRequest$Marker": "<p>Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>",
        "ListVirtualMFADevicesResponse$Marker": "<p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
      }
    },
    "maxItemsType": {
      "base": null,
      "refs": {
        "GetGroupRequest$MaxItems": "<p>Use this only when paginating results to indicate the maximum number of user names you want in the response. If there are additional user names beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListAccessKeysRequest$MaxItems": "<p>Use this parameter only when paginating results to indicate the maximum number of keys you want in the response. If there are additional keys beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListAccountAliasesRequest$MaxItems": "<p>Use this only when paginating results to indicate the maximum number of account aliases you want in the response. If there are additional account aliases beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListGroupPoliciesRequest$MaxItems": "<p>Use this only when paginating results to indicate the maximum number of policy names you want in the response. If there are additional policy names beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListGroupsForUserRequest$MaxItems": "<p>Use this only when paginating results to indicate the maximum number of groups you want in the response. If there are additional groups beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListGroupsRequest$MaxItems": "<p>Use this only when paginating results to indicate the maximum number of groups you want in the response. If there are additional groups beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListInstanceProfilesForRoleRequest$MaxItems": "<p>Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are additional user names beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListInstanceProfilesRequest$MaxItems": "<p>Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are additional user names beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListMFADevicesRequest$MaxItems": "<p>Use this only when paginating results to indicate the maximum number of MFA devices you want in the response. If there are additional MFA devices beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListRolePoliciesRequest$MaxItems": "<p>Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are additional user names beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListRolesRequest$MaxItems": "<p>Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are additional user names beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListServerCertificatesRequest$MaxItems": "<p>Use this only when paginating results to indicate the maximum number of server certificates you want in the response. If there are additional server certificates beyond the maximum you specify, the <code>IsTruncated</code> response element will be set to <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListSigningCertificatesRequest$MaxItems": "<p>Use this only when paginating results to indicate the maximum number of certificate IDs you want in the response. If there are additional certificate IDs beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListUserPoliciesRequest$MaxItems": "<p>Use this only when paginating results to indicate the maximum number of policy names you want in the response. If there are additional policy names beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListUsersRequest$MaxItems": "<p>Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are additional user names beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>",
        "ListVirtualMFADevicesRequest$MaxItems": "<p>Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are additional user names beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>. This parameter is optional. If you do not include it, it defaults to 100.</p>"
      }
    },
    "maxPasswordAgeType": {
      "base": null,
      "refs": {
        "PasswordPolicy$MaxPasswordAge": "<p>The number of days that an IAM user password is valid.</p>",
        "UpdateAccountPasswordPolicyRequest$MaxPasswordAge": "<p>The number of days that an IAM user password is valid. The default value of 0 means IAM user passwords never expire.</p> <p>Default value: 0</p>"
      }
    },
    "mfaDeviceListType": {
      "base": "<p>Contains a list of MFA devices.</p> <p> This data type is used as a response element in the actions <a>ListMFADevices</a> and <a>ListVirtualMFADevices</a>. </p>",
      "refs": {
        "ListMFADevicesResponse$MFADevices": "<p>A list of MFA devices.</p>"
      }
    },
    "minimumPasswordLengthType": {
      "base": null,
      "refs": {
        "PasswordPolicy$MinimumPasswordLength": "<p>Minimum length to require for IAM user passwords.</p>",
        "UpdateAccountPasswordPolicyRequest$MinimumPasswordLength": "<p>The minimum number of characters allowed in an IAM user password.</p> <p>Default value: 6</p>"
      }
    },
    "noSuchEntityMessage": {
      "base": null,
      "refs": {
        "NoSuchEntityException$message": null
      }
    },
    "passwordPolicyViolationMessage": {
      "base": null,
      "refs": {
        "PasswordPolicyViolationException$message": null
      }
    },
    "passwordReusePreventionType": {
      "base": null,
      "refs": {
        "PasswordPolicy$PasswordReusePrevention": "<p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p>",
        "UpdateAccountPasswordPolicyRequest$PasswordReusePrevention": "<p>Specifies the number of previous passwords that IAM users are prevented from reusing. The default value of 0 means IAM users are not prevented from reusing previous passwords.</p> <p>Default value: 0</p>"
      }
    },
    "passwordType": {
      "base": null,
      "refs": {
        "ChangePasswordRequest$OldPassword": "<p>The IAM users's current password.</p>",
        "ChangePasswordRequest$NewPassword": "<p>The new password. The new password must conform to the AWS account's password policy, if one exists.</p>",
        "CreateLoginProfileRequest$Password": "<p>The new password for the user.</p>",
        "UpdateLoginProfileRequest$Password": "<p>The new password for the specified user.</p>"
      }
    },
    "pathPrefixType": {
      "base": null,
      "refs": {
        "ListGroupsRequest$PathPrefix": "<p>The path prefix for filtering the results. For example: <code>/division_abc/subdivision_xyz/</code>, which would get all groups whose path starts with <code>/division_abc/subdivision_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all groups.</p>",
        "ListInstanceProfilesRequest$PathPrefix": "<p>The path prefix for filtering the results. For example: <code>/application_abc/component_xyz/</code>, which would get all instance profiles whose path starts with <code>/application_abc/component_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all instance profiles.</p>",
        "ListRolesRequest$PathPrefix": "<p>The path prefix for filtering the results. For example: <code>/application_abc/component_xyz/</code>, which would get all roles whose path starts with <code>/application_abc/component_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all roles.</p>",
        "ListServerCertificatesRequest$PathPrefix": "<p>The path prefix for filtering the results. For example: <code>/company/servercerts</code> would get all server certificates for which the path starts with <code>/company/servercerts</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all server certificates.</p>",
        "ListUsersRequest$PathPrefix": "<p>The path prefix for filtering the results. For example: <code>/division_abc/subdivision_xyz/</code>, which would get all user names whose path starts with <code>/division_abc/subdivision_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all user names.</p>"
      }
    },
    "pathType": {
      "base": null,
      "refs": {
        "CreateGroupRequest$Path": "<p>The path to the group. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>",
        "CreateInstanceProfileRequest$Path": "<p>The path to the instance profile. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>",
        "CreateRoleRequest$Path": "<p>The path to the role. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>",
        "CreateUserRequest$Path": "<p>The path for the user name. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>",
        "CreateVirtualMFADeviceRequest$Path": "<p>The path for the virtual MFA device. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>",
        "Group$Path": "<p>Path to the group. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
        "InstanceProfile$Path": "<p>Path to the instance profile. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
        "Role$Path": "<p>Path to the role. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
        "ServerCertificateMetadata$Path": "<p>Path to the server certificate. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>",
        "UpdateGroupRequest$NewPath": "<p>New path for the group. Only include this if changing the group's path.</p>",
        "UpdateServerCertificateRequest$NewPath": "<p>The new path for the server certificate. Include this only if you are updating the server certificate's path.</p>",
        "UpdateUserRequest$NewPath": "<p>New path for the user. Include this parameter only if you're changing the user's path.</p>",
        "UploadServerCertificateRequest$Path": "<p>The path for the server certificate. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>",
        "User$Path": "<p>Path to the user. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">Identifiers for IAM Entities</a> in the <i>Using IAM</i> guide.</p>"
      }
    },
    "policyDocumentType": {
      "base": null,
      "refs": {
        "CreateRoleRequest$AssumeRolePolicyDocument": "<p>The policy that grants an entity permission to assume the role.</p>",
        "GetGroupPolicyResponse$PolicyDocument": "<p>The policy document.</p>",
        "GetRolePolicyResponse$PolicyDocument": "<p>The policy document.</p>",
        "GetUserPolicyResponse$PolicyDocument": "<p>The policy document.</p>",
        "PutGroupPolicyRequest$PolicyDocument": "<p>The policy document.</p>",
        "PutRolePolicyRequest$PolicyDocument": "<p>The policy document.</p>",
        "PutUserPolicyRequest$PolicyDocument": "<p>The policy document.</p>",
        "Role$AssumeRolePolicyDocument": "<p>The policy that grants an entity permission to assume the role.</p> <p>The returned policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to <a href=\"http://www.faqs.org/rfcs/rfc3986.html\">http://www.faqs.org/rfcs/rfc3986.html</a>.</p>",
        "UpdateAssumeRolePolicyRequest$PolicyDocument": "<p>The policy that grants an entity permission to assume the role.</p>"
      }
    },
    "policyNameListType": {
      "base": "<p>The policyNameListType data type contains a list of policy names.</p> <p> This data type is used as a response element in the action <a>ListPolicies</a>. </p>",
      "refs": {
        "ListGroupPoliciesResponse$PolicyNames": "<p>A list of policy names.</p>",
        "ListRolePoliciesResponse$PolicyNames": "<p>A list of policy names.</p>",
        "ListUserPoliciesResponse$PolicyNames": "<p>A list of policy names.</p>"
      }
    },
    "policyNameType": {
      "base": null,
      "refs": {
        "DeleteGroupPolicyRequest$PolicyName": "<p>Name of the policy document to delete.</p>",
        "DeleteRolePolicyRequest$PolicyName": "<p>Name of the policy document to delete.</p>",
        "DeleteUserPolicyRequest$PolicyName": "<p>Name of the policy document to delete.</p>",
        "GetGroupPolicyRequest$PolicyName": "<p>Name of the policy document to get.</p>",
        "GetGroupPolicyResponse$PolicyName": "<p>The name of the policy.</p>",
        "GetRolePolicyRequest$PolicyName": "<p>Name of the policy document to get.</p>",
        "GetRolePolicyResponse$PolicyName": "<p>The name of the policy.</p>",
        "GetUserPolicyRequest$PolicyName": "<p>Name of the policy document to get.</p>",
        "GetUserPolicyResponse$PolicyName": "<p>The name of the policy.</p>",
        "PutGroupPolicyRequest$PolicyName": "<p>Name of the policy document.</p>",
        "PutRolePolicyRequest$PolicyName": "<p>Name of the policy document.</p>",
        "PutUserPolicyRequest$PolicyName": "<p>Name of the policy document.</p>",
        "policyNameListType$member": null
      }
    },
    "privateKeyType": {
      "base": null,
      "refs": {
        "UploadServerCertificateRequest$PrivateKey": "<p>The contents of the private key in PEM-encoded format.</p>"
      }
    },
    "roleListType": {
      "base": "<p>The roleListType data type contains a list of roles.</p> <p> This data type is used as a response element in the action <a>ListRoles</a>. </p>",
      "refs": {
        "InstanceProfile$Roles": "<p>The role associated with the instance profile.</p>",
        "ListRolesResponse$Roles": "<p>A list of roles.</p>"
      }
    },
    "roleNameType": {
      "base": null,
      "refs": {
        "AddRoleToInstanceProfileRequest$RoleName": "<p>Name of the role to add.</p>",
        "CreateRoleRequest$RoleName": "<p>Name of the role to create.</p>",
        "DeleteRolePolicyRequest$RoleName": "<p>Name of the role the associated with the policy.</p>",
        "DeleteRoleRequest$RoleName": "<p>Name of the role to delete.</p>",
        "GetRolePolicyRequest$RoleName": "<p>Name of the role associated with the policy.</p>",
        "GetRolePolicyResponse$RoleName": "<p>The role the policy is associated with.</p>",
        "GetRoleRequest$RoleName": "<p>Name of the role to get information about.</p>",
        "ListInstanceProfilesForRoleRequest$RoleName": "<p>The name of the role to list instance profiles for.</p>",
        "ListRolePoliciesRequest$RoleName": "<p>The name of the role to list policies for.</p>",
        "PutRolePolicyRequest$RoleName": "<p>Name of the role to associate the policy with.</p>",
        "RemoveRoleFromInstanceProfileRequest$RoleName": "<p>Name of the role to remove.</p>",
        "Role$RoleName": "<p>The name identifying the role.</p>",
        "UpdateAssumeRolePolicyRequest$RoleName": "<p>Name of the role to update.</p>"
      }
    },
    "serialNumberType": {
      "base": null,
      "refs": {
        "DeactivateMFADeviceRequest$SerialNumber": "<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p>",
        "DeleteVirtualMFADeviceRequest$SerialNumber": "<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN.</p>",
        "EnableMFADeviceRequest$SerialNumber": "<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p>",
        "MFADevice$SerialNumber": "<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p>",
        "ResyncMFADeviceRequest$SerialNumber": "<p>Serial number that uniquely identifies the MFA device.</p>",
        "VirtualMFADevice$SerialNumber": "<p>The serial number associated with <code>VirtualMFADevice</code>.</p>"
      }
    },
    "serverCertificateMetadataListType": {
      "base": null,
      "refs": {
        "ListServerCertificatesResponse$ServerCertificateMetadataList": "<p>A list of server certificates.</p>"
      }
    },
    "serverCertificateNameType": {
      "base": null,
      "refs": {
        "DeleteServerCertificateRequest$ServerCertificateName": "<p>The name of the server certificate you want to delete.</p>",
        "GetServerCertificateRequest$ServerCertificateName": "<p>The name of the server certificate you want to retrieve information about.</p>",
        "ServerCertificateMetadata$ServerCertificateName": "<p>The name that identifies the server certificate.</p>",
        "UpdateServerCertificateRequest$ServerCertificateName": "<p>The name of the server certificate that you want to update.</p>",
        "UpdateServerCertificateRequest$NewServerCertificateName": "<p>The new name for the server certificate. Include this only if you are updating the server certificate's name.</p>",
        "UploadServerCertificateRequest$ServerCertificateName": "<p>The name for the server certificate. Do not include the path in this value.</p>"
      }
    },
    "statusType": {
      "base": null,
      "refs": {
        "AccessKey$Status": "<p>The status of the access key. <code>Active</code> means the key is valid for API calls, while <code>Inactive</code> means it is not.</p>",
        "AccessKeyMetadata$Status": "<p>The status of the access key. <code>Active</code> means the key is valid for API calls, while <code>Inactive</code> means it is not.</p>",
        "SigningCertificate$Status": "<p>The status of the signing certificate. <code>Active</code> means the key is valid for API calls, while <code>Inactive</code> means it is not.</p>",
        "UpdateAccessKeyRequest$Status": "<p>The status you want to assign to the secret access key. <code>Active</code> means the key can be used for API calls to AWS, while <code>Inactive</code> means the key cannot be used.</p>",
        "UpdateSigningCertificateRequest$Status": "<p>The status you want to assign to the certificate. <code>Active</code> means the certificate can be used for API calls to AWS, while <code>Inactive</code> means the certificate cannot be used.</p>"
      }
    },
    "summaryKeyType": {
      "base": null,
      "refs": {
        "summaryMapType$key": null
      }
    },
    "summaryMapType": {
      "base": null,
      "refs": {
        "GetAccountSummaryResponse$SummaryMap": "<p>A set of key value pairs containing account-level information.</p> <p> <code>SummaryMap</code> contains the following keys: <ul> <li><p><code>AccessKeysPerUserQuota</code> - Maximum number of access keys that can be created per user</p></li> <li><p><code>AccountMFAEnabled</code> - 1 if the root account has an MFA device assigned to it, 0 otherwise</p></li> <li><p><code>AssumeRolePolicySizeQuota</code> - Maximum allowed size for assume role policy documents (in kilobytes) </p></li> <li><p><code>GroupPolicySizeQuota</code> - Maximum allowed size for Group policy documents (in kilobytes)</p></li> <li><p><code>Groups</code> - Number of Groups for the AWS account</p></li> <li><p><code>GroupsPerUserQuota</code> - Maximum number of groups a user can belong to</p></li> <li><p><code>GroupsQuota</code> - Maximum groups allowed for the AWS account</p></li> <li><p><code>InstanceProfiles</code> - Number of instance profiles for the AWS account</p></li> <li><p><code>InstanceProfilesQuota</code> - Maximum instance profiles allowed for the AWS account</p></li> <li><p><code>MFADevices</code> - Number of MFA devices, either assigned or unassigned</p></li> <li><p><code>MFADevicesInUse</code> - Number of MFA devices that have been assigned to an IAM user or to the root account</p></li> <li><p><code>RolePolicySizeQuota</code> - Maximum allowed size for role policy documents (in kilobytes) </p></li> <li><p><code>Roles</code> - Number of roles for the AWS account</p></li> <li><p><code>RolesQuota</code> - Maximum roles allowed for the AWS account</p></li> <li><p><code>ServerCertificates</code> - Number of server certificates for the AWS account</p></li> <li><p><code>ServerCertificatesQuota</code> - Maximum server certificates allowed for the AWS account</p></li> <li><p><code>SigningCertificatesPerUserQuota</code> - Maximum number of X509 certificates allowed for a user</p></li> <li><p><code>UserPolicySizeQuota</code> - Maximum allowed size for user policy documents (in kilobytes) </p></li> <li><p><code>Users</code> - Number of users for the AWS account</p></li> <li><p><code>UsersQuota</code> - Maximum users allowed for the AWS account</p></li> </ul> </p>"
      }
    },
    "summaryValueType": {
      "base": null,
      "refs": {
        "summaryMapType$value": null
      }
    },
    "userListType": {
      "base": "<p>The userListType data type contains a list of users.</p> <p> This data type is used as a response element in the actions <a>GetGroup</a> and <a>ListUsers</a>. </p>",
      "refs": {
        "GetGroupResponse$Users": "<p>A list of users in the group.</p>",
        "ListUsersResponse$Users": "<p>A list of users.</p>"
      }
    },
    "userNameType": {
      "base": null,
      "refs": {
        "AccessKey$UserName": "<p>Name of the user the key is associated with.</p>",
        "AccessKeyMetadata$UserName": "<p>Name of the user the key is associated with.</p>",
        "CreateLoginProfileRequest$UserName": "<p>Name of the user to create a password for.</p>",
        "CreateUserRequest$UserName": "<p>Name of the user to create.</p>",
        "DeleteLoginProfileRequest$UserName": "<p>Name of the user whose password you want to delete.</p>",
        "GetLoginProfileRequest$UserName": "<p>Name of the user whose login profile you want to retrieve.</p>",
        "LoginProfile$UserName": "<p>The name of the user, which can be used for signing in to the AWS Management Console.</p>",
        "MFADevice$UserName": "<p>The user with whom the MFA device is associated.</p>",
        "SigningCertificate$UserName": "<p>Name of the user the signing certificate is associated with.</p>",
        "UpdateLoginProfileRequest$UserName": "<p>Name of the user whose password you want to update.</p>",
        "UpdateUserRequest$NewUserName": "<p>New name for the user. Include this parameter only if you're changing the user's name.</p>",
        "User$UserName": "<p>The name identifying the user.</p>"
      }
    },
    "virtualMFADeviceListType": {
      "base": null,
      "refs": {
        "ListVirtualMFADevicesResponse$VirtualMFADevices": null
      }
    },
    "virtualMFADeviceName": {
      "base": null,
      "refs": {
        "CreateVirtualMFADeviceRequest$VirtualMFADeviceName": "<p>The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device.</p>"
      }
    }
  }
}
